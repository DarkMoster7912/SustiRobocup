
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000046  00800200  00002038  000020cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002038  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000b0  00800246  00800246  00002112  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002112  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002144  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000220  00000000  00000000  00002184  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000028b6  00000000  00000000  000023a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001377  00000000  00000000  00004c5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001455  00000000  00000000  00005fd1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000724  00000000  00000000  00007428  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000097e  00000000  00000000  00007b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000162d  00000000  00000000  000084ca  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  00009af7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	9a c0       	rjmp	.+308    	; 0x136 <__ctors_end>
       2:	00 00       	nop
       4:	b8 c0       	rjmp	.+368    	; 0x176 <__bad_interrupt>
       6:	00 00       	nop
       8:	b6 c0       	rjmp	.+364    	; 0x176 <__bad_interrupt>
       a:	00 00       	nop
       c:	ab c3       	rjmp	.+1878   	; 0x764 <__vector_3>
       e:	00 00       	nop
      10:	16 c4       	rjmp	.+2092   	; 0x83e <__vector_4>
      12:	00 00       	nop
      14:	78 c4       	rjmp	.+2288   	; 0x906 <__vector_5>
      16:	00 00       	nop
      18:	da c4       	rjmp	.+2484   	; 0x9ce <__vector_6>
      1a:	00 00       	nop
      1c:	ac c0       	rjmp	.+344    	; 0x176 <__bad_interrupt>
      1e:	00 00       	nop
      20:	aa c0       	rjmp	.+340    	; 0x176 <__bad_interrupt>
      22:	00 00       	nop
      24:	a8 c0       	rjmp	.+336    	; 0x176 <__bad_interrupt>
      26:	00 00       	nop
      28:	a6 c0       	rjmp	.+332    	; 0x176 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	b0 c0       	rjmp	.+352    	; 0x18e <__vector_11>
      2e:	00 00       	nop
      30:	a2 c0       	rjmp	.+324    	; 0x176 <__bad_interrupt>
      32:	00 00       	nop
      34:	a0 c0       	rjmp	.+320    	; 0x176 <__bad_interrupt>
      36:	00 00       	nop
      38:	9e c0       	rjmp	.+316    	; 0x176 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	9c c0       	rjmp	.+312    	; 0x176 <__bad_interrupt>
      3e:	00 00       	nop
      40:	9a c0       	rjmp	.+308    	; 0x176 <__bad_interrupt>
      42:	00 00       	nop
      44:	98 c0       	rjmp	.+304    	; 0x176 <__bad_interrupt>
      46:	00 00       	nop
      48:	96 c0       	rjmp	.+300    	; 0x176 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	94 c0       	rjmp	.+296    	; 0x176 <__bad_interrupt>
      4e:	00 00       	nop
      50:	92 c0       	rjmp	.+292    	; 0x176 <__bad_interrupt>
      52:	00 00       	nop
      54:	90 c0       	rjmp	.+288    	; 0x176 <__bad_interrupt>
      56:	00 00       	nop
      58:	8e c0       	rjmp	.+284    	; 0x176 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	8c c0       	rjmp	.+280    	; 0x176 <__bad_interrupt>
      5e:	00 00       	nop
      60:	8a c0       	rjmp	.+276    	; 0x176 <__bad_interrupt>
      62:	00 00       	nop
      64:	88 c0       	rjmp	.+272    	; 0x176 <__bad_interrupt>
      66:	00 00       	nop
      68:	86 c0       	rjmp	.+268    	; 0x176 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	84 c0       	rjmp	.+264    	; 0x176 <__bad_interrupt>
      6e:	00 00       	nop
      70:	82 c0       	rjmp	.+260    	; 0x176 <__bad_interrupt>
      72:	00 00       	nop
      74:	80 c0       	rjmp	.+256    	; 0x176 <__bad_interrupt>
      76:	00 00       	nop
      78:	7e c0       	rjmp	.+252    	; 0x176 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	7c c0       	rjmp	.+248    	; 0x176 <__bad_interrupt>
      7e:	00 00       	nop
      80:	7a c0       	rjmp	.+244    	; 0x176 <__bad_interrupt>
      82:	00 00       	nop
      84:	78 c0       	rjmp	.+240    	; 0x176 <__bad_interrupt>
      86:	00 00       	nop
      88:	76 c0       	rjmp	.+236    	; 0x176 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	74 c0       	rjmp	.+232    	; 0x176 <__bad_interrupt>
      8e:	00 00       	nop
      90:	72 c0       	rjmp	.+228    	; 0x176 <__bad_interrupt>
      92:	00 00       	nop
      94:	70 c0       	rjmp	.+224    	; 0x176 <__bad_interrupt>
      96:	00 00       	nop
      98:	6e c0       	rjmp	.+220    	; 0x176 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	e8 c1       	rjmp	.+976    	; 0x46e <__vector_39>
      9e:	00 00       	nop
      a0:	6a c0       	rjmp	.+212    	; 0x176 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	68 c0       	rjmp	.+208    	; 0x176 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0c 94 15 0a 	jmp	0x142a	; 0x142a <__vector_42>
      ac:	64 c0       	rjmp	.+200    	; 0x176 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	62 c0       	rjmp	.+196    	; 0x176 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	60 c0       	rjmp	.+192    	; 0x176 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	5e c0       	rjmp	.+188    	; 0x176 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	5c c0       	rjmp	.+184    	; 0x176 <__bad_interrupt>
      be:	00 00       	nop
      c0:	5a c0       	rjmp	.+180    	; 0x176 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	58 c0       	rjmp	.+176    	; 0x176 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	56 c0       	rjmp	.+172    	; 0x176 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	54 c0       	rjmp	.+168    	; 0x176 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	52 c0       	rjmp	.+164    	; 0x176 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	50 c0       	rjmp	.+160    	; 0x176 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	4e c0       	rjmp	.+156    	; 0x176 <__bad_interrupt>
      da:	00 00       	nop
      dc:	4c c0       	rjmp	.+152    	; 0x176 <__bad_interrupt>
      de:	00 00       	nop
      e0:	4a c0       	rjmp	.+148    	; 0x176 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	57 03       	mulsu	r21, r23
      e6:	61 03       	mulsu	r22, r17
      e8:	6f 03       	fmul	r22, r23
      ea:	79 03       	fmul	r23, r17
      ec:	85 03       	fmuls	r16, r21
      ee:	85 03       	fmuls	r16, r21
      f0:	85 03       	fmuls	r16, r21
      f2:	85 03       	fmuls	r16, r21
      f4:	85 03       	fmuls	r16, r21
      f6:	85 03       	fmuls	r16, r21
      f8:	85 03       	fmuls	r16, r21
      fa:	85 03       	fmuls	r16, r21
      fc:	85 03       	fmuls	r16, r21
      fe:	85 03       	fmuls	r16, r21
     100:	85 03       	fmuls	r16, r21
     102:	85 03       	fmuls	r16, r21
     104:	85 03       	fmuls	r16, r21
     106:	85 03       	fmuls	r16, r21
     108:	85 03       	fmuls	r16, r21
     10a:	85 03       	fmuls	r16, r21
     10c:	85 03       	fmuls	r16, r21
     10e:	85 03       	fmuls	r16, r21
     110:	85 03       	fmuls	r16, r21
     112:	85 03       	fmuls	r16, r21
     114:	85 03       	fmuls	r16, r21
     116:	85 03       	fmuls	r16, r21
     118:	85 03       	fmuls	r16, r21
     11a:	85 03       	fmuls	r16, r21
     11c:	85 03       	fmuls	r16, r21
     11e:	85 03       	fmuls	r16, r21
     120:	85 03       	fmuls	r16, r21
     122:	85 03       	fmuls	r16, r21
     124:	85 03       	fmuls	r16, r21
     126:	85 03       	fmuls	r16, r21
     128:	85 03       	fmuls	r16, r21
     12a:	85 03       	fmuls	r16, r21
     12c:	85 03       	fmuls	r16, r21
     12e:	7e 03       	fmul	r23, r22
     130:	7c 03       	fmul	r23, r20
     132:	80 03       	fmuls	r16, r16
     134:	82 03       	fmuls	r16, r18

00000136 <__ctors_end>:
     136:	11 24       	eor	r1, r1
     138:	1f be       	out	0x3f, r1	; 63
     13a:	cf ef       	ldi	r28, 0xFF	; 255
     13c:	d1 e2       	ldi	r29, 0x21	; 33
     13e:	de bf       	out	0x3e, r29	; 62
     140:	cd bf       	out	0x3d, r28	; 61
     142:	00 e0       	ldi	r16, 0x00	; 0
     144:	0c bf       	out	0x3c, r16	; 60

00000146 <__do_copy_data>:
     146:	12 e0       	ldi	r17, 0x02	; 2
     148:	a0 e0       	ldi	r26, 0x00	; 0
     14a:	b2 e0       	ldi	r27, 0x02	; 2
     14c:	e8 e3       	ldi	r30, 0x38	; 56
     14e:	f0 e2       	ldi	r31, 0x20	; 32
     150:	00 e0       	ldi	r16, 0x00	; 0
     152:	0b bf       	out	0x3b, r16	; 59
     154:	02 c0       	rjmp	.+4      	; 0x15a <__do_copy_data+0x14>
     156:	07 90       	elpm	r0, Z+
     158:	0d 92       	st	X+, r0
     15a:	a6 34       	cpi	r26, 0x46	; 70
     15c:	b1 07       	cpc	r27, r17
     15e:	d9 f7       	brne	.-10     	; 0x156 <__do_copy_data+0x10>

00000160 <__do_clear_bss>:
     160:	22 e0       	ldi	r18, 0x02	; 2
     162:	a6 e4       	ldi	r26, 0x46	; 70
     164:	b2 e0       	ldi	r27, 0x02	; 2
     166:	01 c0       	rjmp	.+2      	; 0x16a <.do_clear_bss_start>

00000168 <.do_clear_bss_loop>:
     168:	1d 92       	st	X+, r1

0000016a <.do_clear_bss_start>:
     16a:	a6 3f       	cpi	r26, 0xF6	; 246
     16c:	b2 07       	cpc	r27, r18
     16e:	e1 f7       	brne	.-8      	; 0x168 <.do_clear_bss_loop>
     170:	cf d2       	rcall	.+1438   	; 0x710 <main>
     172:	0c 94 1a 10 	jmp	0x2034	; 0x2034 <_exit>

00000176 <__bad_interrupt>:
     176:	44 cf       	rjmp	.-376    	; 0x0 <__vectors>

00000178 <PCINT_Init>:
volatile int N=0;
//volatile int a=0;


void PCINT_Init(){
	PCICR = 1<<PCIE2;
     178:	84 e0       	ldi	r24, 0x04	; 4
     17a:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7c0068>
	PCIFR = 1<<PCIF2;
     17e:	8b bb       	out	0x1b, r24	; 27
	PCMSK2 = (1<<PCINT16) | (1<<PCINT17);
     180:	83 e0       	ldi	r24, 0x03	; 3
     182:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x7c006d>
	sei();
     186:	78 94       	sei
	DDRK=0;
     188:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
     18c:	08 95       	ret

0000018e <__vector_11>:
			}
		}	
	}
}*/

ISR(PCINT2_vect){
     18e:	1f 92       	push	r1
     190:	0f 92       	push	r0
     192:	0f b6       	in	r0, 0x3f	; 63
     194:	0f 92       	push	r0
     196:	11 24       	eor	r1, r1
     198:	0b b6       	in	r0, 0x3b	; 59
     19a:	0f 92       	push	r0
     19c:	2f 93       	push	r18
     19e:	3f 93       	push	r19
     1a0:	4f 93       	push	r20
     1a2:	5f 93       	push	r21
     1a4:	6f 93       	push	r22
     1a6:	7f 93       	push	r23
     1a8:	8f 93       	push	r24
     1aa:	9f 93       	push	r25
     1ac:	af 93       	push	r26
     1ae:	bf 93       	push	r27
     1b0:	cf 93       	push	r28
     1b2:	ef 93       	push	r30
     1b4:	ff 93       	push	r31
	uint8_t changedbits;

	changedbits = PINK ^ n;
     1b6:	e6 e0       	ldi	r30, 0x06	; 6
     1b8:	f1 e0       	ldi	r31, 0x01	; 1
     1ba:	c0 81       	ld	r28, Z
     1bc:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     1c0:	c8 27       	eor	r28, r24
	n = PINK;
     1c2:	80 81       	ld	r24, Z
     1c4:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
	
	s++;
     1c8:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <s>
     1cc:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <s+0x1>
     1d0:	01 96       	adiw	r24, 0x01	; 1
     1d2:	90 93 4d 02 	sts	0x024D, r25	; 0x80024d <s+0x1>
     1d6:	80 93 4c 02 	sts	0x024C, r24	; 0x80024c <s>
	d++;
     1da:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <d>
     1de:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <d+0x1>
     1e2:	01 96       	adiw	r24, 0x01	; 1
     1e4:	90 93 4b 02 	sts	0x024B, r25	; 0x80024b <d+0x1>
     1e8:	80 93 4a 02 	sts	0x024A, r24	; 0x80024a <d>
	c++;
     1ec:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <c>
     1f0:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <c+0x1>
     1f4:	01 96       	adiw	r24, 0x01	; 1
     1f6:	90 93 49 02 	sts	0x0249, r25	; 0x800249 <c+0x1>
     1fa:	80 93 48 02 	sts	0x0248, r24	; 0x800248 <c>
	N++;
     1fe:	80 91 46 02 	lds	r24, 0x0246	; 0x800246 <__data_end>
     202:	90 91 47 02 	lds	r25, 0x0247	; 0x800247 <__data_end+0x1>
     206:	01 96       	adiw	r24, 0x01	; 1
     208:	90 93 47 02 	sts	0x0247, r25	; 0x800247 <__data_end+0x1>
     20c:	80 93 46 02 	sts	0x0246, r24	; 0x800246 <__data_end>
	
	//_delay_ms(100);
	
	Serial_Send(N); Serial_Send("\n");
     210:	40 91 46 02 	lds	r20, 0x0246	; 0x800246 <__data_end>
     214:	50 91 47 02 	lds	r21, 0x0247	; 0x800247 <__data_end+0x1>
     218:	95 2f       	mov	r25, r21
     21a:	99 0f       	add	r25, r25
     21c:	99 0b       	sbc	r25, r25
     21e:	24 2f       	mov	r18, r20
     220:	35 2f       	mov	r19, r21
     222:	49 2f       	mov	r20, r25
     224:	59 2f       	mov	r21, r25
     226:	69 2f       	mov	r22, r25
     228:	79 2f       	mov	r23, r25
     22a:	89 2f       	mov	r24, r25
     22c:	0e 94 4f 0c 	call	0x189e	; 0x189e <Serial_Send_Int>
     230:	87 e0       	ldi	r24, 0x07	; 7
     232:	92 e0       	ldi	r25, 0x02	; 2
     234:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
	
	if(changedbits & (1 << PK0))
     238:	c0 ff       	sbrs	r28, 0
     23a:	5a c0       	rjmp	.+180    	; 0x2f0 <__vector_11+0x162>
	{
		if(c==1){
     23c:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <c>
     240:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <c+0x1>
     244:	01 97       	sbiw	r24, 0x01	; 1
     246:	11 f5       	brne	.+68     	; 0x28c <__vector_11+0xfe>
			Serial_Send("17\n");
     248:	85 e0       	ldi	r24, 0x05	; 5
     24a:	92 e0       	ldi	r25, 0x02	; 2
     24c:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     250:	2f ef       	ldi	r18, 0xFF	; 255
     252:	83 ed       	ldi	r24, 0xD3	; 211
     254:	90 e3       	ldi	r25, 0x30	; 48
     256:	21 50       	subi	r18, 0x01	; 1
     258:	80 40       	sbci	r24, 0x00	; 0
     25a:	90 40       	sbci	r25, 0x00	; 0
     25c:	e1 f7       	brne	.-8      	; 0x256 <__vector_11+0xc8>
     25e:	00 c0       	rjmp	.+0      	; 0x260 <__vector_11+0xd2>
     260:	00 00       	nop
			_delay_ms(1000);
			Serial_Send("Ciao\n");
     262:	89 e0       	ldi	r24, 0x09	; 9
     264:	92 e0       	ldi	r25, 0x02	; 2
     266:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
     26a:	2f ef       	ldi	r18, 0xFF	; 255
     26c:	85 ea       	ldi	r24, 0xA5	; 165
     26e:	9e e0       	ldi	r25, 0x0E	; 14
     270:	21 50       	subi	r18, 0x01	; 1
     272:	80 40       	sbci	r24, 0x00	; 0
     274:	90 40       	sbci	r25, 0x00	; 0
     276:	e1 f7       	brne	.-8      	; 0x270 <__vector_11+0xe2>
     278:	00 c0       	rjmp	.+0      	; 0x27a <__vector_11+0xec>
     27a:	00 00       	nop
			_delay_ms(300);
			Serial_Send("17\n");
     27c:	85 e0       	ldi	r24, 0x05	; 5
     27e:	92 e0       	ldi	r25, 0x02	; 2
     280:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
			n = 0xFF;
     284:	8f ef       	ldi	r24, 0xFF	; 255
     286:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
     28a:	32 c0       	rjmp	.+100    	; 0x2f0 <__vector_11+0x162>
		}
		else{
			if(s==1){
     28c:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <s>
     290:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <s+0x1>
     294:	01 97       	sbiw	r24, 0x01	; 1
     296:	11 f5       	brne	.+68     	; 0x2dc <__vector_11+0x14e>
				Serial_Send("Stop\n");
     298:	8f e0       	ldi	r24, 0x0F	; 15
     29a:	92 e0       	ldi	r25, 0x02	; 2
     29c:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
     2a0:	2f ef       	ldi	r18, 0xFF	; 255
     2a2:	83 ed       	ldi	r24, 0xD3	; 211
     2a4:	90 e3       	ldi	r25, 0x30	; 48
     2a6:	21 50       	subi	r18, 0x01	; 1
     2a8:	80 40       	sbci	r24, 0x00	; 0
     2aa:	90 40       	sbci	r25, 0x00	; 0
     2ac:	e1 f7       	brne	.-8      	; 0x2a6 <__vector_11+0x118>
     2ae:	00 c0       	rjmp	.+0      	; 0x2b0 <__vector_11+0x122>
     2b0:	00 00       	nop
				_delay_ms(1000);
				Serial_Send("Indietro\n");
     2b2:	85 e1       	ldi	r24, 0x15	; 21
     2b4:	92 e0       	ldi	r25, 0x02	; 2
     2b6:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
     2ba:	2f ef       	ldi	r18, 0xFF	; 255
     2bc:	85 ea       	ldi	r24, 0xA5	; 165
     2be:	9e e0       	ldi	r25, 0x0E	; 14
     2c0:	21 50       	subi	r18, 0x01	; 1
     2c2:	80 40       	sbci	r24, 0x00	; 0
     2c4:	90 40       	sbci	r25, 0x00	; 0
     2c6:	e1 f7       	brne	.-8      	; 0x2c0 <__vector_11+0x132>
     2c8:	00 c0       	rjmp	.+0      	; 0x2ca <__vector_11+0x13c>
     2ca:	00 00       	nop
				_delay_ms(300);
				Serial_Send("Stop\n");
     2cc:	8f e0       	ldi	r24, 0x0F	; 15
     2ce:	92 e0       	ldi	r25, 0x02	; 2
     2d0:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
				n = 0xFF;
     2d4:	8f ef       	ldi	r24, 0xFF	; 255
     2d6:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
     2da:	0a c0       	rjmp	.+20     	; 0x2f0 <__vector_11+0x162>
			}
			else if(s>1){			//10 uF per fitro alti rimbalzo
     2dc:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <s>
     2e0:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <s+0x1>
     2e4:	02 97       	sbiw	r24, 0x02	; 2
     2e6:	24 f0       	brlt	.+8      	; 0x2f0 <__vector_11+0x162>
				s=0;
     2e8:	10 92 4d 02 	sts	0x024D, r1	; 0x80024d <s+0x1>
     2ec:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <s>
				//n=0xFF;
			}
		}
	}

	if(changedbits & (1 << PK1))
     2f0:	c1 ff       	sbrs	r28, 1
     2f2:	5a c0       	rjmp	.+180    	; 0x3a8 <__vector_11+0x21a>
	{
		if(c==1){
     2f4:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <c>
     2f8:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <c+0x1>
     2fc:	01 97       	sbiw	r24, 0x01	; 1
     2fe:	11 f5       	brne	.+68     	; 0x344 <__vector_11+0x1b6>
			Serial_Send("Stop\n");
     300:	8f e0       	ldi	r24, 0x0F	; 15
     302:	92 e0       	ldi	r25, 0x02	; 2
     304:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
     308:	2f ef       	ldi	r18, 0xFF	; 255
     30a:	83 ed       	ldi	r24, 0xD3	; 211
     30c:	90 e3       	ldi	r25, 0x30	; 48
     30e:	21 50       	subi	r18, 0x01	; 1
     310:	80 40       	sbci	r24, 0x00	; 0
     312:	90 40       	sbci	r25, 0x00	; 0
     314:	e1 f7       	brne	.-8      	; 0x30e <__vector_11+0x180>
     316:	00 c0       	rjmp	.+0      	; 0x318 <__vector_11+0x18a>
     318:	00 00       	nop
			_delay_ms(1000);
			Serial_Send("Indietro\n");
     31a:	85 e1       	ldi	r24, 0x15	; 21
     31c:	92 e0       	ldi	r25, 0x02	; 2
     31e:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
     322:	2f ef       	ldi	r18, 0xFF	; 255
     324:	85 ea       	ldi	r24, 0xA5	; 165
     326:	9e e0       	ldi	r25, 0x0E	; 14
     328:	21 50       	subi	r18, 0x01	; 1
     32a:	80 40       	sbci	r24, 0x00	; 0
     32c:	90 40       	sbci	r25, 0x00	; 0
     32e:	e1 f7       	brne	.-8      	; 0x328 <__vector_11+0x19a>
     330:	00 c0       	rjmp	.+0      	; 0x332 <__vector_11+0x1a4>
     332:	00 00       	nop
			_delay_ms(300);
			Serial_Send("Stop\n");
     334:	8f e0       	ldi	r24, 0x0F	; 15
     336:	92 e0       	ldi	r25, 0x02	; 2
     338:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
			n = 0xFF;
     33c:	8f ef       	ldi	r24, 0xFF	; 255
     33e:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
     342:	32 c0       	rjmp	.+100    	; 0x3a8 <__vector_11+0x21a>
		}
		else{
			if(d==1){
     344:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <d>
     348:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <d+0x1>
     34c:	01 97       	sbiw	r24, 0x01	; 1
     34e:	11 f5       	brne	.+68     	; 0x394 <__vector_11+0x206>
				Serial_Send("17\n");
     350:	85 e0       	ldi	r24, 0x05	; 5
     352:	92 e0       	ldi	r25, 0x02	; 2
     354:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
     358:	2f ef       	ldi	r18, 0xFF	; 255
     35a:	83 ed       	ldi	r24, 0xD3	; 211
     35c:	90 e3       	ldi	r25, 0x30	; 48
     35e:	21 50       	subi	r18, 0x01	; 1
     360:	80 40       	sbci	r24, 0x00	; 0
     362:	90 40       	sbci	r25, 0x00	; 0
     364:	e1 f7       	brne	.-8      	; 0x35e <__vector_11+0x1d0>
     366:	00 c0       	rjmp	.+0      	; 0x368 <__vector_11+0x1da>
     368:	00 00       	nop
				_delay_ms(1000);
				Serial_Send("Ciao\n");
     36a:	89 e0       	ldi	r24, 0x09	; 9
     36c:	92 e0       	ldi	r25, 0x02	; 2
     36e:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
     372:	2f ef       	ldi	r18, 0xFF	; 255
     374:	85 ea       	ldi	r24, 0xA5	; 165
     376:	9e e0       	ldi	r25, 0x0E	; 14
     378:	21 50       	subi	r18, 0x01	; 1
     37a:	80 40       	sbci	r24, 0x00	; 0
     37c:	90 40       	sbci	r25, 0x00	; 0
     37e:	e1 f7       	brne	.-8      	; 0x378 <__vector_11+0x1ea>
     380:	00 c0       	rjmp	.+0      	; 0x382 <__vector_11+0x1f4>
     382:	00 00       	nop
				_delay_ms(300);
				Serial_Send("17\n");
     384:	85 e0       	ldi	r24, 0x05	; 5
     386:	92 e0       	ldi	r25, 0x02	; 2
     388:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
				n = 0xFF;
     38c:	8f ef       	ldi	r24, 0xFF	; 255
     38e:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
     392:	0a c0       	rjmp	.+20     	; 0x3a8 <__vector_11+0x21a>
			}
			else if(d>1){
     394:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <d>
     398:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <d+0x1>
     39c:	02 97       	sbiw	r24, 0x02	; 2
     39e:	24 f0       	brlt	.+8      	; 0x3a8 <__vector_11+0x21a>
				d=0;
     3a0:	10 92 4b 02 	sts	0x024B, r1	; 0x80024b <d+0x1>
     3a4:	10 92 4a 02 	sts	0x024A, r1	; 0x80024a <d>
				//n=0xFF;
			}
		}
		
	}
	if(changedbits & (1<<PK4)){
     3a8:	c4 ff       	sbrs	r28, 4
     3aa:	39 c0       	rjmp	.+114    	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
		if(N==1){
     3ac:	80 91 46 02 	lds	r24, 0x0246	; 0x800246 <__data_end>
     3b0:	90 91 47 02 	lds	r25, 0x0247	; 0x800247 <__data_end+0x1>
     3b4:	01 97       	sbiw	r24, 0x01	; 1
     3b6:	29 f5       	brne	.+74     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
			Serial_Send("Nero fermati\n");Serial_Send(N); Serial_Send("\n");
     3b8:	8f e1       	ldi	r24, 0x1F	; 31
     3ba:	92 e0       	ldi	r25, 0x02	; 2
     3bc:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
     3c0:	40 91 46 02 	lds	r20, 0x0246	; 0x800246 <__data_end>
     3c4:	50 91 47 02 	lds	r21, 0x0247	; 0x800247 <__data_end+0x1>
     3c8:	95 2f       	mov	r25, r21
     3ca:	99 0f       	add	r25, r25
     3cc:	99 0b       	sbc	r25, r25
     3ce:	24 2f       	mov	r18, r20
     3d0:	35 2f       	mov	r19, r21
     3d2:	49 2f       	mov	r20, r25
     3d4:	59 2f       	mov	r21, r25
     3d6:	69 2f       	mov	r22, r25
     3d8:	79 2f       	mov	r23, r25
     3da:	89 2f       	mov	r24, r25
     3dc:	0e 94 4f 0c 	call	0x189e	; 0x189e <Serial_Send_Int>
     3e0:	87 e0       	ldi	r24, 0x07	; 7
     3e2:	92 e0       	ldi	r25, 0x02	; 2
     3e4:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
     3e8:	2f ef       	ldi	r18, 0xFF	; 255
     3ea:	83 ed       	ldi	r24, 0xD3	; 211
     3ec:	90 e3       	ldi	r25, 0x30	; 48
     3ee:	21 50       	subi	r18, 0x01	; 1
     3f0:	80 40       	sbci	r24, 0x00	; 0
     3f2:	90 40       	sbci	r25, 0x00	; 0
     3f4:	e1 f7       	brne	.-8      	; 0x3ee <__vector_11+0x260>
     3f6:	00 c0       	rjmp	.+0      	; 0x3f8 <__vector_11+0x26a>
     3f8:	00 00       	nop
			_delay_ms(1000);
			n = 0xFF;
     3fa:	8f ef       	ldi	r24, 0xFF	; 255
     3fc:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
     400:	0e c0       	rjmp	.+28     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
		}
		else if(N>1){
     402:	80 91 46 02 	lds	r24, 0x0246	; 0x800246 <__data_end>
     406:	90 91 47 02 	lds	r25, 0x0247	; 0x800247 <__data_end+0x1>
     40a:	02 97       	sbiw	r24, 0x02	; 2
     40c:	44 f0       	brlt	.+16     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
			N=0;
     40e:	10 92 47 02 	sts	0x0247, r1	; 0x800247 <__data_end+0x1>
     412:	10 92 46 02 	sts	0x0246, r1	; 0x800246 <__data_end>
			Serial_Send("Niente\n");
     416:	8d e2       	ldi	r24, 0x2D	; 45
     418:	92 e0       	ldi	r25, 0x02	; 2
     41a:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
		}
	}
     41e:	ff 91       	pop	r31
     420:	ef 91       	pop	r30
     422:	cf 91       	pop	r28
     424:	bf 91       	pop	r27
     426:	af 91       	pop	r26
     428:	9f 91       	pop	r25
     42a:	8f 91       	pop	r24
     42c:	7f 91       	pop	r23
     42e:	6f 91       	pop	r22
     430:	5f 91       	pop	r21
     432:	4f 91       	pop	r20
     434:	3f 91       	pop	r19
     436:	2f 91       	pop	r18
     438:	0f 90       	pop	r0
     43a:	0b be       	out	0x3b, r0	; 59
     43c:	0f 90       	pop	r0
     43e:	0f be       	out	0x3f, r0	; 63
     440:	0f 90       	pop	r0
     442:	1f 90       	pop	r1
     444:	18 95       	reti

00000446 <I2C_setCallbacks>:
{
	// abilita bit e pulisci dati
	cli();
	TWCR = 0;
	TWAR = 0;
	sei();
     446:	90 93 51 02 	sts	0x0251, r25	; 0x800251 <I2C_recv+0x1>
     44a:	80 93 50 02 	sts	0x0250, r24	; 0x800250 <I2C_recv>
     44e:	70 93 4f 02 	sts	0x024F, r23	; 0x80024f <I2C_req+0x1>
     452:	60 93 4e 02 	sts	0x024E, r22	; 0x80024e <I2C_req>
     456:	08 95       	ret

00000458 <I2C_init>:
     458:	f8 94       	cli
     45a:	88 0f       	add	r24, r24
     45c:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7c00ba>
     460:	85 ec       	ldi	r24, 0xC5	; 197
     462:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     466:	78 94       	sei
     468:	0c 94 10 0c 	jmp	0x1820	; 0x1820 <Serial_Init>
     46c:	08 95       	ret

0000046e <__vector_39>:
}

ISR(TWI_vect)
{
     46e:	1f 92       	push	r1
     470:	0f 92       	push	r0
     472:	0f b6       	in	r0, 0x3f	; 63
     474:	0f 92       	push	r0
     476:	11 24       	eor	r1, r1
     478:	0b b6       	in	r0, 0x3b	; 59
     47a:	0f 92       	push	r0
     47c:	2f 93       	push	r18
     47e:	3f 93       	push	r19
     480:	4f 93       	push	r20
     482:	5f 93       	push	r21
     484:	6f 93       	push	r22
     486:	7f 93       	push	r23
     488:	8f 93       	push	r24
     48a:	9f 93       	push	r25
     48c:	af 93       	push	r26
     48e:	bf 93       	push	r27
     490:	ef 93       	push	r30
     492:	ff 93       	push	r31
	switch(TW_STATUS)
     494:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
     498:	88 7f       	andi	r24, 0xF8	; 248
     49a:	80 38       	cpi	r24, 0x80	; 128
     49c:	49 f0       	breq	.+18     	; 0x4b0 <__vector_39+0x42>
     49e:	18 f4       	brcc	.+6      	; 0x4a6 <__vector_39+0x38>
     4a0:	88 23       	and	r24, r24
     4a2:	19 f1       	breq	.+70     	; 0x4ea <__vector_39+0x7c>
     4a4:	28 c0       	rjmp	.+80     	; 0x4f6 <__vector_39+0x88>
     4a6:	88 3a       	cpi	r24, 0xA8	; 168
     4a8:	71 f0       	breq	.+28     	; 0x4c6 <__vector_39+0x58>
     4aa:	88 3b       	cpi	r24, 0xB8	; 184
     4ac:	a9 f0       	breq	.+42     	; 0x4d8 <__vector_39+0x6a>
     4ae:	23 c0       	rjmp	.+70     	; 0x4f6 <__vector_39+0x88>
	{
		case TW_SR_DATA_ACK:
		//dati ricevuti da master, richiama il receive callback
		I2C_recv(TWDR);
     4b0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
     4b4:	e0 91 50 02 	lds	r30, 0x0250	; 0x800250 <I2C_recv>
     4b8:	f0 91 51 02 	lds	r31, 0x0251	; 0x800251 <I2C_recv+0x1>
     4bc:	19 95       	eicall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     4be:	85 ec       	ldi	r24, 0xC5	; 197
     4c0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
		break;
     4c4:	1b c0       	rjmp	.+54     	; 0x4fc <__vector_39+0x8e>
		case TW_ST_SLA_ACK:
		// master irchiede dati, richiama il receive callback
		I2C_req();
     4c6:	e0 91 4e 02 	lds	r30, 0x024E	; 0x80024e <I2C_req>
     4ca:	f0 91 4f 02 	lds	r31, 0x024F	; 0x80024f <I2C_req+0x1>
     4ce:	19 95       	eicall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     4d0:	85 ec       	ldi	r24, 0xC5	; 197
     4d2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
		break;
     4d6:	12 c0       	rjmp	.+36     	; 0x4fc <__vector_39+0x8e>
		case TW_ST_DATA_ACK:
		// master irchiede dati, richiama il receive callback
		I2C_req();
     4d8:	e0 91 4e 02 	lds	r30, 0x024E	; 0x80024e <I2C_req>
     4dc:	f0 91 4f 02 	lds	r31, 0x024F	; 0x80024f <I2C_req+0x1>
     4e0:	19 95       	eicall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     4e2:	85 ec       	ldi	r24, 0xC5	; 197
     4e4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
		break;
     4e8:	09 c0       	rjmp	.+18     	; 0x4fc <__vector_39+0x8e>
		case TW_BUS_ERROR:
		// qualsiasi stato di errore, preparea TWI per essere reimpostato
		TWCR = 0;
     4ea:	ec eb       	ldi	r30, 0xBC	; 188
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	10 82       	st	Z, r1
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     4f0:	85 ec       	ldi	r24, 0xC5	; 197
     4f2:	80 83       	st	Z, r24
		break;
     4f4:	03 c0       	rjmp	.+6      	; 0x4fc <__vector_39+0x8e>
		default:
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     4f6:	85 ec       	ldi	r24, 0xC5	; 197
     4f8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
		break;
	}
     4fc:	ff 91       	pop	r31
     4fe:	ef 91       	pop	r30
     500:	bf 91       	pop	r27
     502:	af 91       	pop	r26
     504:	9f 91       	pop	r25
     506:	8f 91       	pop	r24
     508:	7f 91       	pop	r23
     50a:	6f 91       	pop	r22
     50c:	5f 91       	pop	r21
     50e:	4f 91       	pop	r20
     510:	3f 91       	pop	r19
     512:	2f 91       	pop	r18
     514:	0f 90       	pop	r0
     516:	0b be       	out	0x3b, r0	; 59
     518:	0f 90       	pop	r0
     51a:	0f be       	out	0x3f, r0	; 63
     51c:	0f 90       	pop	r0
     51e:	1f 90       	pop	r1
     520:	18 95       	reti

00000522 <I2C_received>:
#include "Fine_Corsa.h"

volatile int data = 0;
void I2C_received(uint8_t received_data)		//ricevo da master
{
	data = received_data;
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <data+0x1>
     528:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <data>
     52c:	08 95       	ret

0000052e <I2C_requested>:
}

void I2C_requested()						//trasmetto a master
{
	I2C_transmitByte(data);
     52e:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <data>
     532:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <data+0x1>
void I2C_stop(void);
void I2C_setCallbacks(void (*recv)(uint8_t), void (*req)());

inline void __attribute__((always_inline)) I2C_transmitByte(uint8_t data)
{
	TWDR = data;
     536:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
     53a:	08 95       	ret

0000053c <controllo_telecamera>:
	}
}

void controllo_telecamera(void){
	int i;
	if(data == 0x36){
     53c:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <data>
     540:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <data+0x1>
     544:	c6 97       	sbiw	r24, 0x36	; 54
     546:	01 f5       	brne	.+64     	; 0x588 <controllo_telecamera+0x4c>
		Serial_Send("croce\n");
     548:	85 e3       	ldi	r24, 0x35	; 53
     54a:	92 e0       	ldi	r25, 0x02	; 2
     54c:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
		for(i=0; i<5; i++){
     550:	80 e0       	ldi	r24, 0x00	; 0
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	16 c0       	rjmp	.+44     	; 0x582 <controllo_telecamera+0x46>
			PORTF = 1;			//lampeggia led
     556:	21 e0       	ldi	r18, 0x01	; 1
     558:	21 bb       	out	0x11, r18	; 17
     55a:	2f ef       	ldi	r18, 0xFF	; 255
     55c:	38 ef       	ldi	r19, 0xF8	; 248
     55e:	45 e1       	ldi	r20, 0x15	; 21
     560:	21 50       	subi	r18, 0x01	; 1
     562:	30 40       	sbci	r19, 0x00	; 0
     564:	40 40       	sbci	r20, 0x00	; 0
     566:	e1 f7       	brne	.-8      	; 0x560 <controllo_telecamera+0x24>
     568:	00 c0       	rjmp	.+0      	; 0x56a <controllo_telecamera+0x2e>
     56a:	00 00       	nop
			_delay_ms(450);
			PORTF = 0;				//lampeggia led
     56c:	11 ba       	out	0x11, r1	; 17
     56e:	2f ef       	ldi	r18, 0xFF	; 255
     570:	38 ef       	ldi	r19, 0xF8	; 248
     572:	45 e1       	ldi	r20, 0x15	; 21
     574:	21 50       	subi	r18, 0x01	; 1
     576:	30 40       	sbci	r19, 0x00	; 0
     578:	40 40       	sbci	r20, 0x00	; 0
     57a:	e1 f7       	brne	.-8      	; 0x574 <controllo_telecamera+0x38>
     57c:	00 c0       	rjmp	.+0      	; 0x57e <controllo_telecamera+0x42>
     57e:	00 00       	nop

void controllo_telecamera(void){
	int i;
	if(data == 0x36){
		Serial_Send("croce\n");
		for(i=0; i<5; i++){
     580:	01 96       	adiw	r24, 0x01	; 1
     582:	85 30       	cpi	r24, 0x05	; 5
     584:	91 05       	cpc	r25, r1
     586:	3c f3       	brlt	.-50     	; 0x556 <controllo_telecamera+0x1a>
     588:	08 95       	ret

0000058a <interrupt_rasp>:
	else;
}


void interrupt_rasp(){
	PORTF = 2;
     58a:	82 e0       	ldi	r24, 0x02	; 2
     58c:	81 bb       	out	0x11, r24	; 17
     58e:	8f e3       	ldi	r24, 0x3F	; 63
     590:	9c e9       	ldi	r25, 0x9C	; 156
     592:	01 97       	sbiw	r24, 0x01	; 1
     594:	f1 f7       	brne	.-4      	; 0x592 <interrupt_rasp+0x8>
     596:	00 c0       	rjmp	.+0      	; 0x598 <interrupt_rasp+0xe>
     598:	00 00       	nop
	_delay_ms(10);
	PORTF = 0;
     59a:	11 ba       	out	0x11, r1	; 17
     59c:	08 95       	ret

0000059e <delay_movimento>:

volatile int data_ret = 0;
volatile int seg_enc=0;

void delay_movimento( int c){
	if(c==1){			//avanti
     59e:	81 30       	cpi	r24, 0x01	; 1
     5a0:	91 05       	cpc	r25, r1
     5a2:	09 f0       	breq	.+2      	; 0x5a6 <delay_movimento+0x8>
     5a4:	40 c0       	rjmp	.+128    	; 0x626 <delay_movimento+0x88>
		while ((return_seg_enc() != 1390) && (data!=0x34) );
     5a6:	d9 d0       	rcall	.+434    	; 0x75a <return_seg_enc>
     5a8:	8e 36       	cpi	r24, 0x6E	; 110
     5aa:	95 40       	sbci	r25, 0x05	; 5
     5ac:	31 f0       	breq	.+12     	; 0x5ba <delay_movimento+0x1c>
     5ae:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <data>
     5b2:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <data+0x1>
     5b6:	c4 97       	sbiw	r24, 0x34	; 52
     5b8:	b1 f7       	brne	.-20     	; 0x5a6 <delay_movimento+0x8>
		if(data == 0x34){
     5ba:	80 91 56 02 	lds	r24, 0x0256	; 0x800256 <data>
     5be:	90 91 57 02 	lds	r25, 0x0257	; 0x800257 <data+0x1>
     5c2:	c4 97       	sbiw	r24, 0x34	; 52
			indietro();
     5c4:	c1 f4       	brne	.+48     	; 0x5f6 <delay_movimento+0x58>
     5c6:	d0 d7       	rcall	.+4000   	; 0x1568 <indietro>
     5c8:	8f e5       	ldi	r24, 0x5F	; 95
     5ca:	9a ee       	ldi	r25, 0xEA	; 234
     5cc:	01 97       	sbiw	r24, 0x01	; 1
     5ce:	f1 f7       	brne	.-4      	; 0x5cc <delay_movimento+0x2e>
     5d0:	00 c0       	rjmp	.+0      	; 0x5d2 <delay_movimento+0x34>
     5d2:	00 00       	nop
			_delay_ms(15);
			stop_tutto();
     5d4:	0e 94 db 0b 	call	0x17b6	; 0x17b6 <stop_tutto>
     5d8:	9f ef       	ldi	r25, 0xFF	; 255
     5da:	25 ea       	ldi	r18, 0xA5	; 165
     5dc:	8e e0       	ldi	r24, 0x0E	; 14
     5de:	91 50       	subi	r25, 0x01	; 1
     5e0:	20 40       	sbci	r18, 0x00	; 0
     5e2:	80 40       	sbci	r24, 0x00	; 0
     5e4:	e1 f7       	brne	.-8      	; 0x5de <delay_movimento+0x40>
     5e6:	00 c0       	rjmp	.+0      	; 0x5e8 <delay_movimento+0x4a>
			_delay_ms(300);
			interrupt_rasp();
     5e8:	00 00       	nop
     5ea:	cf df       	rcall	.-98     	; 0x58a <interrupt_rasp>
			Serial_Send("Nero");
     5ec:	8c e3       	ldi	r24, 0x3C	; 60
     5ee:	92 e0       	ldi	r25, 0x02	; 2
     5f0:	0c 94 32 0c 	jmp	0x1864	; 0x1864 <Serial_Send_String>
		}
		else{
			indietro();
     5f4:	08 95       	ret
     5f6:	b8 d7       	rcall	.+3952   	; 0x1568 <indietro>
     5f8:	8f e5       	ldi	r24, 0x5F	; 95
     5fa:	9a ee       	ldi	r25, 0xEA	; 234
     5fc:	01 97       	sbiw	r24, 0x01	; 1
     5fe:	f1 f7       	brne	.-4      	; 0x5fc <delay_movimento+0x5e>
     600:	00 c0       	rjmp	.+0      	; 0x602 <delay_movimento+0x64>
     602:	00 00       	nop
			_delay_ms(15);
			stop_tutto();
     604:	0e 94 db 0b 	call	0x17b6	; 0x17b6 <stop_tutto>
     608:	9f ef       	ldi	r25, 0xFF	; 255
     60a:	25 ea       	ldi	r18, 0xA5	; 165
     60c:	8e e0       	ldi	r24, 0x0E	; 14
     60e:	91 50       	subi	r25, 0x01	; 1
     610:	20 40       	sbci	r18, 0x00	; 0
     612:	80 40       	sbci	r24, 0x00	; 0
     614:	e1 f7       	brne	.-8      	; 0x60e <delay_movimento+0x70>
     616:	00 c0       	rjmp	.+0      	; 0x618 <delay_movimento+0x7a>
			_delay_ms(300);
			interrupt_rasp();
     618:	00 00       	nop
     61a:	b7 df       	rcall	.-146    	; 0x58a <interrupt_rasp>
			seg_enc=0;
     61c:	10 92 53 02 	sts	0x0253, r1	; 0x800253 <seg_enc+0x1>
     620:	10 92 52 02 	sts	0x0252, r1	; 0x800252 <seg_enc>
		}
		
	}
	else if(c==2){		//stop da girata sinistra
     624:	08 95       	ret
     626:	82 30       	cpi	r24, 0x02	; 2
     628:	91 05       	cpc	r25, r1
		//stop_tutto();
		destra();
     62a:	c1 f4       	brne	.+48     	; 0x65c <delay_movimento+0xbe>
     62c:	d8 d7       	rcall	.+4016   	; 0x15de <destra>
     62e:	8f e5       	ldi	r24, 0x5F	; 95
     630:	9a ee       	ldi	r25, 0xEA	; 234
     632:	01 97       	sbiw	r24, 0x01	; 1
     634:	f1 f7       	brne	.-4      	; 0x632 <delay_movimento+0x94>
     636:	00 c0       	rjmp	.+0      	; 0x638 <delay_movimento+0x9a>
     638:	00 00       	nop
		_delay_ms(15);
		stop_tutto();
     63a:	0e 94 db 0b 	call	0x17b6	; 0x17b6 <stop_tutto>
     63e:	9f ef       	ldi	r25, 0xFF	; 255
     640:	25 ea       	ldi	r18, 0xA5	; 165
     642:	8e e0       	ldi	r24, 0x0E	; 14
     644:	91 50       	subi	r25, 0x01	; 1
     646:	20 40       	sbci	r18, 0x00	; 0
     648:	80 40       	sbci	r24, 0x00	; 0
     64a:	e1 f7       	brne	.-8      	; 0x644 <delay_movimento+0xa6>
     64c:	00 c0       	rjmp	.+0      	; 0x64e <delay_movimento+0xb0>
		_delay_ms(300);
		interrupt_rasp();
     64e:	00 00       	nop
     650:	9c df       	rcall	.-200    	; 0x58a <interrupt_rasp>
		seg_enc=0;
     652:	10 92 53 02 	sts	0x0253, r1	; 0x800253 <seg_enc+0x1>
     656:	10 92 52 02 	sts	0x0252, r1	; 0x800252 <seg_enc>
     65a:	08 95       	ret
	}
	else if(c==3){		//stop da girata destra
     65c:	03 97       	sbiw	r24, 0x03	; 3
     65e:	c1 f4       	brne	.+48     	; 0x690 <delay_movimento+0xf2>
		//stop_tutto();
		sinistra_lento();
     660:	0e 94 a0 0b 	call	0x1740	; 0x1740 <sinistra_lento>
     664:	8f e5       	ldi	r24, 0x5F	; 95
     666:	9a ee       	ldi	r25, 0xEA	; 234
     668:	01 97       	sbiw	r24, 0x01	; 1
     66a:	f1 f7       	brne	.-4      	; 0x668 <delay_movimento+0xca>
     66c:	00 c0       	rjmp	.+0      	; 0x66e <delay_movimento+0xd0>
     66e:	00 00       	nop
		_delay_ms(15);
		stop_tutto();
     670:	0e 94 db 0b 	call	0x17b6	; 0x17b6 <stop_tutto>
     674:	9f ef       	ldi	r25, 0xFF	; 255
     676:	25 ea       	ldi	r18, 0xA5	; 165
     678:	8e e0       	ldi	r24, 0x0E	; 14
     67a:	91 50       	subi	r25, 0x01	; 1
     67c:	20 40       	sbci	r18, 0x00	; 0
     67e:	80 40       	sbci	r24, 0x00	; 0
     680:	e1 f7       	brne	.-8      	; 0x67a <delay_movimento+0xdc>
     682:	00 c0       	rjmp	.+0      	; 0x684 <delay_movimento+0xe6>
		_delay_ms(300);
		interrupt_rasp();
     684:	00 00       	nop
     686:	81 df       	rcall	.-254    	; 0x58a <interrupt_rasp>
		seg_enc=0;
     688:	10 92 53 02 	sts	0x0253, r1	; 0x800253 <seg_enc+0x1>
     68c:	10 92 52 02 	sts	0x0252, r1	; 0x800252 <seg_enc>
     690:	08 95       	ret

00000692 <controllo_movimento>:
	}
}

void controllo_movimento(){
	switch(data){
     692:	e0 91 56 02 	lds	r30, 0x0256	; 0x800256 <data>
     696:	f0 91 57 02 	lds	r31, 0x0257	; 0x800257 <data+0x1>
     69a:	31 97       	sbiw	r30, 0x01	; 1
     69c:	e9 32       	cpi	r30, 0x29	; 41
     69e:	f1 05       	cpc	r31, r1
     6a0:	a0 f5       	brcc	.+104    	; 0x70a <controllo_movimento+0x78>
     6a2:	88 27       	eor	r24, r24
     6a4:	ee 58       	subi	r30, 0x8E	; 142
     6a6:	ff 4f       	sbci	r31, 0xFF	; 255
     6a8:	8f 4f       	sbci	r24, 0xFF	; 255
     6aa:	0c 94 11 0f 	jmp	0x1e22	; 0x1e22 <__tablejump2__>
		
		//Fermo Da controllo avanti e girata
		case 0x01:
			delay_movimento(2);		//da sinistra
     6ae:	82 e0       	ldi	r24, 0x02	; 2
     6b0:	90 e0       	ldi	r25, 0x00	; 0
     6b2:	75 df       	rcall	.-278    	; 0x59e <delay_movimento>
			data_ret = 0x04;
     6b4:	84 e0       	ldi	r24, 0x04	; 4
     6b6:	90 e0       	ldi	r25, 0x00	; 0
     6b8:	90 93 55 02 	sts	0x0255, r25	; 0x800255 <data_ret+0x1>
     6bc:	80 93 54 02 	sts	0x0254, r24	; 0x800254 <data_ret>
			break;
		case 0x02:
			avanti();
     6c0:	08 95       	ret
     6c2:	17 d7       	rcall	.+3630   	; 0x14f2 <avanti>
			delay_movimento(1);		//avanti
     6c4:	81 e0       	ldi	r24, 0x01	; 1
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	6a df       	rcall	.-300    	; 0x59e <delay_movimento>
     6ca:	2f ef       	ldi	r18, 0xFF	; 255
     6cc:	89 e6       	ldi	r24, 0x69	; 105
     6ce:	98 e1       	ldi	r25, 0x18	; 24
     6d0:	21 50       	subi	r18, 0x01	; 1
     6d2:	80 40       	sbci	r24, 0x00	; 0
     6d4:	90 40       	sbci	r25, 0x00	; 0
     6d6:	e1 f7       	brne	.-8      	; 0x6d0 <controllo_movimento+0x3e>
     6d8:	00 c0       	rjmp	.+0      	; 0x6da <controllo_movimento+0x48>
     6da:	00 00       	nop
			/*_delay_ms(700);		//800
			stop_tutto();*/
			_delay_ms(500);
			break;
		case 0x03:
			delay_movimento(3);		//da destra
     6dc:	08 95       	ret
     6de:	83 e0       	ldi	r24, 0x03	; 3
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	5d df       	rcall	.-326    	; 0x59e <delay_movimento>
			data_ret = 0x04;
     6e4:	84 e0       	ldi	r24, 0x04	; 4
     6e6:	90 e0       	ldi	r25, 0x00	; 0
     6e8:	90 93 55 02 	sts	0x0255, r25	; 0x800255 <data_ret+0x1>
     6ec:	80 93 54 02 	sts	0x0254, r24	; 0x800254 <data_ret>
			break;
		case 0x04:
			stop_tutto();		//fermo
     6f0:	08 95       	ret
     6f2:	0c 94 db 0b 	jmp	0x17b6	; 0x17b6 <stop_tutto>
		
		
		//Giroscopio
		case 0x27:				//sinistra
			sinistra();
			break;
     6f6:	08 95       	ret
		case 0x26:				//destra
			destra();
     6f8:	e8 c7       	rjmp	.+4048   	; 0x16ca <sinistra>
     6fa:	08 95       	ret
			break;
     6fc:	70 c7       	rjmp	.+3808   	; 0x15de <destra>
		case 0x28:
			destra_lento();
     6fe:	08 95       	ret
     700:	a9 c7       	rjmp	.+3922   	; 0x1654 <destra_lento>
			break;
     702:	08 95       	ret
		case 0x29:
			sinistra_lento();
     704:	0c 94 a0 0b 	jmp	0x1740	; 0x1740 <sinistra_lento>
			break;
     708:	08 95       	ret
		
		default:
			stop_tutto();
     70a:	0c 94 db 0b 	jmp	0x17b6	; 0x17b6 <stop_tutto>
     70e:	08 95       	ret

00000710 <main>:
	PORTF = 0;
}

int main(void)
{
	Serial_Init();
     710:	0e 94 10 0c 	call	0x1820	; 0x1820 <Serial_Init>
	
	//I2C
	I2C_init(0x10);
     714:	80 e1       	ldi	r24, 0x10	; 16
     716:	a0 de       	rcall	.-704    	; 0x458 <I2C_init>
	I2C_setCallbacks(I2C_received, I2C_requested);
     718:	67 e9       	ldi	r22, 0x97	; 151
     71a:	72 e0       	ldi	r23, 0x02	; 2
     71c:	81 e9       	ldi	r24, 0x91	; 145
     71e:	92 e0       	ldi	r25, 0x02	; 2
	//Servo
	//Set_Servo(150);
	//_delay_ms(3000);
	
	//Motori
    PID();
     720:	92 de       	rcall	.-732    	; 0x446 <I2C_setCallbacks>
	PWM();
     722:	ce d6       	rcall	.+3484   	; 0x14c0 <PID>
     724:	b0 d6       	rcall	.+3424   	; 0x1486 <PWM>
	
	//Finecorsa
	PCINT_Init();
     726:	28 dd       	rcall	.-1456   	; 0x178 <PCINT_Init>
     728:	81 e0       	ldi	r24, 0x01	; 1
	
	//Led riconoscimento
	DDRF = 1;
     72a:	80 bb       	out	0x10, r24	; 16
     72c:	40 91 56 02 	lds	r20, 0x0256	; 0x800256 <data>
	
	
    while (1) 
    {
		
		Serial_Send(data);
     730:	50 91 57 02 	lds	r21, 0x0257	; 0x800257 <data+0x1>
     734:	95 2f       	mov	r25, r21
     736:	99 0f       	add	r25, r25
     738:	99 0b       	sbc	r25, r25
     73a:	24 2f       	mov	r18, r20
     73c:	35 2f       	mov	r19, r21
     73e:	49 2f       	mov	r20, r25
     740:	59 2f       	mov	r21, r25
     742:	69 2f       	mov	r22, r25
     744:	79 2f       	mov	r23, r25
     746:	89 2f       	mov	r24, r25
     748:	0e 94 4f 0c 	call	0x189e	; 0x189e <Serial_Send_Int>
		Serial_Send("\n");
     74c:	87 e0       	ldi	r24, 0x07	; 7
     74e:	92 e0       	ldi	r25, 0x02	; 2
     750:	0e 94 32 0c 	call	0x1864	; 0x1864 <Serial_Send_String>
		
		controllo_movimento();
     754:	9e df       	rcall	.-196    	; 0x692 <controllo_movimento>
		
		//data = return_data();
		controllo_telecamera();
     756:	f2 de       	rcall	.-540    	; 0x53c <controllo_telecamera>
     758:	e9 cf       	rjmp	.-46     	; 0x72c <main+0x1c>

0000075a <return_seg_enc>:
     75a:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <seg_enc_0>

volatile int seg_enc_0 = 0;


int return_seg_enc(){
	return seg_enc_0;
     75e:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <seg_enc_0+0x1>
}
     762:	08 95       	ret

00000764 <__vector_3>:


ISR(INT2_vect){//interrupt encoder1
     764:	1f 92       	push	r1
     766:	0f 92       	push	r0
     768:	0f b6       	in	r0, 0x3f	; 63
     76a:	0f 92       	push	r0
     76c:	11 24       	eor	r1, r1
     76e:	0b b6       	in	r0, 0x3b	; 59
     770:	0f 92       	push	r0
     772:	2f 93       	push	r18
     774:	3f 93       	push	r19
     776:	4f 93       	push	r20
     778:	5f 93       	push	r21
     77a:	6f 93       	push	r22
     77c:	7f 93       	push	r23
     77e:	8f 93       	push	r24
     780:	9f 93       	push	r25
     782:	af 93       	push	r26
     784:	bf 93       	push	r27
     786:	ef 93       	push	r30
     788:	ff 93       	push	r31
	t_1 = (int32_t) TCNT5;
     78a:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
     78e:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     792:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <t_1+0x1>
     796:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <t_1>
	deltat_1 = (t_1-t_old_1) * KTIMER_256;
     79a:	a0 91 68 02 	lds	r26, 0x0268	; 0x800268 <t_1>
     79e:	b0 91 69 02 	lds	r27, 0x0269	; 0x800269 <t_1+0x1>
     7a2:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <t_old_1>
     7a6:	90 91 67 02 	lds	r25, 0x0267	; 0x800267 <t_old_1+0x1>
     7aa:	a8 1b       	sub	r26, r24
     7ac:	b9 0b       	sbc	r27, r25
     7ae:	20 e4       	ldi	r18, 0x40	; 64
     7b0:	32 e4       	ldi	r19, 0x42	; 66
     7b2:	4f e0       	ldi	r20, 0x0F	; 15
     7b4:	50 e0       	ldi	r21, 0x00	; 0
     7b6:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__mulshisi3>
     7ba:	24 e2       	ldi	r18, 0x24	; 36
     7bc:	34 ef       	ldi	r19, 0xF4	; 244
     7be:	40 e0       	ldi	r20, 0x00	; 0
     7c0:	50 e0       	ldi	r21, 0x00	; 0
     7c2:	0e 94 ef 0e 	call	0x1dde	; 0x1dde <__udivmodsi4>
     7c6:	30 93 dd 02 	sts	0x02DD, r19	; 0x8002dd <deltat_1+0x1>
     7ca:	20 93 dc 02 	sts	0x02DC, r18	; 0x8002dc <deltat_1>
	velocita_1 = 1000000000UL/(K_ENCODER1 * deltat_1); //giri al secondo
     7ce:	a0 91 dc 02 	lds	r26, 0x02DC	; 0x8002dc <deltat_1>
     7d2:	b0 91 dd 02 	lds	r27, 0x02DD	; 0x8002dd <deltat_1+0x1>
     7d6:	2e ed       	ldi	r18, 0xDE	; 222
     7d8:	33 e0       	ldi	r19, 0x03	; 3
     7da:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <__usmulhisi3>
     7de:	9b 01       	movw	r18, r22
     7e0:	ac 01       	movw	r20, r24
     7e2:	60 e0       	ldi	r22, 0x00	; 0
     7e4:	7a ec       	ldi	r23, 0xCA	; 202
     7e6:	8a e9       	ldi	r24, 0x9A	; 154
     7e8:	9b e3       	ldi	r25, 0x3B	; 59
     7ea:	0e 94 ef 0e 	call	0x1dde	; 0x1dde <__udivmodsi4>
     7ee:	30 93 eb 02 	sts	0x02EB, r19	; 0x8002eb <velocita_1+0x1>
     7f2:	20 93 ea 02 	sts	0x02EA, r18	; 0x8002ea <velocita_1>
	t_old_1 = t_1;
     7f6:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <t_1>
     7fa:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <t_1+0x1>
     7fe:	90 93 67 02 	sts	0x0267, r25	; 0x800267 <t_old_1+0x1>
     802:	80 93 66 02 	sts	0x0266, r24	; 0x800266 <t_old_1>
	seg_enc_0++;
     806:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <seg_enc_0>
     80a:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <seg_enc_0+0x1>
     80e:	01 96       	adiw	r24, 0x01	; 1
     810:	90 93 59 02 	sts	0x0259, r25	; 0x800259 <seg_enc_0+0x1>
     814:	80 93 58 02 	sts	0x0258, r24	; 0x800258 <seg_enc_0>
	//Serial_Send(seg_enc); Serial_Send("\n");
}
     818:	ff 91       	pop	r31
     81a:	ef 91       	pop	r30
     81c:	bf 91       	pop	r27
     81e:	af 91       	pop	r26
     820:	9f 91       	pop	r25
     822:	8f 91       	pop	r24
     824:	7f 91       	pop	r23
     826:	6f 91       	pop	r22
     828:	5f 91       	pop	r21
     82a:	4f 91       	pop	r20
     82c:	3f 91       	pop	r19
     82e:	2f 91       	pop	r18
     830:	0f 90       	pop	r0
     832:	0b be       	out	0x3b, r0	; 59
     834:	0f 90       	pop	r0
     836:	0f be       	out	0x3f, r0	; 63
     838:	0f 90       	pop	r0
     83a:	1f 90       	pop	r1
     83c:	18 95       	reti

0000083e <__vector_4>:

ISR(INT3_vect){//interrupt encoder2
     83e:	1f 92       	push	r1
     840:	0f 92       	push	r0
     842:	0f b6       	in	r0, 0x3f	; 63
     844:	0f 92       	push	r0
     846:	11 24       	eor	r1, r1
     848:	0b b6       	in	r0, 0x3b	; 59
     84a:	0f 92       	push	r0
     84c:	2f 93       	push	r18
     84e:	3f 93       	push	r19
     850:	4f 93       	push	r20
     852:	5f 93       	push	r21
     854:	6f 93       	push	r22
     856:	7f 93       	push	r23
     858:	8f 93       	push	r24
     85a:	9f 93       	push	r25
     85c:	af 93       	push	r26
     85e:	bf 93       	push	r27
     860:	ef 93       	push	r30
     862:	ff 93       	push	r31
	t_2 = (int32_t) TCNT5;
     864:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
     868:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     86c:	90 93 65 02 	sts	0x0265, r25	; 0x800265 <t_2+0x1>
     870:	80 93 64 02 	sts	0x0264, r24	; 0x800264 <t_2>
	deltat_2 = (t_2-t_old_2) * KTIMER_256;
     874:	a0 91 64 02 	lds	r26, 0x0264	; 0x800264 <t_2>
     878:	b0 91 65 02 	lds	r27, 0x0265	; 0x800265 <t_2+0x1>
     87c:	80 91 62 02 	lds	r24, 0x0262	; 0x800262 <t_old_2>
     880:	90 91 63 02 	lds	r25, 0x0263	; 0x800263 <t_old_2+0x1>
     884:	a8 1b       	sub	r26, r24
     886:	b9 0b       	sbc	r27, r25
     888:	20 e4       	ldi	r18, 0x40	; 64
     88a:	32 e4       	ldi	r19, 0x42	; 66
     88c:	4f e0       	ldi	r20, 0x0F	; 15
     88e:	50 e0       	ldi	r21, 0x00	; 0
     890:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__mulshisi3>
     894:	24 e2       	ldi	r18, 0x24	; 36
     896:	34 ef       	ldi	r19, 0xF4	; 244
     898:	40 e0       	ldi	r20, 0x00	; 0
     89a:	50 e0       	ldi	r21, 0x00	; 0
     89c:	0e 94 ef 0e 	call	0x1dde	; 0x1dde <__udivmodsi4>
     8a0:	30 93 f3 02 	sts	0x02F3, r19	; 0x8002f3 <deltat_2+0x1>
     8a4:	20 93 f2 02 	sts	0x02F2, r18	; 0x8002f2 <deltat_2>
	velocita_2 = 1000000000UL/(K_ENCODER2 * deltat_2); //giri al secondo
     8a8:	a0 91 f2 02 	lds	r26, 0x02F2	; 0x8002f2 <deltat_2>
     8ac:	b0 91 f3 02 	lds	r27, 0x02F3	; 0x8002f3 <deltat_2+0x1>
     8b0:	2c e6       	ldi	r18, 0x6C	; 108
     8b2:	32 e0       	ldi	r19, 0x02	; 2
     8b4:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <__usmulhisi3>
     8b8:	9b 01       	movw	r18, r22
     8ba:	ac 01       	movw	r20, r24
     8bc:	60 e0       	ldi	r22, 0x00	; 0
     8be:	7a ec       	ldi	r23, 0xCA	; 202
     8c0:	8a e9       	ldi	r24, 0x9A	; 154
     8c2:	9b e3       	ldi	r25, 0x3B	; 59
     8c4:	0e 94 ef 0e 	call	0x1dde	; 0x1dde <__udivmodsi4>
     8c8:	30 93 d7 02 	sts	0x02D7, r19	; 0x8002d7 <velocita_2+0x1>
     8cc:	20 93 d6 02 	sts	0x02D6, r18	; 0x8002d6 <velocita_2>
	t_old_2 = t_2;
     8d0:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <t_2>
     8d4:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <t_2+0x1>
     8d8:	90 93 63 02 	sts	0x0263, r25	; 0x800263 <t_old_2+0x1>
     8dc:	80 93 62 02 	sts	0x0262, r24	; 0x800262 <t_old_2>
}
     8e0:	ff 91       	pop	r31
     8e2:	ef 91       	pop	r30
     8e4:	bf 91       	pop	r27
     8e6:	af 91       	pop	r26
     8e8:	9f 91       	pop	r25
     8ea:	8f 91       	pop	r24
     8ec:	7f 91       	pop	r23
     8ee:	6f 91       	pop	r22
     8f0:	5f 91       	pop	r21
     8f2:	4f 91       	pop	r20
     8f4:	3f 91       	pop	r19
     8f6:	2f 91       	pop	r18
     8f8:	0f 90       	pop	r0
     8fa:	0b be       	out	0x3b, r0	; 59
     8fc:	0f 90       	pop	r0
     8fe:	0f be       	out	0x3f, r0	; 63
     900:	0f 90       	pop	r0
     902:	1f 90       	pop	r1
     904:	18 95       	reti

00000906 <__vector_5>:

ISR(INT4_vect){//interrupt encoder3
     906:	1f 92       	push	r1
     908:	0f 92       	push	r0
     90a:	0f b6       	in	r0, 0x3f	; 63
     90c:	0f 92       	push	r0
     90e:	11 24       	eor	r1, r1
     910:	0b b6       	in	r0, 0x3b	; 59
     912:	0f 92       	push	r0
     914:	2f 93       	push	r18
     916:	3f 93       	push	r19
     918:	4f 93       	push	r20
     91a:	5f 93       	push	r21
     91c:	6f 93       	push	r22
     91e:	7f 93       	push	r23
     920:	8f 93       	push	r24
     922:	9f 93       	push	r25
     924:	af 93       	push	r26
     926:	bf 93       	push	r27
     928:	ef 93       	push	r30
     92a:	ff 93       	push	r31
	t_3 = (int32_t) TCNT5;
     92c:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
     930:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     934:	90 93 61 02 	sts	0x0261, r25	; 0x800261 <t_3+0x1>
     938:	80 93 60 02 	sts	0x0260, r24	; 0x800260 <t_3>
	deltat_3 = (t_3-t_old_3) * KTIMER_256;
     93c:	a0 91 60 02 	lds	r26, 0x0260	; 0x800260 <t_3>
     940:	b0 91 61 02 	lds	r27, 0x0261	; 0x800261 <t_3+0x1>
     944:	80 91 5e 02 	lds	r24, 0x025E	; 0x80025e <t_old_3>
     948:	90 91 5f 02 	lds	r25, 0x025F	; 0x80025f <t_old_3+0x1>
     94c:	a8 1b       	sub	r26, r24
     94e:	b9 0b       	sbc	r27, r25
     950:	20 e4       	ldi	r18, 0x40	; 64
     952:	32 e4       	ldi	r19, 0x42	; 66
     954:	4f e0       	ldi	r20, 0x0F	; 15
     956:	50 e0       	ldi	r21, 0x00	; 0
     958:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__mulshisi3>
     95c:	24 e2       	ldi	r18, 0x24	; 36
     95e:	34 ef       	ldi	r19, 0xF4	; 244
     960:	40 e0       	ldi	r20, 0x00	; 0
     962:	50 e0       	ldi	r21, 0x00	; 0
     964:	0e 94 ef 0e 	call	0x1dde	; 0x1dde <__udivmodsi4>
     968:	30 93 d3 02 	sts	0x02D3, r19	; 0x8002d3 <deltat_3+0x1>
     96c:	20 93 d2 02 	sts	0x02D2, r18	; 0x8002d2 <deltat_3>
	velocita_3 = 1000000000UL/(K_ENCODER3 * deltat_3); //giri al secondo
     970:	a0 91 d2 02 	lds	r26, 0x02D2	; 0x8002d2 <deltat_3>
     974:	b0 91 d3 02 	lds	r27, 0x02D3	; 0x8002d3 <deltat_3+0x1>
     978:	2e ed       	ldi	r18, 0xDE	; 222
     97a:	33 e0       	ldi	r19, 0x03	; 3
     97c:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <__usmulhisi3>
     980:	9b 01       	movw	r18, r22
     982:	ac 01       	movw	r20, r24
     984:	60 e0       	ldi	r22, 0x00	; 0
     986:	7a ec       	ldi	r23, 0xCA	; 202
     988:	8a e9       	ldi	r24, 0x9A	; 154
     98a:	9b e3       	ldi	r25, 0x3B	; 59
     98c:	0e 94 ef 0e 	call	0x1dde	; 0x1dde <__udivmodsi4>
     990:	30 93 f1 02 	sts	0x02F1, r19	; 0x8002f1 <velocita_3+0x1>
     994:	20 93 f0 02 	sts	0x02F0, r18	; 0x8002f0 <velocita_3>
	t_old_3 = t_3;
     998:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <t_3>
     99c:	90 91 61 02 	lds	r25, 0x0261	; 0x800261 <t_3+0x1>
     9a0:	90 93 5f 02 	sts	0x025F, r25	; 0x80025f <t_old_3+0x1>
     9a4:	80 93 5e 02 	sts	0x025E, r24	; 0x80025e <t_old_3>
	/*seg_enc_0++;
	Serial_Send(seg_enc); Serial_Send("\n");*/
}
     9a8:	ff 91       	pop	r31
     9aa:	ef 91       	pop	r30
     9ac:	bf 91       	pop	r27
     9ae:	af 91       	pop	r26
     9b0:	9f 91       	pop	r25
     9b2:	8f 91       	pop	r24
     9b4:	7f 91       	pop	r23
     9b6:	6f 91       	pop	r22
     9b8:	5f 91       	pop	r21
     9ba:	4f 91       	pop	r20
     9bc:	3f 91       	pop	r19
     9be:	2f 91       	pop	r18
     9c0:	0f 90       	pop	r0
     9c2:	0b be       	out	0x3b, r0	; 59
     9c4:	0f 90       	pop	r0
     9c6:	0f be       	out	0x3f, r0	; 63
     9c8:	0f 90       	pop	r0
     9ca:	1f 90       	pop	r1
     9cc:	18 95       	reti

000009ce <__vector_6>:

ISR(INT5_vect){//interrupt encoder4
     9ce:	1f 92       	push	r1
     9d0:	0f 92       	push	r0
     9d2:	0f b6       	in	r0, 0x3f	; 63
     9d4:	0f 92       	push	r0
     9d6:	11 24       	eor	r1, r1
     9d8:	0b b6       	in	r0, 0x3b	; 59
     9da:	0f 92       	push	r0
     9dc:	2f 93       	push	r18
     9de:	3f 93       	push	r19
     9e0:	4f 93       	push	r20
     9e2:	5f 93       	push	r21
     9e4:	6f 93       	push	r22
     9e6:	7f 93       	push	r23
     9e8:	8f 93       	push	r24
     9ea:	9f 93       	push	r25
     9ec:	af 93       	push	r26
     9ee:	bf 93       	push	r27
     9f0:	ef 93       	push	r30
     9f2:	ff 93       	push	r31
	t_4 = (int32_t) TCNT5;
     9f4:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
     9f8:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     9fc:	90 93 5d 02 	sts	0x025D, r25	; 0x80025d <t_4+0x1>
     a00:	80 93 5c 02 	sts	0x025C, r24	; 0x80025c <t_4>
	deltat_4 = (t_4-t_old_4) * KTIMER_256;
     a04:	a0 91 5c 02 	lds	r26, 0x025C	; 0x80025c <t_4>
     a08:	b0 91 5d 02 	lds	r27, 0x025D	; 0x80025d <t_4+0x1>
     a0c:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <t_old_4>
     a10:	90 91 5b 02 	lds	r25, 0x025B	; 0x80025b <t_old_4+0x1>
     a14:	a8 1b       	sub	r26, r24
     a16:	b9 0b       	sbc	r27, r25
     a18:	20 e4       	ldi	r18, 0x40	; 64
     a1a:	32 e4       	ldi	r19, 0x42	; 66
     a1c:	4f e0       	ldi	r20, 0x0F	; 15
     a1e:	50 e0       	ldi	r21, 0x00	; 0
     a20:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__mulshisi3>
     a24:	24 e2       	ldi	r18, 0x24	; 36
     a26:	34 ef       	ldi	r19, 0xF4	; 244
     a28:	40 e0       	ldi	r20, 0x00	; 0
     a2a:	50 e0       	ldi	r21, 0x00	; 0
     a2c:	0e 94 ef 0e 	call	0x1dde	; 0x1dde <__udivmodsi4>
     a30:	30 93 ed 02 	sts	0x02ED, r19	; 0x8002ed <deltat_4+0x1>
     a34:	20 93 ec 02 	sts	0x02EC, r18	; 0x8002ec <deltat_4>
	velocita_4 = 1000000000UL/(K_ENCODER4 * deltat_4); //giri al secondo
     a38:	a0 91 ec 02 	lds	r26, 0x02EC	; 0x8002ec <deltat_4>
     a3c:	b0 91 ed 02 	lds	r27, 0x02ED	; 0x8002ed <deltat_4+0x1>
     a40:	2e ed       	ldi	r18, 0xDE	; 222
     a42:	33 e0       	ldi	r19, 0x03	; 3
     a44:	0e 94 19 0f 	call	0x1e32	; 0x1e32 <__usmulhisi3>
     a48:	9b 01       	movw	r18, r22
     a4a:	ac 01       	movw	r20, r24
     a4c:	60 e0       	ldi	r22, 0x00	; 0
     a4e:	7a ec       	ldi	r23, 0xCA	; 202
     a50:	8a e9       	ldi	r24, 0x9A	; 154
     a52:	9b e3       	ldi	r25, 0x3B	; 59
     a54:	0e 94 ef 0e 	call	0x1dde	; 0x1dde <__udivmodsi4>
     a58:	30 93 e7 02 	sts	0x02E7, r19	; 0x8002e7 <velocita_4+0x1>
     a5c:	20 93 e6 02 	sts	0x02E6, r18	; 0x8002e6 <velocita_4>
	t_old_4 = t_4;
     a60:	80 91 5c 02 	lds	r24, 0x025C	; 0x80025c <t_4>
     a64:	90 91 5d 02 	lds	r25, 0x025D	; 0x80025d <t_4+0x1>
     a68:	90 93 5b 02 	sts	0x025B, r25	; 0x80025b <t_old_4+0x1>
     a6c:	80 93 5a 02 	sts	0x025A, r24	; 0x80025a <t_old_4>
	/*seg_enc_0++;
	Serial_Send(seg_enc); Serial_Send("\n");*/
}
     a70:	ff 91       	pop	r31
     a72:	ef 91       	pop	r30
     a74:	bf 91       	pop	r27
     a76:	af 91       	pop	r26
     a78:	9f 91       	pop	r25
     a7a:	8f 91       	pop	r24
     a7c:	7f 91       	pop	r23
     a7e:	6f 91       	pop	r22
     a80:	5f 91       	pop	r21
     a82:	4f 91       	pop	r20
     a84:	3f 91       	pop	r19
     a86:	2f 91       	pop	r18
     a88:	0f 90       	pop	r0
     a8a:	0b be       	out	0x3b, r0	; 59
     a8c:	0f 90       	pop	r0
     a8e:	0f be       	out	0x3f, r0	; 63
     a90:	0f 90       	pop	r0
     a92:	1f 90       	pop	r1
     a94:	18 95       	reti

00000a96 <Init_PWM123>:

void Init_PWM123(){//Motore 1/2/3
	TCCR1A = (1<<COM1A1) | (1<<COM1B1) | (1<<COM1C1) | (1<<WGM11) | (1<<WGM10);
     a96:	8b ea       	ldi	r24, 0xAB	; 171
     a98:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
	DDRB = (1<<PB5) | (1<<PB6) | (1<<PB7); //| (1<<PB4);//Uscita PWM motori e Servo
     a9c:	80 ee       	ldi	r24, 0xE0	; 224
     a9e:	84 b9       	out	0x04, r24	; 4
     aa0:	08 95       	ret

00000aa2 <Init_PWM4>:
}

void Init_PWM4(){//Motore 4
	TCCR3A = (1<<COM3A1) | (1<<WGM31) | (1<<WGM30);
     aa2:	83 e8       	ldi	r24, 0x83	; 131
     aa4:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
	DDRE = (1<<PE3);
     aa8:	88 e0       	ldi	r24, 0x08	; 8
     aaa:	8d b9       	out	0x0d, r24	; 13
     aac:	08 95       	ret

00000aae <Start_PWM123>:
}

void Start_PWM123(){//Motore 1/2/3
	TCCR1B = (1<<WGM12) | (1<<CS12);
     aae:	8c e0       	ldi	r24, 0x0C	; 12
     ab0:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
     ab4:	08 95       	ret

00000ab6 <Start_PWM4>:
}

void Start_PWM4(){//Motore 4
	TCCR3B = (1<<WGM32) | (1<<CS32);
     ab6:	8c e0       	ldi	r24, 0x0C	; 12
     ab8:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7c0091>
     abc:	08 95       	ret

00000abe <Set_PWM1>:
}

void Set_PWM1(int duty_1){//Motore 1
	OCR1A = duty_1;
     abe:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
     ac2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
     ac6:	08 95       	ret

00000ac8 <Set_PWM2>:
}

void Set_PWM2(int duty_2){//Motore 2
	OCR1B = duty_2;
     ac8:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
     acc:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
     ad0:	08 95       	ret

00000ad2 <Set_PWM3>:
}

void Set_PWM3(int duty_3){//Motore 3
	OCR1C = duty_3;
     ad2:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <__TEXT_REGION_LENGTH__+0x7c008d>
     ad6:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x7c008c>
     ada:	08 95       	ret

00000adc <Set_PWM4>:
}

void Set_PWM4(int duty_4){//Motore 4
	OCR3A = duty_4;
     adc:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7c0099>
     ae0:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7c0098>
     ae4:	08 95       	ret

00000ae6 <PID1>:
}

void PID1(){//pid motore 1
     ae6:	cf 92       	push	r12
     ae8:	df 92       	push	r13
     aea:	ef 92       	push	r14
     aec:	ff 92       	push	r15
	e_1 = (double) (SET_POINT_VELOCITA - velocita_1);
     aee:	c0 90 01 02 	lds	r12, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
     af2:	d0 90 02 02 	lds	r13, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
     af6:	e0 90 03 02 	lds	r14, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
     afa:	f0 90 04 02 	lds	r15, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
     afe:	60 91 ea 02 	lds	r22, 0x02EA	; 0x8002ea <velocita_1>
     b02:	70 91 eb 02 	lds	r23, 0x02EB	; 0x8002eb <velocita_1+0x1>
     b06:	07 2e       	mov	r0, r23
     b08:	00 0c       	add	r0, r0
     b0a:	88 0b       	sbc	r24, r24
     b0c:	99 0b       	sbc	r25, r25
     b0e:	0e 94 d8 0d 	call	0x1bb0	; 0x1bb0 <__floatsisf>
     b12:	9b 01       	movw	r18, r22
     b14:	ac 01       	movw	r20, r24
     b16:	c7 01       	movw	r24, r14
     b18:	b6 01       	movw	r22, r12
     b1a:	ae d7       	rcall	.+3932   	; 0x1a78 <__subsf3>
     b1c:	60 93 c6 02 	sts	0x02C6, r22	; 0x8002c6 <e_1>
     b20:	70 93 c7 02 	sts	0x02C7, r23	; 0x8002c7 <e_1+0x1>
     b24:	80 93 c8 02 	sts	0x02C8, r24	; 0x8002c8 <e_1+0x2>
     b28:	90 93 c9 02 	sts	0x02C9, r25	; 0x8002c9 <e_1+0x3>
	p_1 = e_1*KP;
     b2c:	60 91 c6 02 	lds	r22, 0x02C6	; 0x8002c6 <e_1>
     b30:	70 91 c7 02 	lds	r23, 0x02C7	; 0x8002c7 <e_1+0x1>
     b34:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <e_1+0x2>
     b38:	90 91 c9 02 	lds	r25, 0x02C9	; 0x8002c9 <e_1+0x3>
     b3c:	28 eb       	ldi	r18, 0xB8	; 184
     b3e:	3e e1       	ldi	r19, 0x1E	; 30
     b40:	45 e8       	ldi	r20, 0x85	; 133
     b42:	50 e4       	ldi	r21, 0x40	; 64
     b44:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
     b48:	60 93 c2 02 	sts	0x02C2, r22	; 0x8002c2 <p_1>
     b4c:	70 93 c3 02 	sts	0x02C3, r23	; 0x8002c3 <p_1+0x1>
     b50:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <p_1+0x2>
     b54:	90 93 c5 02 	sts	0x02C5, r25	; 0x8002c5 <p_1+0x3>
	i_1= i_old_1 + (KI*e_1);
     b58:	60 91 c6 02 	lds	r22, 0x02C6	; 0x8002c6 <e_1>
     b5c:	70 91 c7 02 	lds	r23, 0x02C7	; 0x8002c7 <e_1+0x1>
     b60:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <e_1+0x2>
     b64:	90 91 c9 02 	lds	r25, 0x02C9	; 0x8002c9 <e_1+0x3>
     b68:	28 eb       	ldi	r18, 0xB8	; 184
     b6a:	3e e1       	ldi	r19, 0x1E	; 30
     b6c:	45 e0       	ldi	r20, 0x05	; 5
     b6e:	5e e3       	ldi	r21, 0x3E	; 62
     b70:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
     b74:	20 91 b6 02 	lds	r18, 0x02B6	; 0x8002b6 <i_old_1>
     b78:	30 91 b7 02 	lds	r19, 0x02B7	; 0x8002b7 <i_old_1+0x1>
     b7c:	40 91 b8 02 	lds	r20, 0x02B8	; 0x8002b8 <i_old_1+0x2>
     b80:	50 91 b9 02 	lds	r21, 0x02B9	; 0x8002b9 <i_old_1+0x3>
     b84:	7a d7       	rcall	.+3828   	; 0x1a7a <__addsf3>
     b86:	60 93 be 02 	sts	0x02BE, r22	; 0x8002be <i_1>
     b8a:	70 93 bf 02 	sts	0x02BF, r23	; 0x8002bf <i_1+0x1>
     b8e:	80 93 c0 02 	sts	0x02C0, r24	; 0x8002c0 <i_1+0x2>
     b92:	90 93 c1 02 	sts	0x02C1, r25	; 0x8002c1 <i_1+0x3>
	d_1 = (e_1 - e_old_1) * KD;
     b96:	60 91 c6 02 	lds	r22, 0x02C6	; 0x8002c6 <e_1>
     b9a:	70 91 c7 02 	lds	r23, 0x02C7	; 0x8002c7 <e_1+0x1>
     b9e:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <e_1+0x2>
     ba2:	90 91 c9 02 	lds	r25, 0x02C9	; 0x8002c9 <e_1+0x3>
     ba6:	20 91 e2 02 	lds	r18, 0x02E2	; 0x8002e2 <e_old_1>
     baa:	30 91 e3 02 	lds	r19, 0x02E3	; 0x8002e3 <e_old_1+0x1>
     bae:	40 91 e4 02 	lds	r20, 0x02E4	; 0x8002e4 <e_old_1+0x2>
     bb2:	50 91 e5 02 	lds	r21, 0x02E5	; 0x8002e5 <e_old_1+0x3>
     bb6:	60 d7       	rcall	.+3776   	; 0x1a78 <__subsf3>
     bb8:	20 ef       	ldi	r18, 0xF0	; 240
     bba:	35 e8       	ldi	r19, 0x85	; 133
     bbc:	49 ec       	ldi	r20, 0xC9	; 201
     bbe:	5c e3       	ldi	r21, 0x3C	; 60
     bc0:	0e 94 8c 0e 	call	0x1d18	; 0x1d18 <__mulsf3>
     bc4:	60 93 ba 02 	sts	0x02BA, r22	; 0x8002ba <d_1>
     bc8:	70 93 bb 02 	sts	0x02BB, r23	; 0x8002bb <d_1+0x1>
     bcc:	80 93 bc 02 	sts	0x02BC, r24	; 0x8002bc <d_1+0x2>
     bd0:	90 93 bd 02 	sts	0x02BD, r25	; 0x8002bd <d_1+0x3>
	if(i_1>I_MAX){
     bd4:	60 91 be 02 	lds	r22, 0x02BE	; 0x8002be <i_1>
     bd8:	70 91 bf 02 	lds	r23, 0x02BF	; 0x8002bf <i_1+0x1>
     bdc:	80 91 c0 02 	lds	r24, 0x02C0	; 0x8002c0 <i_1+0x2>
     be0:	90 91 c1 02 	lds	r25, 0x02C1	; 0x8002c1 <i_1+0x3>
     be4:	20 e0       	ldi	r18, 0x00	; 0
     be6:	30 ec       	ldi	r19, 0xC0	; 192
     be8:	4f e7       	ldi	r20, 0x7F	; 127
     bea:	54 e4       	ldi	r21, 0x44	; 68
     bec:	0e 94 88 0e 	call	0x1d10	; 0x1d10 <__gesf2>
     bf0:	18 16       	cp	r1, r24
     bf2:	64 f4       	brge	.+24     	; 0xc0c <PID1+0x126>
		i_1 = I_MAX;
     bf4:	80 e0       	ldi	r24, 0x00	; 0
     bf6:	90 ec       	ldi	r25, 0xC0	; 192
     bf8:	af e7       	ldi	r26, 0x7F	; 127
     bfa:	b4 e4       	ldi	r27, 0x44	; 68
     bfc:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <i_1>
     c00:	90 93 bf 02 	sts	0x02BF, r25	; 0x8002bf <i_1+0x1>
     c04:	a0 93 c0 02 	sts	0x02C0, r26	; 0x8002c0 <i_1+0x2>
     c08:	b0 93 c1 02 	sts	0x02C1, r27	; 0x8002c1 <i_1+0x3>
	}
	if(i_1<I_MIN){
     c0c:	60 91 be 02 	lds	r22, 0x02BE	; 0x8002be <i_1>
     c10:	70 91 bf 02 	lds	r23, 0x02BF	; 0x8002bf <i_1+0x1>
     c14:	80 91 c0 02 	lds	r24, 0x02C0	; 0x8002c0 <i_1+0x2>
     c18:	90 91 c1 02 	lds	r25, 0x02C1	; 0x8002c1 <i_1+0x3>
     c1c:	20 e0       	ldi	r18, 0x00	; 0
     c1e:	30 e0       	ldi	r19, 0x00	; 0
     c20:	a9 01       	movw	r20, r18
     c22:	8f d7       	rcall	.+3870   	; 0x1b42 <__cmpsf2>
     c24:	88 23       	and	r24, r24
     c26:	44 f4       	brge	.+16     	; 0xc38 <PID1+0x152>
		i_1=I_MIN;
     c28:	10 92 be 02 	sts	0x02BE, r1	; 0x8002be <i_1>
     c2c:	10 92 bf 02 	sts	0x02BF, r1	; 0x8002bf <i_1+0x1>
     c30:	10 92 c0 02 	sts	0x02C0, r1	; 0x8002c0 <i_1+0x2>
     c34:	10 92 c1 02 	sts	0x02C1, r1	; 0x8002c1 <i_1+0x3>
	}
	i_old_1 = i_1;
     c38:	80 91 be 02 	lds	r24, 0x02BE	; 0x8002be <i_1>
     c3c:	90 91 bf 02 	lds	r25, 0x02BF	; 0x8002bf <i_1+0x1>
     c40:	a0 91 c0 02 	lds	r26, 0x02C0	; 0x8002c0 <i_1+0x2>
     c44:	b0 91 c1 02 	lds	r27, 0x02C1	; 0x8002c1 <i_1+0x3>
     c48:	80 93 b6 02 	sts	0x02B6, r24	; 0x8002b6 <i_old_1>
     c4c:	90 93 b7 02 	sts	0x02B7, r25	; 0x8002b7 <i_old_1+0x1>
     c50:	a0 93 b8 02 	sts	0x02B8, r26	; 0x8002b8 <i_old_1+0x2>
     c54:	b0 93 b9 02 	sts	0x02B9, r27	; 0x8002b9 <i_old_1+0x3>
	e_old_1 = e_1;
     c58:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <e_1>
     c5c:	90 91 c7 02 	lds	r25, 0x02C7	; 0x8002c7 <e_1+0x1>
     c60:	a0 91 c8 02 	lds	r26, 0x02C8	; 0x8002c8 <e_1+0x2>
     c64:	b0 91 c9 02 	lds	r27, 0x02C9	; 0x8002c9 <e_1+0x3>
     c68:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <e_old_1>
     c6c:	90 93 e3 02 	sts	0x02E3, r25	; 0x8002e3 <e_old_1+0x1>
     c70:	a0 93 e4 02 	sts	0x02E4, r26	; 0x8002e4 <e_old_1+0x2>
     c74:	b0 93 e5 02 	sts	0x02E5, r27	; 0x8002e5 <e_old_1+0x3>
	pid1 = p_1+i_1+d_1;
     c78:	60 91 c2 02 	lds	r22, 0x02C2	; 0x8002c2 <p_1>
     c7c:	70 91 c3 02 	lds	r23, 0x02C3	; 0x8002c3 <p_1+0x1>
     c80:	80 91 c4 02 	lds	r24, 0x02C4	; 0x8002c4 <p_1+0x2>
     c84:	90 91 c5 02 	lds	r25, 0x02C5	; 0x8002c5 <p_1+0x3>
     c88:	20 91 be 02 	lds	r18, 0x02BE	; 0x8002be <i_1>
     c8c:	30 91 bf 02 	lds	r19, 0x02BF	; 0x8002bf <i_1+0x1>
     c90:	40 91 c0 02 	lds	r20, 0x02C0	; 0x8002c0 <i_1+0x2>
     c94:	50 91 c1 02 	lds	r21, 0x02C1	; 0x8002c1 <i_1+0x3>
     c98:	f0 d6       	rcall	.+3552   	; 0x1a7a <__addsf3>
     c9a:	20 91 ba 02 	lds	r18, 0x02BA	; 0x8002ba <d_1>
     c9e:	30 91 bb 02 	lds	r19, 0x02BB	; 0x8002bb <d_1+0x1>
     ca2:	40 91 bc 02 	lds	r20, 0x02BC	; 0x8002bc <d_1+0x2>
     ca6:	50 91 bd 02 	lds	r21, 0x02BD	; 0x8002bd <d_1+0x3>
     caa:	e7 d6       	rcall	.+3534   	; 0x1a7a <__addsf3>
     cac:	60 93 b2 02 	sts	0x02B2, r22	; 0x8002b2 <pid1>
     cb0:	70 93 b3 02 	sts	0x02B3, r23	; 0x8002b3 <pid1+0x1>
     cb4:	80 93 b4 02 	sts	0x02B4, r24	; 0x8002b4 <pid1+0x2>
     cb8:	90 93 b5 02 	sts	0x02B5, r25	; 0x8002b5 <pid1+0x3>
	if(pid1<0){
     cbc:	60 91 b2 02 	lds	r22, 0x02B2	; 0x8002b2 <pid1>
     cc0:	70 91 b3 02 	lds	r23, 0x02B3	; 0x8002b3 <pid1+0x1>
     cc4:	80 91 b4 02 	lds	r24, 0x02B4	; 0x8002b4 <pid1+0x2>
     cc8:	90 91 b5 02 	lds	r25, 0x02B5	; 0x8002b5 <pid1+0x3>
     ccc:	20 e0       	ldi	r18, 0x00	; 0
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	a9 01       	movw	r20, r18
     cd2:	37 d7       	rcall	.+3694   	; 0x1b42 <__cmpsf2>
     cd4:	88 23       	and	r24, r24
     cd6:	44 f4       	brge	.+16     	; 0xce8 <PID1+0x202>
		pid1 = 0;
     cd8:	10 92 b2 02 	sts	0x02B2, r1	; 0x8002b2 <pid1>
     cdc:	10 92 b3 02 	sts	0x02B3, r1	; 0x8002b3 <pid1+0x1>
     ce0:	10 92 b4 02 	sts	0x02B4, r1	; 0x8002b4 <pid1+0x2>
     ce4:	10 92 b5 02 	sts	0x02B5, r1	; 0x8002b5 <pid1+0x3>
	}
	if(pid1>1023){
     ce8:	60 91 b2 02 	lds	r22, 0x02B2	; 0x8002b2 <pid1>
     cec:	70 91 b3 02 	lds	r23, 0x02B3	; 0x8002b3 <pid1+0x1>
     cf0:	80 91 b4 02 	lds	r24, 0x02B4	; 0x8002b4 <pid1+0x2>
     cf4:	90 91 b5 02 	lds	r25, 0x02B5	; 0x8002b5 <pid1+0x3>
     cf8:	20 e0       	ldi	r18, 0x00	; 0
     cfa:	30 ec       	ldi	r19, 0xC0	; 192
     cfc:	4f e7       	ldi	r20, 0x7F	; 127
     cfe:	54 e4       	ldi	r21, 0x44	; 68
     d00:	0e 94 88 0e 	call	0x1d10	; 0x1d10 <__gesf2>
     d04:	18 16       	cp	r1, r24
     d06:	64 f4       	brge	.+24     	; 0xd20 <PID1+0x23a>
		pid1 = 1023;
     d08:	80 e0       	ldi	r24, 0x00	; 0
     d0a:	90 ec       	ldi	r25, 0xC0	; 192
     d0c:	af e7       	ldi	r26, 0x7F	; 127
     d0e:	b4 e4       	ldi	r27, 0x44	; 68
     d10:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <pid1>
     d14:	90 93 b3 02 	sts	0x02B3, r25	; 0x8002b3 <pid1+0x1>
     d18:	a0 93 b4 02 	sts	0x02B4, r26	; 0x8002b4 <pid1+0x2>
     d1c:	b0 93 b5 02 	sts	0x02B5, r27	; 0x8002b5 <pid1+0x3>
	}
	Set_PWM4((int) pid1);
     d20:	60 91 b2 02 	lds	r22, 0x02B2	; 0x8002b2 <pid1>
     d24:	70 91 b3 02 	lds	r23, 0x02B3	; 0x8002b3 <pid1+0x1>
     d28:	80 91 b4 02 	lds	r24, 0x02B4	; 0x8002b4 <pid1+0x2>
     d2c:	90 91 b5 02 	lds	r25, 0x02B5	; 0x8002b5 <pid1+0x3>
     d30:	0c d7       	rcall	.+3608   	; 0x1b4a <__fixsfsi>
     d32:	cb 01       	movw	r24, r22
     d34:	d3 de       	rcall	.-602    	; 0xadc <Set_PWM4>
}
     d36:	ff 90       	pop	r15
     d38:	ef 90       	pop	r14
     d3a:	df 90       	pop	r13
     d3c:	cf 90       	pop	r12
     d3e:	08 95       	ret

00000d40 <PID2>:

void PID2(){//pid motore 2
     d40:	cf 92       	push	r12
     d42:	df 92       	push	r13
     d44:	ef 92       	push	r14
     d46:	ff 92       	push	r15
	e_2 = (double) (SET_POINT_VELOCITA - velocita_2);
     d48:	c0 90 01 02 	lds	r12, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
     d4c:	d0 90 02 02 	lds	r13, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
     d50:	e0 90 03 02 	lds	r14, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
     d54:	f0 90 04 02 	lds	r15, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
     d58:	60 91 d6 02 	lds	r22, 0x02D6	; 0x8002d6 <velocita_2>
     d5c:	70 91 d7 02 	lds	r23, 0x02D7	; 0x8002d7 <velocita_2+0x1>
     d60:	07 2e       	mov	r0, r23
     d62:	00 0c       	add	r0, r0
     d64:	88 0b       	sbc	r24, r24
     d66:	99 0b       	sbc	r25, r25
     d68:	23 d7       	rcall	.+3654   	; 0x1bb0 <__floatsisf>
     d6a:	9b 01       	movw	r18, r22
     d6c:	ac 01       	movw	r20, r24
     d6e:	c7 01       	movw	r24, r14
     d70:	b6 01       	movw	r22, r12
     d72:	82 d6       	rcall	.+3332   	; 0x1a78 <__subsf3>
     d74:	60 93 ae 02 	sts	0x02AE, r22	; 0x8002ae <e_2>
     d78:	70 93 af 02 	sts	0x02AF, r23	; 0x8002af <e_2+0x1>
     d7c:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <e_2+0x2>
     d80:	90 93 b1 02 	sts	0x02B1, r25	; 0x8002b1 <e_2+0x3>
	p_2 = e_2*KP;
     d84:	60 91 ae 02 	lds	r22, 0x02AE	; 0x8002ae <e_2>
     d88:	70 91 af 02 	lds	r23, 0x02AF	; 0x8002af <e_2+0x1>
     d8c:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <e_2+0x2>
     d90:	90 91 b1 02 	lds	r25, 0x02B1	; 0x8002b1 <e_2+0x3>
     d94:	28 eb       	ldi	r18, 0xB8	; 184
     d96:	3e e1       	ldi	r19, 0x1E	; 30
     d98:	45 e8       	ldi	r20, 0x85	; 133
     d9a:	50 e4       	ldi	r21, 0x40	; 64
     d9c:	bd d7       	rcall	.+3962   	; 0x1d18 <__mulsf3>
     d9e:	60 93 aa 02 	sts	0x02AA, r22	; 0x8002aa <p_2>
     da2:	70 93 ab 02 	sts	0x02AB, r23	; 0x8002ab <p_2+0x1>
     da6:	80 93 ac 02 	sts	0x02AC, r24	; 0x8002ac <p_2+0x2>
     daa:	90 93 ad 02 	sts	0x02AD, r25	; 0x8002ad <p_2+0x3>
	i_2= i_old_2 + (KI*e_2);
     dae:	60 91 ae 02 	lds	r22, 0x02AE	; 0x8002ae <e_2>
     db2:	70 91 af 02 	lds	r23, 0x02AF	; 0x8002af <e_2+0x1>
     db6:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <e_2+0x2>
     dba:	90 91 b1 02 	lds	r25, 0x02B1	; 0x8002b1 <e_2+0x3>
     dbe:	28 eb       	ldi	r18, 0xB8	; 184
     dc0:	3e e1       	ldi	r19, 0x1E	; 30
     dc2:	45 e0       	ldi	r20, 0x05	; 5
     dc4:	5e e3       	ldi	r21, 0x3E	; 62
     dc6:	a8 d7       	rcall	.+3920   	; 0x1d18 <__mulsf3>
     dc8:	20 91 9e 02 	lds	r18, 0x029E	; 0x80029e <i_old_2>
     dcc:	30 91 9f 02 	lds	r19, 0x029F	; 0x80029f <i_old_2+0x1>
     dd0:	40 91 a0 02 	lds	r20, 0x02A0	; 0x8002a0 <i_old_2+0x2>
     dd4:	50 91 a1 02 	lds	r21, 0x02A1	; 0x8002a1 <i_old_2+0x3>
     dd8:	50 d6       	rcall	.+3232   	; 0x1a7a <__addsf3>
     dda:	60 93 a6 02 	sts	0x02A6, r22	; 0x8002a6 <i_2>
     dde:	70 93 a7 02 	sts	0x02A7, r23	; 0x8002a7 <i_2+0x1>
     de2:	80 93 a8 02 	sts	0x02A8, r24	; 0x8002a8 <i_2+0x2>
     de6:	90 93 a9 02 	sts	0x02A9, r25	; 0x8002a9 <i_2+0x3>
	d_2 = (e_2 - e_old_2) * KD;
     dea:	60 91 ae 02 	lds	r22, 0x02AE	; 0x8002ae <e_2>
     dee:	70 91 af 02 	lds	r23, 0x02AF	; 0x8002af <e_2+0x1>
     df2:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <e_2+0x2>
     df6:	90 91 b1 02 	lds	r25, 0x02B1	; 0x8002b1 <e_2+0x3>
     dfa:	20 91 ce 02 	lds	r18, 0x02CE	; 0x8002ce <e_old_2>
     dfe:	30 91 cf 02 	lds	r19, 0x02CF	; 0x8002cf <e_old_2+0x1>
     e02:	40 91 d0 02 	lds	r20, 0x02D0	; 0x8002d0 <e_old_2+0x2>
     e06:	50 91 d1 02 	lds	r21, 0x02D1	; 0x8002d1 <e_old_2+0x3>
     e0a:	36 d6       	rcall	.+3180   	; 0x1a78 <__subsf3>
     e0c:	20 ef       	ldi	r18, 0xF0	; 240
     e0e:	35 e8       	ldi	r19, 0x85	; 133
     e10:	49 ec       	ldi	r20, 0xC9	; 201
     e12:	5c e3       	ldi	r21, 0x3C	; 60
     e14:	81 d7       	rcall	.+3842   	; 0x1d18 <__mulsf3>
     e16:	60 93 a2 02 	sts	0x02A2, r22	; 0x8002a2 <d_2>
     e1a:	70 93 a3 02 	sts	0x02A3, r23	; 0x8002a3 <d_2+0x1>
     e1e:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <d_2+0x2>
     e22:	90 93 a5 02 	sts	0x02A5, r25	; 0x8002a5 <d_2+0x3>
	if(i_2>I_MAX){
     e26:	60 91 a6 02 	lds	r22, 0x02A6	; 0x8002a6 <i_2>
     e2a:	70 91 a7 02 	lds	r23, 0x02A7	; 0x8002a7 <i_2+0x1>
     e2e:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <i_2+0x2>
     e32:	90 91 a9 02 	lds	r25, 0x02A9	; 0x8002a9 <i_2+0x3>
     e36:	20 e0       	ldi	r18, 0x00	; 0
     e38:	30 ec       	ldi	r19, 0xC0	; 192
     e3a:	4f e7       	ldi	r20, 0x7F	; 127
     e3c:	54 e4       	ldi	r21, 0x44	; 68
     e3e:	68 d7       	rcall	.+3792   	; 0x1d10 <__gesf2>
     e40:	18 16       	cp	r1, r24
     e42:	64 f4       	brge	.+24     	; 0xe5c <PID2+0x11c>
		i_2 = I_MAX;
     e44:	80 e0       	ldi	r24, 0x00	; 0
     e46:	90 ec       	ldi	r25, 0xC0	; 192
     e48:	af e7       	ldi	r26, 0x7F	; 127
     e4a:	b4 e4       	ldi	r27, 0x44	; 68
     e4c:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <i_2>
     e50:	90 93 a7 02 	sts	0x02A7, r25	; 0x8002a7 <i_2+0x1>
     e54:	a0 93 a8 02 	sts	0x02A8, r26	; 0x8002a8 <i_2+0x2>
     e58:	b0 93 a9 02 	sts	0x02A9, r27	; 0x8002a9 <i_2+0x3>
	}
	if(i_2<I_MIN){
     e5c:	60 91 a6 02 	lds	r22, 0x02A6	; 0x8002a6 <i_2>
     e60:	70 91 a7 02 	lds	r23, 0x02A7	; 0x8002a7 <i_2+0x1>
     e64:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <i_2+0x2>
     e68:	90 91 a9 02 	lds	r25, 0x02A9	; 0x8002a9 <i_2+0x3>
     e6c:	20 e0       	ldi	r18, 0x00	; 0
     e6e:	30 e0       	ldi	r19, 0x00	; 0
     e70:	a9 01       	movw	r20, r18
     e72:	67 d6       	rcall	.+3278   	; 0x1b42 <__cmpsf2>
     e74:	88 23       	and	r24, r24
     e76:	44 f4       	brge	.+16     	; 0xe88 <PID2+0x148>
		i_2=I_MIN;
     e78:	10 92 a6 02 	sts	0x02A6, r1	; 0x8002a6 <i_2>
     e7c:	10 92 a7 02 	sts	0x02A7, r1	; 0x8002a7 <i_2+0x1>
     e80:	10 92 a8 02 	sts	0x02A8, r1	; 0x8002a8 <i_2+0x2>
     e84:	10 92 a9 02 	sts	0x02A9, r1	; 0x8002a9 <i_2+0x3>
	}
	i_old_2 = i_2;
     e88:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <i_2>
     e8c:	90 91 a7 02 	lds	r25, 0x02A7	; 0x8002a7 <i_2+0x1>
     e90:	a0 91 a8 02 	lds	r26, 0x02A8	; 0x8002a8 <i_2+0x2>
     e94:	b0 91 a9 02 	lds	r27, 0x02A9	; 0x8002a9 <i_2+0x3>
     e98:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <i_old_2>
     e9c:	90 93 9f 02 	sts	0x029F, r25	; 0x80029f <i_old_2+0x1>
     ea0:	a0 93 a0 02 	sts	0x02A0, r26	; 0x8002a0 <i_old_2+0x2>
     ea4:	b0 93 a1 02 	sts	0x02A1, r27	; 0x8002a1 <i_old_2+0x3>
	e_old_2 = e_2;
     ea8:	80 91 ae 02 	lds	r24, 0x02AE	; 0x8002ae <e_2>
     eac:	90 91 af 02 	lds	r25, 0x02AF	; 0x8002af <e_2+0x1>
     eb0:	a0 91 b0 02 	lds	r26, 0x02B0	; 0x8002b0 <e_2+0x2>
     eb4:	b0 91 b1 02 	lds	r27, 0x02B1	; 0x8002b1 <e_2+0x3>
     eb8:	80 93 ce 02 	sts	0x02CE, r24	; 0x8002ce <e_old_2>
     ebc:	90 93 cf 02 	sts	0x02CF, r25	; 0x8002cf <e_old_2+0x1>
     ec0:	a0 93 d0 02 	sts	0x02D0, r26	; 0x8002d0 <e_old_2+0x2>
     ec4:	b0 93 d1 02 	sts	0x02D1, r27	; 0x8002d1 <e_old_2+0x3>
	pid2 = p_2+i_2+d_2;
     ec8:	60 91 aa 02 	lds	r22, 0x02AA	; 0x8002aa <p_2>
     ecc:	70 91 ab 02 	lds	r23, 0x02AB	; 0x8002ab <p_2+0x1>
     ed0:	80 91 ac 02 	lds	r24, 0x02AC	; 0x8002ac <p_2+0x2>
     ed4:	90 91 ad 02 	lds	r25, 0x02AD	; 0x8002ad <p_2+0x3>
     ed8:	20 91 a6 02 	lds	r18, 0x02A6	; 0x8002a6 <i_2>
     edc:	30 91 a7 02 	lds	r19, 0x02A7	; 0x8002a7 <i_2+0x1>
     ee0:	40 91 a8 02 	lds	r20, 0x02A8	; 0x8002a8 <i_2+0x2>
     ee4:	50 91 a9 02 	lds	r21, 0x02A9	; 0x8002a9 <i_2+0x3>
     ee8:	c8 d5       	rcall	.+2960   	; 0x1a7a <__addsf3>
     eea:	20 91 a2 02 	lds	r18, 0x02A2	; 0x8002a2 <d_2>
     eee:	30 91 a3 02 	lds	r19, 0x02A3	; 0x8002a3 <d_2+0x1>
     ef2:	40 91 a4 02 	lds	r20, 0x02A4	; 0x8002a4 <d_2+0x2>
     ef6:	50 91 a5 02 	lds	r21, 0x02A5	; 0x8002a5 <d_2+0x3>
     efa:	bf d5       	rcall	.+2942   	; 0x1a7a <__addsf3>
     efc:	60 93 9a 02 	sts	0x029A, r22	; 0x80029a <pid2>
     f00:	70 93 9b 02 	sts	0x029B, r23	; 0x80029b <pid2+0x1>
     f04:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <pid2+0x2>
     f08:	90 93 9d 02 	sts	0x029D, r25	; 0x80029d <pid2+0x3>
	if(pid2<0){
     f0c:	60 91 9a 02 	lds	r22, 0x029A	; 0x80029a <pid2>
     f10:	70 91 9b 02 	lds	r23, 0x029B	; 0x80029b <pid2+0x1>
     f14:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <pid2+0x2>
     f18:	90 91 9d 02 	lds	r25, 0x029D	; 0x80029d <pid2+0x3>
     f1c:	20 e0       	ldi	r18, 0x00	; 0
     f1e:	30 e0       	ldi	r19, 0x00	; 0
     f20:	a9 01       	movw	r20, r18
     f22:	0f d6       	rcall	.+3102   	; 0x1b42 <__cmpsf2>
     f24:	88 23       	and	r24, r24
     f26:	44 f4       	brge	.+16     	; 0xf38 <PID2+0x1f8>
		pid2 = 0;
     f28:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <pid2>
     f2c:	10 92 9b 02 	sts	0x029B, r1	; 0x80029b <pid2+0x1>
     f30:	10 92 9c 02 	sts	0x029C, r1	; 0x80029c <pid2+0x2>
     f34:	10 92 9d 02 	sts	0x029D, r1	; 0x80029d <pid2+0x3>
	}
	if(pid2>1023){
     f38:	60 91 9a 02 	lds	r22, 0x029A	; 0x80029a <pid2>
     f3c:	70 91 9b 02 	lds	r23, 0x029B	; 0x80029b <pid2+0x1>
     f40:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <pid2+0x2>
     f44:	90 91 9d 02 	lds	r25, 0x029D	; 0x80029d <pid2+0x3>
     f48:	20 e0       	ldi	r18, 0x00	; 0
     f4a:	30 ec       	ldi	r19, 0xC0	; 192
     f4c:	4f e7       	ldi	r20, 0x7F	; 127
     f4e:	54 e4       	ldi	r21, 0x44	; 68
     f50:	df d6       	rcall	.+3518   	; 0x1d10 <__gesf2>
     f52:	18 16       	cp	r1, r24
     f54:	64 f4       	brge	.+24     	; 0xf6e <PID2+0x22e>
		pid2 = 1023;
     f56:	80 e0       	ldi	r24, 0x00	; 0
     f58:	90 ec       	ldi	r25, 0xC0	; 192
     f5a:	af e7       	ldi	r26, 0x7F	; 127
     f5c:	b4 e4       	ldi	r27, 0x44	; 68
     f5e:	80 93 9a 02 	sts	0x029A, r24	; 0x80029a <pid2>
     f62:	90 93 9b 02 	sts	0x029B, r25	; 0x80029b <pid2+0x1>
     f66:	a0 93 9c 02 	sts	0x029C, r26	; 0x80029c <pid2+0x2>
     f6a:	b0 93 9d 02 	sts	0x029D, r27	; 0x80029d <pid2+0x3>
	}
	Set_PWM2((int) pid2);
     f6e:	60 91 9a 02 	lds	r22, 0x029A	; 0x80029a <pid2>
     f72:	70 91 9b 02 	lds	r23, 0x029B	; 0x80029b <pid2+0x1>
     f76:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <pid2+0x2>
     f7a:	90 91 9d 02 	lds	r25, 0x029D	; 0x80029d <pid2+0x3>
     f7e:	e5 d5       	rcall	.+3018   	; 0x1b4a <__fixsfsi>
     f80:	cb 01       	movw	r24, r22
     f82:	a2 dd       	rcall	.-1212   	; 0xac8 <Set_PWM2>
}
     f84:	ff 90       	pop	r15
     f86:	ef 90       	pop	r14
     f88:	df 90       	pop	r13
     f8a:	cf 90       	pop	r12
     f8c:	08 95       	ret

00000f8e <PID3>:

void PID3(){//pid motore 3
     f8e:	cf 92       	push	r12
     f90:	df 92       	push	r13
     f92:	ef 92       	push	r14
     f94:	ff 92       	push	r15
	e_3= (double) (SET_POINT_VELOCITA - velocita_3);
     f96:	c0 90 01 02 	lds	r12, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
     f9a:	d0 90 02 02 	lds	r13, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
     f9e:	e0 90 03 02 	lds	r14, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
     fa2:	f0 90 04 02 	lds	r15, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
     fa6:	60 91 f0 02 	lds	r22, 0x02F0	; 0x8002f0 <velocita_3>
     faa:	70 91 f1 02 	lds	r23, 0x02F1	; 0x8002f1 <velocita_3+0x1>
     fae:	07 2e       	mov	r0, r23
     fb0:	00 0c       	add	r0, r0
     fb2:	88 0b       	sbc	r24, r24
     fb4:	99 0b       	sbc	r25, r25
     fb6:	fc d5       	rcall	.+3064   	; 0x1bb0 <__floatsisf>
     fb8:	9b 01       	movw	r18, r22
     fba:	ac 01       	movw	r20, r24
     fbc:	c7 01       	movw	r24, r14
     fbe:	b6 01       	movw	r22, r12
     fc0:	5b d5       	rcall	.+2742   	; 0x1a78 <__subsf3>
     fc2:	60 93 96 02 	sts	0x0296, r22	; 0x800296 <e_3>
     fc6:	70 93 97 02 	sts	0x0297, r23	; 0x800297 <e_3+0x1>
     fca:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <e_3+0x2>
     fce:	90 93 99 02 	sts	0x0299, r25	; 0x800299 <e_3+0x3>
	p_3 = e_3*KP;
     fd2:	60 91 96 02 	lds	r22, 0x0296	; 0x800296 <e_3>
     fd6:	70 91 97 02 	lds	r23, 0x0297	; 0x800297 <e_3+0x1>
     fda:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <e_3+0x2>
     fde:	90 91 99 02 	lds	r25, 0x0299	; 0x800299 <e_3+0x3>
     fe2:	28 eb       	ldi	r18, 0xB8	; 184
     fe4:	3e e1       	ldi	r19, 0x1E	; 30
     fe6:	45 e8       	ldi	r20, 0x85	; 133
     fe8:	50 e4       	ldi	r21, 0x40	; 64
     fea:	96 d6       	rcall	.+3372   	; 0x1d18 <__mulsf3>
     fec:	60 93 92 02 	sts	0x0292, r22	; 0x800292 <p_3>
     ff0:	70 93 93 02 	sts	0x0293, r23	; 0x800293 <p_3+0x1>
     ff4:	80 93 94 02 	sts	0x0294, r24	; 0x800294 <p_3+0x2>
     ff8:	90 93 95 02 	sts	0x0295, r25	; 0x800295 <p_3+0x3>
	i_3= i_old_3 + (KI*e_3);
     ffc:	60 91 96 02 	lds	r22, 0x0296	; 0x800296 <e_3>
    1000:	70 91 97 02 	lds	r23, 0x0297	; 0x800297 <e_3+0x1>
    1004:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <e_3+0x2>
    1008:	90 91 99 02 	lds	r25, 0x0299	; 0x800299 <e_3+0x3>
    100c:	28 eb       	ldi	r18, 0xB8	; 184
    100e:	3e e1       	ldi	r19, 0x1E	; 30
    1010:	45 e0       	ldi	r20, 0x05	; 5
    1012:	5e e3       	ldi	r21, 0x3E	; 62
    1014:	81 d6       	rcall	.+3330   	; 0x1d18 <__mulsf3>
    1016:	20 91 86 02 	lds	r18, 0x0286	; 0x800286 <i_old_3>
    101a:	30 91 87 02 	lds	r19, 0x0287	; 0x800287 <i_old_3+0x1>
    101e:	40 91 88 02 	lds	r20, 0x0288	; 0x800288 <i_old_3+0x2>
    1022:	50 91 89 02 	lds	r21, 0x0289	; 0x800289 <i_old_3+0x3>
    1026:	29 d5       	rcall	.+2642   	; 0x1a7a <__addsf3>
    1028:	60 93 8e 02 	sts	0x028E, r22	; 0x80028e <i_3>
    102c:	70 93 8f 02 	sts	0x028F, r23	; 0x80028f <i_3+0x1>
    1030:	80 93 90 02 	sts	0x0290, r24	; 0x800290 <i_3+0x2>
    1034:	90 93 91 02 	sts	0x0291, r25	; 0x800291 <i_3+0x3>
	d_3 = (e_3 - e_old_3) * KD;
    1038:	60 91 96 02 	lds	r22, 0x0296	; 0x800296 <e_3>
    103c:	70 91 97 02 	lds	r23, 0x0297	; 0x800297 <e_3+0x1>
    1040:	80 91 98 02 	lds	r24, 0x0298	; 0x800298 <e_3+0x2>
    1044:	90 91 99 02 	lds	r25, 0x0299	; 0x800299 <e_3+0x3>
    1048:	20 91 de 02 	lds	r18, 0x02DE	; 0x8002de <e_old_3>
    104c:	30 91 df 02 	lds	r19, 0x02DF	; 0x8002df <e_old_3+0x1>
    1050:	40 91 e0 02 	lds	r20, 0x02E0	; 0x8002e0 <e_old_3+0x2>
    1054:	50 91 e1 02 	lds	r21, 0x02E1	; 0x8002e1 <e_old_3+0x3>
    1058:	0f d5       	rcall	.+2590   	; 0x1a78 <__subsf3>
    105a:	20 ef       	ldi	r18, 0xF0	; 240
    105c:	35 e8       	ldi	r19, 0x85	; 133
    105e:	49 ec       	ldi	r20, 0xC9	; 201
    1060:	5c e3       	ldi	r21, 0x3C	; 60
    1062:	5a d6       	rcall	.+3252   	; 0x1d18 <__mulsf3>
    1064:	60 93 8a 02 	sts	0x028A, r22	; 0x80028a <d_3>
    1068:	70 93 8b 02 	sts	0x028B, r23	; 0x80028b <d_3+0x1>
    106c:	80 93 8c 02 	sts	0x028C, r24	; 0x80028c <d_3+0x2>
    1070:	90 93 8d 02 	sts	0x028D, r25	; 0x80028d <d_3+0x3>
	if(i_3>I_MAX){
    1074:	60 91 8e 02 	lds	r22, 0x028E	; 0x80028e <i_3>
    1078:	70 91 8f 02 	lds	r23, 0x028F	; 0x80028f <i_3+0x1>
    107c:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <i_3+0x2>
    1080:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <i_3+0x3>
    1084:	20 e0       	ldi	r18, 0x00	; 0
    1086:	30 ec       	ldi	r19, 0xC0	; 192
    1088:	4f e7       	ldi	r20, 0x7F	; 127
    108a:	54 e4       	ldi	r21, 0x44	; 68
    108c:	41 d6       	rcall	.+3202   	; 0x1d10 <__gesf2>
    108e:	18 16       	cp	r1, r24
    1090:	64 f4       	brge	.+24     	; 0x10aa <__EEPROM_REGION_LENGTH__+0xaa>
		i_3 = I_MAX;
    1092:	80 e0       	ldi	r24, 0x00	; 0
    1094:	90 ec       	ldi	r25, 0xC0	; 192
    1096:	af e7       	ldi	r26, 0x7F	; 127
    1098:	b4 e4       	ldi	r27, 0x44	; 68
    109a:	80 93 8e 02 	sts	0x028E, r24	; 0x80028e <i_3>
    109e:	90 93 8f 02 	sts	0x028F, r25	; 0x80028f <i_3+0x1>
    10a2:	a0 93 90 02 	sts	0x0290, r26	; 0x800290 <i_3+0x2>
    10a6:	b0 93 91 02 	sts	0x0291, r27	; 0x800291 <i_3+0x3>
	}
	if(i_3<I_MIN){
    10aa:	60 91 8e 02 	lds	r22, 0x028E	; 0x80028e <i_3>
    10ae:	70 91 8f 02 	lds	r23, 0x028F	; 0x80028f <i_3+0x1>
    10b2:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <i_3+0x2>
    10b6:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <i_3+0x3>
    10ba:	20 e0       	ldi	r18, 0x00	; 0
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	a9 01       	movw	r20, r18
    10c0:	40 d5       	rcall	.+2688   	; 0x1b42 <__cmpsf2>
    10c2:	88 23       	and	r24, r24
    10c4:	44 f4       	brge	.+16     	; 0x10d6 <__EEPROM_REGION_LENGTH__+0xd6>
		i_3=I_MIN;
    10c6:	10 92 8e 02 	sts	0x028E, r1	; 0x80028e <i_3>
    10ca:	10 92 8f 02 	sts	0x028F, r1	; 0x80028f <i_3+0x1>
    10ce:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <i_3+0x2>
    10d2:	10 92 91 02 	sts	0x0291, r1	; 0x800291 <i_3+0x3>
	}
	i_old_3 = i_3;
    10d6:	80 91 8e 02 	lds	r24, 0x028E	; 0x80028e <i_3>
    10da:	90 91 8f 02 	lds	r25, 0x028F	; 0x80028f <i_3+0x1>
    10de:	a0 91 90 02 	lds	r26, 0x0290	; 0x800290 <i_3+0x2>
    10e2:	b0 91 91 02 	lds	r27, 0x0291	; 0x800291 <i_3+0x3>
    10e6:	80 93 86 02 	sts	0x0286, r24	; 0x800286 <i_old_3>
    10ea:	90 93 87 02 	sts	0x0287, r25	; 0x800287 <i_old_3+0x1>
    10ee:	a0 93 88 02 	sts	0x0288, r26	; 0x800288 <i_old_3+0x2>
    10f2:	b0 93 89 02 	sts	0x0289, r27	; 0x800289 <i_old_3+0x3>
	e_old_3 = e_3;
    10f6:	80 91 96 02 	lds	r24, 0x0296	; 0x800296 <e_3>
    10fa:	90 91 97 02 	lds	r25, 0x0297	; 0x800297 <e_3+0x1>
    10fe:	a0 91 98 02 	lds	r26, 0x0298	; 0x800298 <e_3+0x2>
    1102:	b0 91 99 02 	lds	r27, 0x0299	; 0x800299 <e_3+0x3>
    1106:	80 93 de 02 	sts	0x02DE, r24	; 0x8002de <e_old_3>
    110a:	90 93 df 02 	sts	0x02DF, r25	; 0x8002df <e_old_3+0x1>
    110e:	a0 93 e0 02 	sts	0x02E0, r26	; 0x8002e0 <e_old_3+0x2>
    1112:	b0 93 e1 02 	sts	0x02E1, r27	; 0x8002e1 <e_old_3+0x3>
	pid3 = p_3+i_3+d_3;
    1116:	60 91 92 02 	lds	r22, 0x0292	; 0x800292 <p_3>
    111a:	70 91 93 02 	lds	r23, 0x0293	; 0x800293 <p_3+0x1>
    111e:	80 91 94 02 	lds	r24, 0x0294	; 0x800294 <p_3+0x2>
    1122:	90 91 95 02 	lds	r25, 0x0295	; 0x800295 <p_3+0x3>
    1126:	20 91 8e 02 	lds	r18, 0x028E	; 0x80028e <i_3>
    112a:	30 91 8f 02 	lds	r19, 0x028F	; 0x80028f <i_3+0x1>
    112e:	40 91 90 02 	lds	r20, 0x0290	; 0x800290 <i_3+0x2>
    1132:	50 91 91 02 	lds	r21, 0x0291	; 0x800291 <i_3+0x3>
    1136:	a1 d4       	rcall	.+2370   	; 0x1a7a <__addsf3>
    1138:	20 91 8a 02 	lds	r18, 0x028A	; 0x80028a <d_3>
    113c:	30 91 8b 02 	lds	r19, 0x028B	; 0x80028b <d_3+0x1>
    1140:	40 91 8c 02 	lds	r20, 0x028C	; 0x80028c <d_3+0x2>
    1144:	50 91 8d 02 	lds	r21, 0x028D	; 0x80028d <d_3+0x3>
    1148:	98 d4       	rcall	.+2352   	; 0x1a7a <__addsf3>
    114a:	60 93 82 02 	sts	0x0282, r22	; 0x800282 <pid3>
    114e:	70 93 83 02 	sts	0x0283, r23	; 0x800283 <pid3+0x1>
    1152:	80 93 84 02 	sts	0x0284, r24	; 0x800284 <pid3+0x2>
    1156:	90 93 85 02 	sts	0x0285, r25	; 0x800285 <pid3+0x3>
	if(pid3<0){
    115a:	60 91 82 02 	lds	r22, 0x0282	; 0x800282 <pid3>
    115e:	70 91 83 02 	lds	r23, 0x0283	; 0x800283 <pid3+0x1>
    1162:	80 91 84 02 	lds	r24, 0x0284	; 0x800284 <pid3+0x2>
    1166:	90 91 85 02 	lds	r25, 0x0285	; 0x800285 <pid3+0x3>
    116a:	20 e0       	ldi	r18, 0x00	; 0
    116c:	30 e0       	ldi	r19, 0x00	; 0
    116e:	a9 01       	movw	r20, r18
    1170:	e8 d4       	rcall	.+2512   	; 0x1b42 <__cmpsf2>
    1172:	88 23       	and	r24, r24
    1174:	44 f4       	brge	.+16     	; 0x1186 <__EEPROM_REGION_LENGTH__+0x186>
		pid3 = 0;
    1176:	10 92 82 02 	sts	0x0282, r1	; 0x800282 <pid3>
    117a:	10 92 83 02 	sts	0x0283, r1	; 0x800283 <pid3+0x1>
    117e:	10 92 84 02 	sts	0x0284, r1	; 0x800284 <pid3+0x2>
    1182:	10 92 85 02 	sts	0x0285, r1	; 0x800285 <pid3+0x3>
	}
	if(pid3>1023){
    1186:	60 91 82 02 	lds	r22, 0x0282	; 0x800282 <pid3>
    118a:	70 91 83 02 	lds	r23, 0x0283	; 0x800283 <pid3+0x1>
    118e:	80 91 84 02 	lds	r24, 0x0284	; 0x800284 <pid3+0x2>
    1192:	90 91 85 02 	lds	r25, 0x0285	; 0x800285 <pid3+0x3>
    1196:	20 e0       	ldi	r18, 0x00	; 0
    1198:	30 ec       	ldi	r19, 0xC0	; 192
    119a:	4f e7       	ldi	r20, 0x7F	; 127
    119c:	54 e4       	ldi	r21, 0x44	; 68
    119e:	b8 d5       	rcall	.+2928   	; 0x1d10 <__gesf2>
    11a0:	18 16       	cp	r1, r24
    11a2:	64 f4       	brge	.+24     	; 0x11bc <__EEPROM_REGION_LENGTH__+0x1bc>
		pid3 = 1023;
    11a4:	80 e0       	ldi	r24, 0x00	; 0
    11a6:	90 ec       	ldi	r25, 0xC0	; 192
    11a8:	af e7       	ldi	r26, 0x7F	; 127
    11aa:	b4 e4       	ldi	r27, 0x44	; 68
    11ac:	80 93 82 02 	sts	0x0282, r24	; 0x800282 <pid3>
    11b0:	90 93 83 02 	sts	0x0283, r25	; 0x800283 <pid3+0x1>
    11b4:	a0 93 84 02 	sts	0x0284, r26	; 0x800284 <pid3+0x2>
	}
	Set_PWM1((int) pid3);
    11b8:	b0 93 85 02 	sts	0x0285, r27	; 0x800285 <pid3+0x3>
    11bc:	60 91 82 02 	lds	r22, 0x0282	; 0x800282 <pid3>
    11c0:	70 91 83 02 	lds	r23, 0x0283	; 0x800283 <pid3+0x1>
    11c4:	80 91 84 02 	lds	r24, 0x0284	; 0x800284 <pid3+0x2>
    11c8:	90 91 85 02 	lds	r25, 0x0285	; 0x800285 <pid3+0x3>
    11cc:	be d4       	rcall	.+2428   	; 0x1b4a <__fixsfsi>
    11ce:	cb 01       	movw	r24, r22
    11d0:	76 dc       	rcall	.-1812   	; 0xabe <Set_PWM1>
}
    11d2:	ff 90       	pop	r15
    11d4:	ef 90       	pop	r14
    11d6:	df 90       	pop	r13
    11d8:	cf 90       	pop	r12
    11da:	08 95       	ret

000011dc <PID4>:

void PID4(){//pid motore 4
    11dc:	cf 92       	push	r12
    11de:	df 92       	push	r13
    11e0:	ef 92       	push	r14
    11e2:	ff 92       	push	r15
	e_4 = (double) (SET_POINT_VELOCITA - velocita_4);
    11e4:	c0 90 01 02 	lds	r12, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    11e8:	d0 90 02 02 	lds	r13, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    11ec:	e0 90 03 02 	lds	r14, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    11f0:	f0 90 04 02 	lds	r15, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    11f4:	60 91 e6 02 	lds	r22, 0x02E6	; 0x8002e6 <velocita_4>
    11f8:	70 91 e7 02 	lds	r23, 0x02E7	; 0x8002e7 <velocita_4+0x1>
    11fc:	07 2e       	mov	r0, r23
    11fe:	00 0c       	add	r0, r0
    1200:	88 0b       	sbc	r24, r24
    1202:	99 0b       	sbc	r25, r25
    1204:	d5 d4       	rcall	.+2474   	; 0x1bb0 <__floatsisf>
    1206:	9b 01       	movw	r18, r22
    1208:	ac 01       	movw	r20, r24
    120a:	c7 01       	movw	r24, r14
    120c:	b6 01       	movw	r22, r12
    120e:	34 d4       	rcall	.+2152   	; 0x1a78 <__subsf3>
    1210:	60 93 7e 02 	sts	0x027E, r22	; 0x80027e <e_4>
    1214:	70 93 7f 02 	sts	0x027F, r23	; 0x80027f <e_4+0x1>
    1218:	80 93 80 02 	sts	0x0280, r24	; 0x800280 <e_4+0x2>
    121c:	90 93 81 02 	sts	0x0281, r25	; 0x800281 <e_4+0x3>
	p_4 = e_4*KP;
    1220:	60 91 7e 02 	lds	r22, 0x027E	; 0x80027e <e_4>
    1224:	70 91 7f 02 	lds	r23, 0x027F	; 0x80027f <e_4+0x1>
    1228:	80 91 80 02 	lds	r24, 0x0280	; 0x800280 <e_4+0x2>
    122c:	90 91 81 02 	lds	r25, 0x0281	; 0x800281 <e_4+0x3>
    1230:	28 eb       	ldi	r18, 0xB8	; 184
    1232:	3e e1       	ldi	r19, 0x1E	; 30
    1234:	45 e8       	ldi	r20, 0x85	; 133
    1236:	50 e4       	ldi	r21, 0x40	; 64
    1238:	6f d5       	rcall	.+2782   	; 0x1d18 <__mulsf3>
    123a:	60 93 7a 02 	sts	0x027A, r22	; 0x80027a <p_4>
    123e:	70 93 7b 02 	sts	0x027B, r23	; 0x80027b <p_4+0x1>
    1242:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <p_4+0x2>
    1246:	90 93 7d 02 	sts	0x027D, r25	; 0x80027d <p_4+0x3>
	i_4= i_old_4 + (KI*e_4);
    124a:	60 91 7e 02 	lds	r22, 0x027E	; 0x80027e <e_4>
    124e:	70 91 7f 02 	lds	r23, 0x027F	; 0x80027f <e_4+0x1>
    1252:	80 91 80 02 	lds	r24, 0x0280	; 0x800280 <e_4+0x2>
    1256:	90 91 81 02 	lds	r25, 0x0281	; 0x800281 <e_4+0x3>
    125a:	28 eb       	ldi	r18, 0xB8	; 184
    125c:	3e e1       	ldi	r19, 0x1E	; 30
    125e:	45 e0       	ldi	r20, 0x05	; 5
    1260:	5e e3       	ldi	r21, 0x3E	; 62
    1262:	5a d5       	rcall	.+2740   	; 0x1d18 <__mulsf3>
    1264:	20 91 6e 02 	lds	r18, 0x026E	; 0x80026e <i_old_4>
    1268:	30 91 6f 02 	lds	r19, 0x026F	; 0x80026f <i_old_4+0x1>
    126c:	40 91 70 02 	lds	r20, 0x0270	; 0x800270 <i_old_4+0x2>
    1270:	50 91 71 02 	lds	r21, 0x0271	; 0x800271 <i_old_4+0x3>
    1274:	02 d4       	rcall	.+2052   	; 0x1a7a <__addsf3>
    1276:	60 93 76 02 	sts	0x0276, r22	; 0x800276 <i_4>
    127a:	70 93 77 02 	sts	0x0277, r23	; 0x800277 <i_4+0x1>
    127e:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <i_4+0x2>
    1282:	90 93 79 02 	sts	0x0279, r25	; 0x800279 <i_4+0x3>
	d_4 = (e_4 - e_old_4) * KD;
    1286:	60 91 7e 02 	lds	r22, 0x027E	; 0x80027e <e_4>
    128a:	70 91 7f 02 	lds	r23, 0x027F	; 0x80027f <e_4+0x1>
    128e:	80 91 80 02 	lds	r24, 0x0280	; 0x800280 <e_4+0x2>
    1292:	90 91 81 02 	lds	r25, 0x0281	; 0x800281 <e_4+0x3>
    1296:	20 91 d8 02 	lds	r18, 0x02D8	; 0x8002d8 <e_old_4>
    129a:	30 91 d9 02 	lds	r19, 0x02D9	; 0x8002d9 <e_old_4+0x1>
    129e:	40 91 da 02 	lds	r20, 0x02DA	; 0x8002da <e_old_4+0x2>
    12a2:	50 91 db 02 	lds	r21, 0x02DB	; 0x8002db <e_old_4+0x3>
    12a6:	e8 d3       	rcall	.+2000   	; 0x1a78 <__subsf3>
    12a8:	20 ef       	ldi	r18, 0xF0	; 240
    12aa:	35 e8       	ldi	r19, 0x85	; 133
    12ac:	49 ec       	ldi	r20, 0xC9	; 201
    12ae:	5c e3       	ldi	r21, 0x3C	; 60
    12b0:	33 d5       	rcall	.+2662   	; 0x1d18 <__mulsf3>
    12b2:	60 93 72 02 	sts	0x0272, r22	; 0x800272 <d_4>
    12b6:	70 93 73 02 	sts	0x0273, r23	; 0x800273 <d_4+0x1>
    12ba:	80 93 74 02 	sts	0x0274, r24	; 0x800274 <d_4+0x2>
    12be:	90 93 75 02 	sts	0x0275, r25	; 0x800275 <d_4+0x3>
	if(i_4>I_MAX){
    12c2:	60 91 76 02 	lds	r22, 0x0276	; 0x800276 <i_4>
    12c6:	70 91 77 02 	lds	r23, 0x0277	; 0x800277 <i_4+0x1>
    12ca:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <i_4+0x2>
    12ce:	90 91 79 02 	lds	r25, 0x0279	; 0x800279 <i_4+0x3>
    12d2:	20 e0       	ldi	r18, 0x00	; 0
    12d4:	30 ec       	ldi	r19, 0xC0	; 192
    12d6:	4f e7       	ldi	r20, 0x7F	; 127
    12d8:	54 e4       	ldi	r21, 0x44	; 68
    12da:	1a d5       	rcall	.+2612   	; 0x1d10 <__gesf2>
    12dc:	18 16       	cp	r1, r24
    12de:	64 f4       	brge	.+24     	; 0x12f8 <PID4+0x11c>
		i_4 = I_MAX;
    12e0:	80 e0       	ldi	r24, 0x00	; 0
    12e2:	90 ec       	ldi	r25, 0xC0	; 192
    12e4:	af e7       	ldi	r26, 0x7F	; 127
    12e6:	b4 e4       	ldi	r27, 0x44	; 68
    12e8:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <i_4>
    12ec:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <i_4+0x1>
    12f0:	a0 93 78 02 	sts	0x0278, r26	; 0x800278 <i_4+0x2>
    12f4:	b0 93 79 02 	sts	0x0279, r27	; 0x800279 <i_4+0x3>
	}
	if(i_4<I_MIN){
    12f8:	60 91 76 02 	lds	r22, 0x0276	; 0x800276 <i_4>
    12fc:	70 91 77 02 	lds	r23, 0x0277	; 0x800277 <i_4+0x1>
    1300:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <i_4+0x2>
    1304:	90 91 79 02 	lds	r25, 0x0279	; 0x800279 <i_4+0x3>
    1308:	20 e0       	ldi	r18, 0x00	; 0
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	a9 01       	movw	r20, r18
    130e:	19 d4       	rcall	.+2098   	; 0x1b42 <__cmpsf2>
    1310:	88 23       	and	r24, r24
    1312:	44 f4       	brge	.+16     	; 0x1324 <PID4+0x148>
		i_4=I_MIN;
    1314:	10 92 76 02 	sts	0x0276, r1	; 0x800276 <i_4>
    1318:	10 92 77 02 	sts	0x0277, r1	; 0x800277 <i_4+0x1>
    131c:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <i_4+0x2>
    1320:	10 92 79 02 	sts	0x0279, r1	; 0x800279 <i_4+0x3>
	}
	i_old_4 = i_4;
    1324:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <i_4>
    1328:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <i_4+0x1>
    132c:	a0 91 78 02 	lds	r26, 0x0278	; 0x800278 <i_4+0x2>
    1330:	b0 91 79 02 	lds	r27, 0x0279	; 0x800279 <i_4+0x3>
    1334:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <i_old_4>
    1338:	90 93 6f 02 	sts	0x026F, r25	; 0x80026f <i_old_4+0x1>
    133c:	a0 93 70 02 	sts	0x0270, r26	; 0x800270 <i_old_4+0x2>
    1340:	b0 93 71 02 	sts	0x0271, r27	; 0x800271 <i_old_4+0x3>
	e_old_4 = e_4;
    1344:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <e_4>
    1348:	90 91 7f 02 	lds	r25, 0x027F	; 0x80027f <e_4+0x1>
    134c:	a0 91 80 02 	lds	r26, 0x0280	; 0x800280 <e_4+0x2>
    1350:	b0 91 81 02 	lds	r27, 0x0281	; 0x800281 <e_4+0x3>
    1354:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <e_old_4>
    1358:	90 93 d9 02 	sts	0x02D9, r25	; 0x8002d9 <e_old_4+0x1>
    135c:	a0 93 da 02 	sts	0x02DA, r26	; 0x8002da <e_old_4+0x2>
    1360:	b0 93 db 02 	sts	0x02DB, r27	; 0x8002db <e_old_4+0x3>
	pid4 = p_4+i_4+d_4;
    1364:	60 91 7a 02 	lds	r22, 0x027A	; 0x80027a <p_4>
    1368:	70 91 7b 02 	lds	r23, 0x027B	; 0x80027b <p_4+0x1>
    136c:	80 91 7c 02 	lds	r24, 0x027C	; 0x80027c <p_4+0x2>
    1370:	90 91 7d 02 	lds	r25, 0x027D	; 0x80027d <p_4+0x3>
    1374:	20 91 76 02 	lds	r18, 0x0276	; 0x800276 <i_4>
    1378:	30 91 77 02 	lds	r19, 0x0277	; 0x800277 <i_4+0x1>
    137c:	40 91 78 02 	lds	r20, 0x0278	; 0x800278 <i_4+0x2>
    1380:	50 91 79 02 	lds	r21, 0x0279	; 0x800279 <i_4+0x3>
    1384:	7a d3       	rcall	.+1780   	; 0x1a7a <__addsf3>
    1386:	20 91 72 02 	lds	r18, 0x0272	; 0x800272 <d_4>
    138a:	30 91 73 02 	lds	r19, 0x0273	; 0x800273 <d_4+0x1>
    138e:	40 91 74 02 	lds	r20, 0x0274	; 0x800274 <d_4+0x2>
    1392:	50 91 75 02 	lds	r21, 0x0275	; 0x800275 <d_4+0x3>
    1396:	71 d3       	rcall	.+1762   	; 0x1a7a <__addsf3>
    1398:	60 93 6a 02 	sts	0x026A, r22	; 0x80026a <pid4>
    139c:	70 93 6b 02 	sts	0x026B, r23	; 0x80026b <pid4+0x1>
    13a0:	80 93 6c 02 	sts	0x026C, r24	; 0x80026c <pid4+0x2>
    13a4:	90 93 6d 02 	sts	0x026D, r25	; 0x80026d <pid4+0x3>
	if(pid4<0){
    13a8:	60 91 6a 02 	lds	r22, 0x026A	; 0x80026a <pid4>
    13ac:	70 91 6b 02 	lds	r23, 0x026B	; 0x80026b <pid4+0x1>
    13b0:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <pid4+0x2>
    13b4:	90 91 6d 02 	lds	r25, 0x026D	; 0x80026d <pid4+0x3>
    13b8:	20 e0       	ldi	r18, 0x00	; 0
    13ba:	30 e0       	ldi	r19, 0x00	; 0
    13bc:	a9 01       	movw	r20, r18
    13be:	c1 d3       	rcall	.+1922   	; 0x1b42 <__cmpsf2>
    13c0:	88 23       	and	r24, r24
    13c2:	44 f4       	brge	.+16     	; 0x13d4 <PID4+0x1f8>
		pid4 = 0;
    13c4:	10 92 6a 02 	sts	0x026A, r1	; 0x80026a <pid4>
    13c8:	10 92 6b 02 	sts	0x026B, r1	; 0x80026b <pid4+0x1>
    13cc:	10 92 6c 02 	sts	0x026C, r1	; 0x80026c <pid4+0x2>
    13d0:	10 92 6d 02 	sts	0x026D, r1	; 0x80026d <pid4+0x3>
	}
	if(pid4>1023){
    13d4:	60 91 6a 02 	lds	r22, 0x026A	; 0x80026a <pid4>
    13d8:	70 91 6b 02 	lds	r23, 0x026B	; 0x80026b <pid4+0x1>
    13dc:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <pid4+0x2>
    13e0:	90 91 6d 02 	lds	r25, 0x026D	; 0x80026d <pid4+0x3>
    13e4:	20 e0       	ldi	r18, 0x00	; 0
    13e6:	30 ec       	ldi	r19, 0xC0	; 192
    13e8:	4f e7       	ldi	r20, 0x7F	; 127
    13ea:	54 e4       	ldi	r21, 0x44	; 68
    13ec:	91 d4       	rcall	.+2338   	; 0x1d10 <__gesf2>
    13ee:	18 16       	cp	r1, r24
    13f0:	64 f4       	brge	.+24     	; 0x140a <PID4+0x22e>
		pid4 = 1023;
    13f2:	80 e0       	ldi	r24, 0x00	; 0
    13f4:	90 ec       	ldi	r25, 0xC0	; 192
    13f6:	af e7       	ldi	r26, 0x7F	; 127
    13f8:	b4 e4       	ldi	r27, 0x44	; 68
    13fa:	80 93 6a 02 	sts	0x026A, r24	; 0x80026a <pid4>
    13fe:	90 93 6b 02 	sts	0x026B, r25	; 0x80026b <pid4+0x1>
    1402:	a0 93 6c 02 	sts	0x026C, r26	; 0x80026c <pid4+0x2>
	}
	Set_PWM3((int) pid4);
    1406:	b0 93 6d 02 	sts	0x026D, r27	; 0x80026d <pid4+0x3>
    140a:	60 91 6a 02 	lds	r22, 0x026A	; 0x80026a <pid4>
    140e:	70 91 6b 02 	lds	r23, 0x026B	; 0x80026b <pid4+0x1>
    1412:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <pid4+0x2>
    1416:	90 91 6d 02 	lds	r25, 0x026D	; 0x80026d <pid4+0x3>
    141a:	97 d3       	rcall	.+1838   	; 0x1b4a <__fixsfsi>
    141c:	cb 01       	movw	r24, r22
    141e:	59 db       	rcall	.-2382   	; 0xad2 <Set_PWM3>
}
    1420:	ff 90       	pop	r15
    1422:	ef 90       	pop	r14
    1424:	df 90       	pop	r13
    1426:	cf 90       	pop	r12
    1428:	08 95       	ret

0000142a <__vector_42>:

ISR(TIMER4_COMPA_vect){
    142a:	1f 92       	push	r1
    142c:	0f 92       	push	r0
    142e:	0f b6       	in	r0, 0x3f	; 63
    1430:	0f 92       	push	r0
    1432:	11 24       	eor	r1, r1
    1434:	0b b6       	in	r0, 0x3b	; 59
    1436:	0f 92       	push	r0
    1438:	2f 93       	push	r18
    143a:	3f 93       	push	r19
    143c:	4f 93       	push	r20
    143e:	5f 93       	push	r21
    1440:	6f 93       	push	r22
    1442:	7f 93       	push	r23
    1444:	8f 93       	push	r24
    1446:	9f 93       	push	r25
    1448:	af 93       	push	r26
    144a:	bf 93       	push	r27
    144c:	ef 93       	push	r30
    144e:	ff 93       	push	r31
	PID1();
    1450:	4a db       	rcall	.-2412   	; 0xae6 <PID1>
	PID2();
    1452:	76 dc       	rcall	.-1812   	; 0xd40 <PID2>
	PID3();
    1454:	9c dd       	rcall	.-1224   	; 0xf8e <PID3>
    1456:	c2 de       	rcall	.-636    	; 0x11dc <PID4>
	PID4();
    1458:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7c00a5>
	TCNT4 = 0;
    145c:	10 92 a4 00 	sts	0x00A4, r1	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7c00a4>
    1460:	ff 91       	pop	r31
    1462:	ef 91       	pop	r30
}
    1464:	bf 91       	pop	r27
    1466:	af 91       	pop	r26
    1468:	9f 91       	pop	r25
    146a:	8f 91       	pop	r24
    146c:	7f 91       	pop	r23
    146e:	6f 91       	pop	r22
    1470:	5f 91       	pop	r21
    1472:	4f 91       	pop	r20
    1474:	3f 91       	pop	r19
    1476:	2f 91       	pop	r18
    1478:	0f 90       	pop	r0
    147a:	0b be       	out	0x3b, r0	; 59
    147c:	0f 90       	pop	r0
    147e:	0f be       	out	0x3f, r0	; 63
    1480:	0f 90       	pop	r0
    1482:	1f 90       	pop	r1
    1484:	18 95       	reti

00001486 <PWM>:
    1486:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>

void PWM(){
	
	TCCR5A = 0;
	TCCR5B = 1<<CS52;
    148a:	84 e0       	ldi	r24, 0x04	; 4
    148c:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <__TEXT_REGION_LENGTH__+0x7c0121>
	
	DDRH = 1<<PH4;
    1490:	80 e1       	ldi	r24, 0x10	; 16
    1492:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
	DDRA = 0xFF;
    1496:	8f ef       	ldi	r24, 0xFF	; 255
    1498:	81 b9       	out	0x01, r24	; 1
	DDRF = 3;
    149a:	83 e0       	ldi	r24, 0x03	; 3
    149c:	80 bb       	out	0x10, r24	; 16
	
	Init_PWM123();
    149e:	fb da       	rcall	.-2570   	; 0xa96 <Init_PWM123>
	Init_PWM4();
    14a0:	00 db       	rcall	.-2560   	; 0xaa2 <Init_PWM4>
	
	Start_PWM123();
    14a2:	05 db       	rcall	.-2550   	; 0xaae <Start_PWM123>
    14a4:	08 db       	rcall	.-2544   	; 0xab6 <Start_PWM4>
	Start_PWM4();
    14a6:	84 ef       	ldi	r24, 0xF4	; 244
	
	Set_PWM1(SET_INT_PWM);
    14a8:	91 e0       	ldi	r25, 0x01	; 1
    14aa:	09 db       	rcall	.-2542   	; 0xabe <Set_PWM1>
    14ac:	84 ef       	ldi	r24, 0xF4	; 244
	Set_PWM2(SET_INT_PWM);
    14ae:	91 e0       	ldi	r25, 0x01	; 1
    14b0:	0b db       	rcall	.-2538   	; 0xac8 <Set_PWM2>
    14b2:	84 ef       	ldi	r24, 0xF4	; 244
	Set_PWM3(SET_INT_PWM);
    14b4:	91 e0       	ldi	r25, 0x01	; 1
    14b6:	0d db       	rcall	.-2534   	; 0xad2 <Set_PWM3>
    14b8:	84 ef       	ldi	r24, 0xF4	; 244
    14ba:	91 e0       	ldi	r25, 0x01	; 1
	Set_PWM4(SET_INT_PWM);
    14bc:	0f cb       	rjmp	.-2530   	; 0xadc <Set_PWM4>
    14be:	08 95       	ret

000014c0 <PID>:
    14c0:	83 e2       	ldi	r24, 0x23	; 35
    14c2:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
}

void PID(){
	TCCR4A = (1<<COM1B1) | (1<<WGM41) | (1<<WGM40);//inizializza il servo
	TCCR4B = (1<<WGM42) | (1<<CS42);//N=256
    14c6:	8c e0       	ldi	r24, 0x0C	; 12
    14c8:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
	TIMSK4 = 1<<OCIE4A;
    14cc:	82 e0       	ldi	r24, 0x02	; 2
    14ce:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__TEXT_REGION_LENGTH__+0x7c0072>
	OCR4A = 125;
    14d2:	8d e7       	ldi	r24, 0x7D	; 125
    14d4:	90 e0       	ldi	r25, 0x00	; 0
    14d6:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
    14da:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
	
	EICRA = (1<<ISC20) | (1<<ISC21) | (1<<ISC30) | (1<<ISC31);//interrupt rising edge
    14de:	80 ef       	ldi	r24, 0xF0	; 240
    14e0:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
	EICRB = (1<<ISC40) | (1<<ISC41) | (1<<ISC50) | (1<<ISC51);
    14e4:	8f e0       	ldi	r24, 0x0F	; 15
    14e6:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
	EIMSK = 1<<INT2 | 1<<INT3 | 1<<INT4 |1<<INT5;//attivamento interrupt esterni
    14ea:	8c e3       	ldi	r24, 0x3C	; 60
    14ec:	8d bb       	out	0x1d, r24	; 29
	sei();//attivamento ogni interrupt
    14ee:	78 94       	sei
    14f0:	08 95       	ret

000014f2 <avanti>:
}

void avanti(){
	SET_POINT_VELOCITA = 700.0;
    14f2:	80 e0       	ldi	r24, 0x00	; 0
    14f4:	90 e0       	ldi	r25, 0x00	; 0
    14f6:	af e2       	ldi	r26, 0x2F	; 47
    14f8:	b4 e4       	ldi	r27, 0x44	; 68
    14fa:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <SET_POINT_VELOCITA>
    14fe:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1502:	a0 93 03 02 	sts	0x0203, r26	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1506:	b0 93 04 02 	sts	0x0204, r27	; 0x800204 <SET_POINT_VELOCITA+0x3>
	//PORTA = (1<<PA1) | (1<<PA2) | (1<<PA5)| (1<<PA6);//Verso motore
	
	PORTA = (1<<PA1) | (1<<PA2) | (1<<PA4)| (1<<PA6);
    150a:	86 e5       	ldi	r24, 0x56	; 86
    150c:	82 b9       	out	0x02, r24	; 2
	//PA2-PA3 Motore 4		PA2 AVANTI
	//PA6-PA7 Motore 3		PA6 AVANTI
	//PA0-PA1 Motore 2		PA1 AVANTI
	//PA4-PA5 Motore 1		PA4 AVANTI
	Set_PWM4(SET_POINT_VELOCITA);
    150e:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1512:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1516:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    151a:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    151e:	15 d3       	rcall	.+1578   	; 0x1b4a <__fixsfsi>
    1520:	cb 01       	movw	r24, r22
    1522:	dc da       	rcall	.-2632   	; 0xadc <Set_PWM4>
	//_delay_ms(50);
	
	Set_PWM1(SET_POINT_VELOCITA);
    1524:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1528:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    152c:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1530:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1534:	0a d3       	rcall	.+1556   	; 0x1b4a <__fixsfsi>
    1536:	cb 01       	movw	r24, r22
    1538:	c2 da       	rcall	.-2684   	; 0xabe <Set_PWM1>
	Set_PWM2(SET_POINT_VELOCITA);
    153a:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    153e:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1542:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1546:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    154a:	ff d2       	rcall	.+1534   	; 0x1b4a <__fixsfsi>
    154c:	cb 01       	movw	r24, r22
    154e:	bc da       	rcall	.-2696   	; 0xac8 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    1550:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1554:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1558:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    155c:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1560:	f4 d2       	rcall	.+1512   	; 0x1b4a <__fixsfsi>
    1562:	cb 01       	movw	r24, r22
    1564:	b6 ca       	rjmp	.-2708   	; 0xad2 <Set_PWM3>
    1566:	08 95       	ret

00001568 <indietro>:
	
}

void indietro(){
	SET_POINT_VELOCITA = 500.0;
    1568:	80 e0       	ldi	r24, 0x00	; 0
    156a:	90 e0       	ldi	r25, 0x00	; 0
    156c:	aa ef       	ldi	r26, 0xFA	; 250
    156e:	b3 e4       	ldi	r27, 0x43	; 67
    1570:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <SET_POINT_VELOCITA>
    1574:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1578:	a0 93 03 02 	sts	0x0203, r26	; 0x800203 <SET_POINT_VELOCITA+0x2>
    157c:	b0 93 04 02 	sts	0x0204, r27	; 0x800204 <SET_POINT_VELOCITA+0x3>
	PORTA = (1<<PA0) | (1<<PA3) | (1<<PA4)| (1<<PA7);//Verso motore
    1580:	89 e9       	ldi	r24, 0x99	; 153
    1582:	82 b9       	out	0x02, r24	; 2
	Set_PWM1(SET_POINT_VELOCITA);
    1584:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1588:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    158c:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1590:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1594:	da d2       	rcall	.+1460   	; 0x1b4a <__fixsfsi>
    1596:	cb 01       	movw	r24, r22
    1598:	92 da       	rcall	.-2780   	; 0xabe <Set_PWM1>
	Set_PWM2(SET_POINT_VELOCITA);
    159a:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    159e:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    15a2:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    15a6:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    15aa:	cf d2       	rcall	.+1438   	; 0x1b4a <__fixsfsi>
    15ac:	cb 01       	movw	r24, r22
    15ae:	8c da       	rcall	.-2792   	; 0xac8 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    15b0:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    15b4:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    15b8:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    15bc:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    15c0:	c4 d2       	rcall	.+1416   	; 0x1b4a <__fixsfsi>
    15c2:	cb 01       	movw	r24, r22
    15c4:	86 da       	rcall	.-2804   	; 0xad2 <Set_PWM3>
	Set_PWM4(SET_POINT_VELOCITA);
    15c6:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    15ca:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    15ce:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    15d2:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    15d6:	b9 d2       	rcall	.+1394   	; 0x1b4a <__fixsfsi>
    15d8:	cb 01       	movw	r24, r22
    15da:	80 ca       	rjmp	.-2816   	; 0xadc <Set_PWM4>
    15dc:	08 95       	ret

000015de <destra>:
}

void destra(){
	SET_POINT_VELOCITA = 400.0;
    15de:	80 e0       	ldi	r24, 0x00	; 0
    15e0:	90 e0       	ldi	r25, 0x00	; 0
    15e2:	a8 ec       	ldi	r26, 0xC8	; 200
    15e4:	b3 e4       	ldi	r27, 0x43	; 67
    15e6:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <SET_POINT_VELOCITA>
    15ea:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <SET_POINT_VELOCITA+0x1>
    15ee:	a0 93 03 02 	sts	0x0203, r26	; 0x800203 <SET_POINT_VELOCITA+0x2>
    15f2:	b0 93 04 02 	sts	0x0204, r27	; 0x800204 <SET_POINT_VELOCITA+0x3>
	PORTA = (1<<PA0) | (1<<PA2) | (1<<PA4) | (1<<PA6);
    15f6:	85 e5       	ldi	r24, 0x55	; 85
    15f8:	82 b9       	out	0x02, r24	; 2
	Set_PWM1(SET_POINT_VELOCITA);
    15fa:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    15fe:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1602:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1606:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    160a:	9f d2       	rcall	.+1342   	; 0x1b4a <__fixsfsi>
    160c:	cb 01       	movw	r24, r22
    160e:	57 da       	rcall	.-2898   	; 0xabe <Set_PWM1>
	Set_PWM2(SET_POINT_VELOCITA);
    1610:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1614:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1618:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    161c:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1620:	94 d2       	rcall	.+1320   	; 0x1b4a <__fixsfsi>
    1622:	cb 01       	movw	r24, r22
    1624:	51 da       	rcall	.-2910   	; 0xac8 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    1626:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    162a:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    162e:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1632:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1636:	89 d2       	rcall	.+1298   	; 0x1b4a <__fixsfsi>
    1638:	cb 01       	movw	r24, r22
    163a:	4b da       	rcall	.-2922   	; 0xad2 <Set_PWM3>
	Set_PWM4(SET_POINT_VELOCITA);
    163c:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1640:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1644:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1648:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    164c:	7e d2       	rcall	.+1276   	; 0x1b4a <__fixsfsi>
    164e:	cb 01       	movw	r24, r22
    1650:	45 ca       	rjmp	.-2934   	; 0xadc <Set_PWM4>
    1652:	08 95       	ret

00001654 <destra_lento>:
}

void destra_lento(){
	SET_POINT_VELOCITA = 200.0;
    1654:	80 e0       	ldi	r24, 0x00	; 0
    1656:	90 e0       	ldi	r25, 0x00	; 0
    1658:	a8 e4       	ldi	r26, 0x48	; 72
    165a:	b3 e4       	ldi	r27, 0x43	; 67
    165c:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <SET_POINT_VELOCITA>
    1660:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1664:	a0 93 03 02 	sts	0x0203, r26	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1668:	b0 93 04 02 	sts	0x0204, r27	; 0x800204 <SET_POINT_VELOCITA+0x3>
	PORTA = (1<<PA0) | (1<<PA2) | (1<<PA4) | (1<<PA6);
    166c:	85 e5       	ldi	r24, 0x55	; 85
    166e:	82 b9       	out	0x02, r24	; 2
	Set_PWM1(SET_POINT_VELOCITA);
    1670:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1674:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1678:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    167c:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1680:	64 d2       	rcall	.+1224   	; 0x1b4a <__fixsfsi>
    1682:	cb 01       	movw	r24, r22
    1684:	1c da       	rcall	.-3016   	; 0xabe <Set_PWM1>
	Set_PWM2(SET_POINT_VELOCITA);
    1686:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    168a:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    168e:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1692:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1696:	59 d2       	rcall	.+1202   	; 0x1b4a <__fixsfsi>
    1698:	cb 01       	movw	r24, r22
    169a:	16 da       	rcall	.-3028   	; 0xac8 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    169c:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    16a0:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    16a4:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    16a8:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    16ac:	4e d2       	rcall	.+1180   	; 0x1b4a <__fixsfsi>
    16ae:	cb 01       	movw	r24, r22
    16b0:	10 da       	rcall	.-3040   	; 0xad2 <Set_PWM3>
	Set_PWM4(SET_POINT_VELOCITA);
    16b2:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    16b6:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    16ba:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    16be:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    16c2:	43 d2       	rcall	.+1158   	; 0x1b4a <__fixsfsi>
    16c4:	cb 01       	movw	r24, r22
    16c6:	0a ca       	rjmp	.-3052   	; 0xadc <Set_PWM4>
    16c8:	08 95       	ret

000016ca <sinistra>:
}

void sinistra(){
	SET_POINT_VELOCITA = 400.0;
    16ca:	80 e0       	ldi	r24, 0x00	; 0
    16cc:	90 e0       	ldi	r25, 0x00	; 0
    16ce:	a8 ec       	ldi	r26, 0xC8	; 200
    16d0:	b3 e4       	ldi	r27, 0x43	; 67
    16d2:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <SET_POINT_VELOCITA>
    16d6:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <SET_POINT_VELOCITA+0x1>
    16da:	a0 93 03 02 	sts	0x0203, r26	; 0x800203 <SET_POINT_VELOCITA+0x2>
    16de:	b0 93 04 02 	sts	0x0204, r27	; 0x800204 <SET_POINT_VELOCITA+0x3>
	PORTA = (1<<PA1) | (1<<PA3) | (1<<PA5)| (1<<PA7);
    16e2:	8a ea       	ldi	r24, 0xAA	; 170
    16e4:	82 b9       	out	0x02, r24	; 2
	Set_PWM1(SET_POINT_VELOCITA);
    16e6:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    16ea:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    16ee:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    16f2:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    16f6:	29 d2       	rcall	.+1106   	; 0x1b4a <__fixsfsi>
    16f8:	cb 01       	movw	r24, r22
    16fa:	e1 d9       	rcall	.-3134   	; 0xabe <Set_PWM1>
	Set_PWM2(SET_POINT_VELOCITA);
    16fc:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1700:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1704:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1708:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    170c:	1e d2       	rcall	.+1084   	; 0x1b4a <__fixsfsi>
    170e:	cb 01       	movw	r24, r22
    1710:	db d9       	rcall	.-3146   	; 0xac8 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    1712:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1716:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    171a:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    171e:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1722:	13 d2       	rcall	.+1062   	; 0x1b4a <__fixsfsi>
    1724:	cb 01       	movw	r24, r22
    1726:	d5 d9       	rcall	.-3158   	; 0xad2 <Set_PWM3>
	Set_PWM4(SET_POINT_VELOCITA);
    1728:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    172c:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1730:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1734:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1738:	08 d2       	rcall	.+1040   	; 0x1b4a <__fixsfsi>
    173a:	cb 01       	movw	r24, r22
    173c:	cf c9       	rjmp	.-3170   	; 0xadc <Set_PWM4>
    173e:	08 95       	ret

00001740 <sinistra_lento>:
}

void sinistra_lento(){
	SET_POINT_VELOCITA = 150.0;
    1740:	80 e0       	ldi	r24, 0x00	; 0
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	a6 e1       	ldi	r26, 0x16	; 22
    1746:	b3 e4       	ldi	r27, 0x43	; 67
    1748:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <SET_POINT_VELOCITA>
    174c:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1750:	a0 93 03 02 	sts	0x0203, r26	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1754:	b0 93 04 02 	sts	0x0204, r27	; 0x800204 <SET_POINT_VELOCITA+0x3>
	PORTA = (1<<PA1) | (1<<PA3) | (1<<PA5)| (1<<PA7);
    1758:	8a ea       	ldi	r24, 0xAA	; 170
    175a:	82 b9       	out	0x02, r24	; 2
	Set_PWM1(SET_POINT_VELOCITA);
    175c:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1760:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1764:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1768:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    176c:	ee d1       	rcall	.+988    	; 0x1b4a <__fixsfsi>
    176e:	cb 01       	movw	r24, r22
    1770:	a6 d9       	rcall	.-3252   	; 0xabe <Set_PWM1>
	Set_PWM2(SET_POINT_VELOCITA);
    1772:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1776:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    177a:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    177e:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1782:	e3 d1       	rcall	.+966    	; 0x1b4a <__fixsfsi>
    1784:	cb 01       	movw	r24, r22
    1786:	a0 d9       	rcall	.-3264   	; 0xac8 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    1788:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    178c:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1790:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1794:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1798:	d8 d1       	rcall	.+944    	; 0x1b4a <__fixsfsi>
    179a:	cb 01       	movw	r24, r22
    179c:	9a d9       	rcall	.-3276   	; 0xad2 <Set_PWM3>
	Set_PWM4(SET_POINT_VELOCITA);
    179e:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    17a2:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    17a6:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    17aa:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    17ae:	cd d1       	rcall	.+922    	; 0x1b4a <__fixsfsi>
    17b0:	cb 01       	movw	r24, r22
    17b2:	94 c9       	rjmp	.-3288   	; 0xadc <Set_PWM4>
    17b4:	08 95       	ret

000017b6 <stop_tutto>:
}

void stop_tutto(){
	SET_POINT_VELOCITA = 0;
    17b6:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <SET_POINT_VELOCITA>
    17ba:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <SET_POINT_VELOCITA+0x1>
    17be:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <SET_POINT_VELOCITA+0x2>
    17c2:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <SET_POINT_VELOCITA+0x3>
	Set_PWM2(SET_POINT_VELOCITA);
    17c6:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    17ca:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    17ce:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    17d2:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    17d6:	b9 d1       	rcall	.+882    	; 0x1b4a <__fixsfsi>
    17d8:	cb 01       	movw	r24, r22
    17da:	76 d9       	rcall	.-3348   	; 0xac8 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    17dc:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    17e0:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    17e4:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    17e8:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    17ec:	ae d1       	rcall	.+860    	; 0x1b4a <__fixsfsi>
    17ee:	cb 01       	movw	r24, r22
    17f0:	70 d9       	rcall	.-3360   	; 0xad2 <Set_PWM3>
	
	//_delay_ms(250);
	Set_PWM1(SET_POINT_VELOCITA);
    17f2:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    17f6:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    17fa:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    17fe:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1802:	a3 d1       	rcall	.+838    	; 0x1b4a <__fixsfsi>
    1804:	cb 01       	movw	r24, r22
    1806:	5b d9       	rcall	.-3402   	; 0xabe <Set_PWM1>
	Set_PWM4(SET_POINT_VELOCITA);
    1808:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    180c:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1810:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1814:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1818:	98 d1       	rcall	.+816    	; 0x1b4a <__fixsfsi>
    181a:	cb 01       	movw	r24, r22
    181c:	5f c9       	rjmp	.-3394   	; 0xadc <Set_PWM4>
    181e:	08 95       	ret

00001820 <Serial_Init>:
}
unsigned char Serial_Rx( void )
{
	while ( !(UCSR0A & (1<<RXC0)) );
	return UDR0;
}
    1820:	80 91 ca 02 	lds	r24, 0x02CA	; 0x8002ca <BAUD0>
    1824:	90 91 cb 02 	lds	r25, 0x02CB	; 0x8002cb <BAUD0+0x1>
    1828:	a0 91 cc 02 	lds	r26, 0x02CC	; 0x8002cc <BAUD0+0x2>
    182c:	b0 91 cd 02 	lds	r27, 0x02CD	; 0x8002cd <BAUD0+0x3>
    1830:	89 2f       	mov	r24, r25
    1832:	9a 2f       	mov	r25, r26
    1834:	ab 2f       	mov	r26, r27
    1836:	bb 27       	eor	r27, r27
    1838:	a7 fd       	sbrc	r26, 7
    183a:	ba 95       	dec	r27
    183c:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
    1840:	80 91 ca 02 	lds	r24, 0x02CA	; 0x8002ca <BAUD0>
    1844:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
    1848:	88 e9       	ldi	r24, 0x98	; 152
    184a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
    184e:	86 e0       	ldi	r24, 0x06	; 6
    1850:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7c00c2>
    1854:	08 95       	ret

00001856 <Serial_Tx>:
    1856:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    185a:	95 ff       	sbrs	r25, 5
    185c:	fc cf       	rjmp	.-8      	; 0x1856 <Serial_Tx>
    185e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    1862:	08 95       	ret

00001864 <Serial_Send_String>:
	}
}


void Serial_Send_String(char *string1)
{
    1864:	0f 93       	push	r16
    1866:	1f 93       	push	r17
    1868:	cf 93       	push	r28
    186a:	df 93       	push	r29
    186c:	8c 01       	movw	r16, r24
	int i=0;
	for(i=0;i<strlen(string1);i++)
    186e:	c0 e0       	ldi	r28, 0x00	; 0
    1870:	d0 e0       	ldi	r29, 0x00	; 0
    1872:	06 c0       	rjmp	.+12     	; 0x1880 <Serial_Send_String+0x1c>
	{
		Serial_Tx(string1[i]);
    1874:	f8 01       	movw	r30, r16
    1876:	ec 0f       	add	r30, r28
    1878:	fd 1f       	adc	r31, r29
    187a:	80 81       	ld	r24, Z
    187c:	ec df       	rcall	.-40     	; 0x1856 <Serial_Tx>


void Serial_Send_String(char *string1)
{
	int i=0;
	for(i=0;i<strlen(string1);i++)
    187e:	21 96       	adiw	r28, 0x01	; 1
    1880:	f8 01       	movw	r30, r16
    1882:	01 90       	ld	r0, Z+
    1884:	00 20       	and	r0, r0
    1886:	e9 f7       	brne	.-6      	; 0x1882 <Serial_Send_String+0x1e>
    1888:	31 97       	sbiw	r30, 0x01	; 1
    188a:	e0 1b       	sub	r30, r16
    188c:	f1 0b       	sbc	r31, r17
    188e:	ce 17       	cp	r28, r30
    1890:	df 07       	cpc	r29, r31
    1892:	80 f3       	brcs	.-32     	; 0x1874 <Serial_Send_String+0x10>
	{
		Serial_Tx(string1[i]);
	}
}
    1894:	df 91       	pop	r29
    1896:	cf 91       	pop	r28
    1898:	1f 91       	pop	r17
    189a:	0f 91       	pop	r16
    189c:	08 95       	ret

0000189e <Serial_Send_Int>:
	while ( !(UCSR0A & (1<<RXC0)) );
	return UDR0;
}

void Serial_Send_Int(int64_t num)
{
    189e:	2f 92       	push	r2
    18a0:	3f 92       	push	r3
    18a2:	4f 92       	push	r4
    18a4:	5f 92       	push	r5
    18a6:	6f 92       	push	r6
    18a8:	7f 92       	push	r7
    18aa:	8f 92       	push	r8
    18ac:	9f 92       	push	r9
    18ae:	af 92       	push	r10
    18b0:	bf 92       	push	r11
    18b2:	cf 92       	push	r12
    18b4:	df 92       	push	r13
    18b6:	ef 92       	push	r14
    18b8:	ff 92       	push	r15
    18ba:	0f 93       	push	r16
    18bc:	1f 93       	push	r17
    18be:	cf 93       	push	r28
    18c0:	df 93       	push	r29
    18c2:	cd b7       	in	r28, 0x3d	; 61
    18c4:	de b7       	in	r29, 0x3e	; 62
    18c6:	c3 54       	subi	r28, 0x43	; 67
    18c8:	d1 09       	sbc	r29, r1
    18ca:	0f b6       	in	r0, 0x3f	; 63
    18cc:	f8 94       	cli
    18ce:	de bf       	out	0x3e, r29	; 62
    18d0:	0f be       	out	0x3f, r0	; 63
    18d2:	cd bf       	out	0x3d, r28	; 61
    18d4:	22 96       	adiw	r28, 0x02	; 2
    18d6:	2f af       	std	Y+63, r18	; 0x3f
    18d8:	22 97       	sbiw	r28, 0x02	; 2
    18da:	23 96       	adiw	r28, 0x03	; 3
    18dc:	3f af       	std	Y+63, r19	; 0x3f
    18de:	23 97       	sbiw	r28, 0x03	; 3
    18e0:	24 96       	adiw	r28, 0x04	; 4
    18e2:	4f af       	std	Y+63, r20	; 0x3f
    18e4:	24 97       	sbiw	r28, 0x04	; 4
    18e6:	85 2e       	mov	r8, r21
    18e8:	76 2e       	mov	r7, r22
    18ea:	67 2e       	mov	r6, r23
    18ec:	38 2e       	mov	r3, r24
    18ee:	29 2e       	mov	r2, r25
	if(num<0)
    18f0:	a0 e0       	ldi	r26, 0x00	; 0
    18f2:	7b d3       	rcall	.+1782   	; 0x1fea <__cmpdi2_s8>
    18f4:	04 f5       	brge	.+64     	; 0x1936 <Serial_Send_Int+0x98>
	{
		Serial_Send_String("-");
    18f6:	81 e4       	ldi	r24, 0x41	; 65
    18f8:	92 e0       	ldi	r25, 0x02	; 2
    18fa:	b4 df       	rcall	.-152    	; 0x1864 <Serial_Send_String>
		num=-num;
    18fc:	22 96       	adiw	r28, 0x02	; 2
    18fe:	2f ad       	ldd	r18, Y+63	; 0x3f
    1900:	22 97       	sbiw	r28, 0x02	; 2
    1902:	23 96       	adiw	r28, 0x03	; 3
    1904:	3f ad       	ldd	r19, Y+63	; 0x3f
    1906:	23 97       	sbiw	r28, 0x03	; 3
    1908:	24 96       	adiw	r28, 0x04	; 4
    190a:	4f ad       	ldd	r20, Y+63	; 0x3f
    190c:	24 97       	sbiw	r28, 0x04	; 4
    190e:	58 2d       	mov	r21, r8
    1910:	67 2d       	mov	r22, r7
    1912:	76 2d       	mov	r23, r6
    1914:	83 2d       	mov	r24, r3
    1916:	92 2d       	mov	r25, r2
    1918:	21 d3       	rcall	.+1602   	; 0x1f5c <__negdi2>
    191a:	22 96       	adiw	r28, 0x02	; 2
    191c:	2f af       	std	Y+63, r18	; 0x3f
    191e:	22 97       	sbiw	r28, 0x02	; 2
    1920:	23 96       	adiw	r28, 0x03	; 3
    1922:	3f af       	std	Y+63, r19	; 0x3f
    1924:	23 97       	sbiw	r28, 0x03	; 3
    1926:	24 96       	adiw	r28, 0x04	; 4
    1928:	4f af       	std	Y+63, r20	; 0x3f
    192a:	24 97       	sbiw	r28, 0x04	; 4
    192c:	85 2e       	mov	r8, r21
    192e:	76 2e       	mov	r7, r22
    1930:	67 2e       	mov	r6, r23
    1932:	38 2e       	mov	r3, r24
    1934:	29 2e       	mov	r2, r25
	}
	if(num==0){Serial_Tx('0');}
    1936:	22 96       	adiw	r28, 0x02	; 2
    1938:	2f ad       	ldd	r18, Y+63	; 0x3f
    193a:	22 97       	sbiw	r28, 0x02	; 2
    193c:	23 96       	adiw	r28, 0x03	; 3
    193e:	3f ad       	ldd	r19, Y+63	; 0x3f
    1940:	23 97       	sbiw	r28, 0x03	; 3
    1942:	24 96       	adiw	r28, 0x04	; 4
    1944:	4f ad       	ldd	r20, Y+63	; 0x3f
    1946:	24 97       	sbiw	r28, 0x04	; 4
    1948:	58 2d       	mov	r21, r8
    194a:	67 2d       	mov	r22, r7
    194c:	76 2d       	mov	r23, r6
    194e:	83 2d       	mov	r24, r3
    1950:	92 2d       	mov	r25, r2
    1952:	a0 e0       	ldi	r26, 0x00	; 0
    1954:	4a d3       	rcall	.+1684   	; 0x1fea <__cmpdi2_s8>
    1956:	61 f4       	brne	.+24     	; 0x1970 <Serial_Send_Int+0xd2>
    1958:	80 e3       	ldi	r24, 0x30	; 48
    195a:	7d df       	rcall	.-262    	; 0x1856 <Serial_Tx>
    195c:	73 c0       	rjmp	.+230    	; 0x1a44 <Serial_Send_Int+0x1a6>
	else
	{
		char str[64];				// definisce una stringa sulla quale convertire il numero da trasmettere (max 10 cifre)
		char i;						// contatore ciclo
		for(i=0;i<32;i++) str[i]=0; // cancella la stringa
    195e:	e1 e0       	ldi	r30, 0x01	; 1
    1960:	f0 e0       	ldi	r31, 0x00	; 0
    1962:	ec 0f       	add	r30, r28
    1964:	fd 1f       	adc	r31, r29
    1966:	e8 0f       	add	r30, r24
    1968:	f1 1d       	adc	r31, r1
    196a:	10 82       	st	Z, r1
    196c:	8f 5f       	subi	r24, 0xFF	; 255
    196e:	01 c0       	rjmp	.+2      	; 0x1972 <Serial_Send_Int+0xd4>
    1970:	80 e0       	ldi	r24, 0x00	; 0
    1972:	80 32       	cpi	r24, 0x20	; 32
    1974:	a0 f3       	brcs	.-24     	; 0x195e <Serial_Send_Int+0xc0>
    1976:	0f 2e       	mov	r0, r31
    1978:	ff e1       	ldi	r31, 0x1F	; 31
    197a:	9f 2e       	mov	r9, r31
    197c:	f0 2d       	mov	r31, r0
    197e:	42 c0       	rjmp	.+132    	; 0x1a04 <Serial_Send_Int+0x166>
		i=31;
		while (num)
		{
			str[i]=num%10+'0';		// converte il numero da trasmettere in una stringa (dalla cifra meno significativa)
    1980:	49 2c       	mov	r4, r9
    1982:	51 2c       	mov	r5, r1
    1984:	0f 2e       	mov	r0, r31
    1986:	fa e0       	ldi	r31, 0x0A	; 10
    1988:	af 2e       	mov	r10, r31
    198a:	f0 2d       	mov	r31, r0
    198c:	b1 2c       	mov	r11, r1
    198e:	c1 2c       	mov	r12, r1
    1990:	d1 2c       	mov	r13, r1
    1992:	e1 2c       	mov	r14, r1
    1994:	f1 2c       	mov	r15, r1
    1996:	00 e0       	ldi	r16, 0x00	; 0
    1998:	10 e0       	ldi	r17, 0x00	; 0
    199a:	22 96       	adiw	r28, 0x02	; 2
    199c:	2f ad       	ldd	r18, Y+63	; 0x3f
    199e:	22 97       	sbiw	r28, 0x02	; 2
    19a0:	23 96       	adiw	r28, 0x03	; 3
    19a2:	3f ad       	ldd	r19, Y+63	; 0x3f
    19a4:	23 97       	sbiw	r28, 0x03	; 3
    19a6:	24 96       	adiw	r28, 0x04	; 4
    19a8:	4f ad       	ldd	r20, Y+63	; 0x3f
    19aa:	24 97       	sbiw	r28, 0x04	; 4
    19ac:	58 2d       	mov	r21, r8
    19ae:	67 2d       	mov	r22, r7
    19b0:	76 2d       	mov	r23, r6
    19b2:	83 2d       	mov	r24, r3
    19b4:	92 2d       	mov	r25, r2
    19b6:	49 d2       	rcall	.+1170   	; 0x1e4a <__moddi3>
    19b8:	e1 e0       	ldi	r30, 0x01	; 1
    19ba:	f0 e0       	ldi	r31, 0x00	; 0
    19bc:	ec 0f       	add	r30, r28
    19be:	fd 1f       	adc	r31, r29
    19c0:	e4 0d       	add	r30, r4
    19c2:	f5 1d       	adc	r31, r5
    19c4:	20 5d       	subi	r18, 0xD0	; 208
    19c6:	20 83       	st	Z, r18
			num/=10;
    19c8:	22 96       	adiw	r28, 0x02	; 2
    19ca:	2f ad       	ldd	r18, Y+63	; 0x3f
    19cc:	22 97       	sbiw	r28, 0x02	; 2
    19ce:	23 96       	adiw	r28, 0x03	; 3
    19d0:	3f ad       	ldd	r19, Y+63	; 0x3f
    19d2:	23 97       	sbiw	r28, 0x03	; 3
    19d4:	24 96       	adiw	r28, 0x04	; 4
    19d6:	4f ad       	ldd	r20, Y+63	; 0x3f
    19d8:	24 97       	sbiw	r28, 0x04	; 4
    19da:	58 2d       	mov	r21, r8
    19dc:	67 2d       	mov	r22, r7
    19de:	76 2d       	mov	r23, r6
    19e0:	83 2d       	mov	r24, r3
    19e2:	92 2d       	mov	r25, r2
    19e4:	34 d2       	rcall	.+1128   	; 0x1e4e <__divdi3>
    19e6:	22 96       	adiw	r28, 0x02	; 2
    19e8:	2f af       	std	Y+63, r18	; 0x3f
    19ea:	22 97       	sbiw	r28, 0x02	; 2
    19ec:	23 96       	adiw	r28, 0x03	; 3
    19ee:	3f af       	std	Y+63, r19	; 0x3f
    19f0:	23 97       	sbiw	r28, 0x03	; 3
    19f2:	24 96       	adiw	r28, 0x04	; 4
    19f4:	4f af       	std	Y+63, r20	; 0x3f
    19f6:	24 97       	sbiw	r28, 0x04	; 4
    19f8:	85 2e       	mov	r8, r21
    19fa:	76 2e       	mov	r7, r22
    19fc:	67 2e       	mov	r6, r23
    19fe:	38 2e       	mov	r3, r24
    1a00:	29 2e       	mov	r2, r25
			i--;
    1a02:	9a 94       	dec	r9
	{
		char str[64];				// definisce una stringa sulla quale convertire il numero da trasmettere (max 10 cifre)
		char i;						// contatore ciclo
		for(i=0;i<32;i++) str[i]=0; // cancella la stringa
		i=31;
		while (num)
    1a04:	22 96       	adiw	r28, 0x02	; 2
    1a06:	2f ad       	ldd	r18, Y+63	; 0x3f
    1a08:	22 97       	sbiw	r28, 0x02	; 2
    1a0a:	23 96       	adiw	r28, 0x03	; 3
    1a0c:	3f ad       	ldd	r19, Y+63	; 0x3f
    1a0e:	23 97       	sbiw	r28, 0x03	; 3
    1a10:	24 96       	adiw	r28, 0x04	; 4
    1a12:	4f ad       	ldd	r20, Y+63	; 0x3f
    1a14:	24 97       	sbiw	r28, 0x04	; 4
    1a16:	58 2d       	mov	r21, r8
    1a18:	67 2d       	mov	r22, r7
    1a1a:	76 2d       	mov	r23, r6
    1a1c:	83 2d       	mov	r24, r3
    1a1e:	92 2d       	mov	r25, r2
    1a20:	a0 e0       	ldi	r26, 0x00	; 0
    1a22:	e3 d2       	rcall	.+1478   	; 0x1fea <__cmpdi2_s8>
    1a24:	09 f0       	breq	.+2      	; 0x1a28 <Serial_Send_Int+0x18a>
    1a26:	ac cf       	rjmp	.-168    	; 0x1980 <Serial_Send_Int+0xe2>
    1a28:	10 e0       	ldi	r17, 0x00	; 0
    1a2a:	0a c0       	rjmp	.+20     	; 0x1a40 <Serial_Send_Int+0x1a2>
			str[i]=num%10+'0';		// converte il numero da trasmettere in una stringa (dalla cifra meno significativa)
			num/=10;
			i--;
		}
		for (i=0;i<32;i++)			// invia la stringa un carattere alla volta
		if (str[i]) Serial_Tx(str[i]);
    1a2c:	e1 e0       	ldi	r30, 0x01	; 1
    1a2e:	f0 e0       	ldi	r31, 0x00	; 0
    1a30:	ec 0f       	add	r30, r28
    1a32:	fd 1f       	adc	r31, r29
    1a34:	e1 0f       	add	r30, r17
    1a36:	f1 1d       	adc	r31, r1
    1a38:	80 81       	ld	r24, Z
    1a3a:	81 11       	cpse	r24, r1
    1a3c:	0c df       	rcall	.-488    	; 0x1856 <Serial_Tx>
		{
			str[i]=num%10+'0';		// converte il numero da trasmettere in una stringa (dalla cifra meno significativa)
			num/=10;
			i--;
		}
		for (i=0;i<32;i++)			// invia la stringa un carattere alla volta
    1a3e:	1f 5f       	subi	r17, 0xFF	; 255
    1a40:	10 32       	cpi	r17, 0x20	; 32
    1a42:	a0 f3       	brcs	.-24     	; 0x1a2c <Serial_Send_Int+0x18e>
		if (str[i]) Serial_Tx(str[i]);
	}
}
    1a44:	cd 5b       	subi	r28, 0xBD	; 189
    1a46:	df 4f       	sbci	r29, 0xFF	; 255
    1a48:	0f b6       	in	r0, 0x3f	; 63
    1a4a:	f8 94       	cli
    1a4c:	de bf       	out	0x3e, r29	; 62
    1a4e:	0f be       	out	0x3f, r0	; 63
    1a50:	cd bf       	out	0x3d, r28	; 61
    1a52:	df 91       	pop	r29
    1a54:	cf 91       	pop	r28
    1a56:	1f 91       	pop	r17
    1a58:	0f 91       	pop	r16
    1a5a:	ff 90       	pop	r15
    1a5c:	ef 90       	pop	r14
    1a5e:	df 90       	pop	r13
    1a60:	cf 90       	pop	r12
    1a62:	bf 90       	pop	r11
    1a64:	af 90       	pop	r10
    1a66:	9f 90       	pop	r9
    1a68:	8f 90       	pop	r8
    1a6a:	7f 90       	pop	r7
    1a6c:	6f 90       	pop	r6
    1a6e:	5f 90       	pop	r5
    1a70:	4f 90       	pop	r4
    1a72:	3f 90       	pop	r3
    1a74:	2f 90       	pop	r2
    1a76:	08 95       	ret

00001a78 <__subsf3>:
    1a78:	50 58       	subi	r21, 0x80	; 128

00001a7a <__addsf3>:
    1a7a:	bb 27       	eor	r27, r27
    1a7c:	aa 27       	eor	r26, r26
    1a7e:	0e d0       	rcall	.+28     	; 0x1a9c <__addsf3x>
    1a80:	0d c1       	rjmp	.+538    	; 0x1c9c <__fp_round>
    1a82:	fe d0       	rcall	.+508    	; 0x1c80 <__fp_pscA>
    1a84:	30 f0       	brcs	.+12     	; 0x1a92 <__addsf3+0x18>
    1a86:	03 d1       	rcall	.+518    	; 0x1c8e <__fp_pscB>
    1a88:	20 f0       	brcs	.+8      	; 0x1a92 <__addsf3+0x18>
    1a8a:	31 f4       	brne	.+12     	; 0x1a98 <__addsf3+0x1e>
    1a8c:	9f 3f       	cpi	r25, 0xFF	; 255
    1a8e:	11 f4       	brne	.+4      	; 0x1a94 <__addsf3+0x1a>
    1a90:	1e f4       	brtc	.+6      	; 0x1a98 <__addsf3+0x1e>
    1a92:	f3 c0       	rjmp	.+486    	; 0x1c7a <__fp_nan>
    1a94:	0e f4       	brtc	.+2      	; 0x1a98 <__addsf3+0x1e>
    1a96:	e0 95       	com	r30
    1a98:	e7 fb       	bst	r30, 7
    1a9a:	e9 c0       	rjmp	.+466    	; 0x1c6e <__fp_inf>

00001a9c <__addsf3x>:
    1a9c:	e9 2f       	mov	r30, r25
    1a9e:	0f d1       	rcall	.+542    	; 0x1cbe <__fp_split3>
    1aa0:	80 f3       	brcs	.-32     	; 0x1a82 <__addsf3+0x8>
    1aa2:	ba 17       	cp	r27, r26
    1aa4:	62 07       	cpc	r22, r18
    1aa6:	73 07       	cpc	r23, r19
    1aa8:	84 07       	cpc	r24, r20
    1aaa:	95 07       	cpc	r25, r21
    1aac:	18 f0       	brcs	.+6      	; 0x1ab4 <__addsf3x+0x18>
    1aae:	71 f4       	brne	.+28     	; 0x1acc <__addsf3x+0x30>
    1ab0:	9e f5       	brtc	.+102    	; 0x1b18 <__addsf3x+0x7c>
    1ab2:	27 c1       	rjmp	.+590    	; 0x1d02 <__fp_zero>
    1ab4:	0e f4       	brtc	.+2      	; 0x1ab8 <__addsf3x+0x1c>
    1ab6:	e0 95       	com	r30
    1ab8:	0b 2e       	mov	r0, r27
    1aba:	ba 2f       	mov	r27, r26
    1abc:	a0 2d       	mov	r26, r0
    1abe:	0b 01       	movw	r0, r22
    1ac0:	b9 01       	movw	r22, r18
    1ac2:	90 01       	movw	r18, r0
    1ac4:	0c 01       	movw	r0, r24
    1ac6:	ca 01       	movw	r24, r20
    1ac8:	a0 01       	movw	r20, r0
    1aca:	11 24       	eor	r1, r1
    1acc:	ff 27       	eor	r31, r31
    1ace:	59 1b       	sub	r21, r25
    1ad0:	99 f0       	breq	.+38     	; 0x1af8 <__addsf3x+0x5c>
    1ad2:	59 3f       	cpi	r21, 0xF9	; 249
    1ad4:	50 f4       	brcc	.+20     	; 0x1aea <__addsf3x+0x4e>
    1ad6:	50 3e       	cpi	r21, 0xE0	; 224
    1ad8:	68 f1       	brcs	.+90     	; 0x1b34 <__addsf3x+0x98>
    1ada:	1a 16       	cp	r1, r26
    1adc:	f0 40       	sbci	r31, 0x00	; 0
    1ade:	a2 2f       	mov	r26, r18
    1ae0:	23 2f       	mov	r18, r19
    1ae2:	34 2f       	mov	r19, r20
    1ae4:	44 27       	eor	r20, r20
    1ae6:	58 5f       	subi	r21, 0xF8	; 248
    1ae8:	f3 cf       	rjmp	.-26     	; 0x1ad0 <__addsf3x+0x34>
    1aea:	46 95       	lsr	r20
    1aec:	37 95       	ror	r19
    1aee:	27 95       	ror	r18
    1af0:	a7 95       	ror	r26
    1af2:	f0 40       	sbci	r31, 0x00	; 0
    1af4:	53 95       	inc	r21
    1af6:	c9 f7       	brne	.-14     	; 0x1aea <__addsf3x+0x4e>
    1af8:	7e f4       	brtc	.+30     	; 0x1b18 <__addsf3x+0x7c>
    1afa:	1f 16       	cp	r1, r31
    1afc:	ba 0b       	sbc	r27, r26
    1afe:	62 0b       	sbc	r22, r18
    1b00:	73 0b       	sbc	r23, r19
    1b02:	84 0b       	sbc	r24, r20
    1b04:	ba f0       	brmi	.+46     	; 0x1b34 <__addsf3x+0x98>
    1b06:	91 50       	subi	r25, 0x01	; 1
    1b08:	a1 f0       	breq	.+40     	; 0x1b32 <__addsf3x+0x96>
    1b0a:	ff 0f       	add	r31, r31
    1b0c:	bb 1f       	adc	r27, r27
    1b0e:	66 1f       	adc	r22, r22
    1b10:	77 1f       	adc	r23, r23
    1b12:	88 1f       	adc	r24, r24
    1b14:	c2 f7       	brpl	.-16     	; 0x1b06 <__addsf3x+0x6a>
    1b16:	0e c0       	rjmp	.+28     	; 0x1b34 <__addsf3x+0x98>
    1b18:	ba 0f       	add	r27, r26
    1b1a:	62 1f       	adc	r22, r18
    1b1c:	73 1f       	adc	r23, r19
    1b1e:	84 1f       	adc	r24, r20
    1b20:	48 f4       	brcc	.+18     	; 0x1b34 <__addsf3x+0x98>
    1b22:	87 95       	ror	r24
    1b24:	77 95       	ror	r23
    1b26:	67 95       	ror	r22
    1b28:	b7 95       	ror	r27
    1b2a:	f7 95       	ror	r31
    1b2c:	9e 3f       	cpi	r25, 0xFE	; 254
    1b2e:	08 f0       	brcs	.+2      	; 0x1b32 <__addsf3x+0x96>
    1b30:	b3 cf       	rjmp	.-154    	; 0x1a98 <__addsf3+0x1e>
    1b32:	93 95       	inc	r25
    1b34:	88 0f       	add	r24, r24
    1b36:	08 f0       	brcs	.+2      	; 0x1b3a <__addsf3x+0x9e>
    1b38:	99 27       	eor	r25, r25
    1b3a:	ee 0f       	add	r30, r30
    1b3c:	97 95       	ror	r25
    1b3e:	87 95       	ror	r24
    1b40:	08 95       	ret

00001b42 <__cmpsf2>:
    1b42:	71 d0       	rcall	.+226    	; 0x1c26 <__fp_cmp>
    1b44:	08 f4       	brcc	.+2      	; 0x1b48 <__cmpsf2+0x6>
    1b46:	81 e0       	ldi	r24, 0x01	; 1
    1b48:	08 95       	ret

00001b4a <__fixsfsi>:
    1b4a:	04 d0       	rcall	.+8      	; 0x1b54 <__fixunssfsi>
    1b4c:	68 94       	set
    1b4e:	b1 11       	cpse	r27, r1
    1b50:	d9 c0       	rjmp	.+434    	; 0x1d04 <__fp_szero>
    1b52:	08 95       	ret

00001b54 <__fixunssfsi>:
    1b54:	bc d0       	rcall	.+376    	; 0x1cce <__fp_splitA>
    1b56:	88 f0       	brcs	.+34     	; 0x1b7a <__fixunssfsi+0x26>
    1b58:	9f 57       	subi	r25, 0x7F	; 127
    1b5a:	90 f0       	brcs	.+36     	; 0x1b80 <__fixunssfsi+0x2c>
    1b5c:	b9 2f       	mov	r27, r25
    1b5e:	99 27       	eor	r25, r25
    1b60:	b7 51       	subi	r27, 0x17	; 23
    1b62:	a0 f0       	brcs	.+40     	; 0x1b8c <__fixunssfsi+0x38>
    1b64:	d1 f0       	breq	.+52     	; 0x1b9a <__fixunssfsi+0x46>
    1b66:	66 0f       	add	r22, r22
    1b68:	77 1f       	adc	r23, r23
    1b6a:	88 1f       	adc	r24, r24
    1b6c:	99 1f       	adc	r25, r25
    1b6e:	1a f0       	brmi	.+6      	; 0x1b76 <__fixunssfsi+0x22>
    1b70:	ba 95       	dec	r27
    1b72:	c9 f7       	brne	.-14     	; 0x1b66 <__fixunssfsi+0x12>
    1b74:	12 c0       	rjmp	.+36     	; 0x1b9a <__fixunssfsi+0x46>
    1b76:	b1 30       	cpi	r27, 0x01	; 1
    1b78:	81 f0       	breq	.+32     	; 0x1b9a <__fixunssfsi+0x46>
    1b7a:	c3 d0       	rcall	.+390    	; 0x1d02 <__fp_zero>
    1b7c:	b1 e0       	ldi	r27, 0x01	; 1
    1b7e:	08 95       	ret
    1b80:	c0 c0       	rjmp	.+384    	; 0x1d02 <__fp_zero>
    1b82:	67 2f       	mov	r22, r23
    1b84:	78 2f       	mov	r23, r24
    1b86:	88 27       	eor	r24, r24
    1b88:	b8 5f       	subi	r27, 0xF8	; 248
    1b8a:	39 f0       	breq	.+14     	; 0x1b9a <__fixunssfsi+0x46>
    1b8c:	b9 3f       	cpi	r27, 0xF9	; 249
    1b8e:	cc f3       	brlt	.-14     	; 0x1b82 <__fixunssfsi+0x2e>
    1b90:	86 95       	lsr	r24
    1b92:	77 95       	ror	r23
    1b94:	67 95       	ror	r22
    1b96:	b3 95       	inc	r27
    1b98:	d9 f7       	brne	.-10     	; 0x1b90 <__fixunssfsi+0x3c>
    1b9a:	3e f4       	brtc	.+14     	; 0x1baa <__fixunssfsi+0x56>
    1b9c:	90 95       	com	r25
    1b9e:	80 95       	com	r24
    1ba0:	70 95       	com	r23
    1ba2:	61 95       	neg	r22
    1ba4:	7f 4f       	sbci	r23, 0xFF	; 255
    1ba6:	8f 4f       	sbci	r24, 0xFF	; 255
    1ba8:	9f 4f       	sbci	r25, 0xFF	; 255
    1baa:	08 95       	ret

00001bac <__floatunsisf>:
    1bac:	e8 94       	clt
    1bae:	09 c0       	rjmp	.+18     	; 0x1bc2 <__floatsisf+0x12>

00001bb0 <__floatsisf>:
    1bb0:	97 fb       	bst	r25, 7
    1bb2:	3e f4       	brtc	.+14     	; 0x1bc2 <__floatsisf+0x12>
    1bb4:	90 95       	com	r25
    1bb6:	80 95       	com	r24
    1bb8:	70 95       	com	r23
    1bba:	61 95       	neg	r22
    1bbc:	7f 4f       	sbci	r23, 0xFF	; 255
    1bbe:	8f 4f       	sbci	r24, 0xFF	; 255
    1bc0:	9f 4f       	sbci	r25, 0xFF	; 255
    1bc2:	99 23       	and	r25, r25
    1bc4:	a9 f0       	breq	.+42     	; 0x1bf0 <__floatsisf+0x40>
    1bc6:	f9 2f       	mov	r31, r25
    1bc8:	96 e9       	ldi	r25, 0x96	; 150
    1bca:	bb 27       	eor	r27, r27
    1bcc:	93 95       	inc	r25
    1bce:	f6 95       	lsr	r31
    1bd0:	87 95       	ror	r24
    1bd2:	77 95       	ror	r23
    1bd4:	67 95       	ror	r22
    1bd6:	b7 95       	ror	r27
    1bd8:	f1 11       	cpse	r31, r1
    1bda:	f8 cf       	rjmp	.-16     	; 0x1bcc <__floatsisf+0x1c>
    1bdc:	fa f4       	brpl	.+62     	; 0x1c1c <__floatsisf+0x6c>
    1bde:	bb 0f       	add	r27, r27
    1be0:	11 f4       	brne	.+4      	; 0x1be6 <__floatsisf+0x36>
    1be2:	60 ff       	sbrs	r22, 0
    1be4:	1b c0       	rjmp	.+54     	; 0x1c1c <__floatsisf+0x6c>
    1be6:	6f 5f       	subi	r22, 0xFF	; 255
    1be8:	7f 4f       	sbci	r23, 0xFF	; 255
    1bea:	8f 4f       	sbci	r24, 0xFF	; 255
    1bec:	9f 4f       	sbci	r25, 0xFF	; 255
    1bee:	16 c0       	rjmp	.+44     	; 0x1c1c <__floatsisf+0x6c>
    1bf0:	88 23       	and	r24, r24
    1bf2:	11 f0       	breq	.+4      	; 0x1bf8 <__floatsisf+0x48>
    1bf4:	96 e9       	ldi	r25, 0x96	; 150
    1bf6:	11 c0       	rjmp	.+34     	; 0x1c1a <__floatsisf+0x6a>
    1bf8:	77 23       	and	r23, r23
    1bfa:	21 f0       	breq	.+8      	; 0x1c04 <__floatsisf+0x54>
    1bfc:	9e e8       	ldi	r25, 0x8E	; 142
    1bfe:	87 2f       	mov	r24, r23
    1c00:	76 2f       	mov	r23, r22
    1c02:	05 c0       	rjmp	.+10     	; 0x1c0e <__floatsisf+0x5e>
    1c04:	66 23       	and	r22, r22
    1c06:	71 f0       	breq	.+28     	; 0x1c24 <__floatsisf+0x74>
    1c08:	96 e8       	ldi	r25, 0x86	; 134
    1c0a:	86 2f       	mov	r24, r22
    1c0c:	70 e0       	ldi	r23, 0x00	; 0
    1c0e:	60 e0       	ldi	r22, 0x00	; 0
    1c10:	2a f0       	brmi	.+10     	; 0x1c1c <__floatsisf+0x6c>
    1c12:	9a 95       	dec	r25
    1c14:	66 0f       	add	r22, r22
    1c16:	77 1f       	adc	r23, r23
    1c18:	88 1f       	adc	r24, r24
    1c1a:	da f7       	brpl	.-10     	; 0x1c12 <__floatsisf+0x62>
    1c1c:	88 0f       	add	r24, r24
    1c1e:	96 95       	lsr	r25
    1c20:	87 95       	ror	r24
    1c22:	97 f9       	bld	r25, 7
    1c24:	08 95       	ret

00001c26 <__fp_cmp>:
    1c26:	99 0f       	add	r25, r25
    1c28:	00 08       	sbc	r0, r0
    1c2a:	55 0f       	add	r21, r21
    1c2c:	aa 0b       	sbc	r26, r26
    1c2e:	e0 e8       	ldi	r30, 0x80	; 128
    1c30:	fe ef       	ldi	r31, 0xFE	; 254
    1c32:	16 16       	cp	r1, r22
    1c34:	17 06       	cpc	r1, r23
    1c36:	e8 07       	cpc	r30, r24
    1c38:	f9 07       	cpc	r31, r25
    1c3a:	c0 f0       	brcs	.+48     	; 0x1c6c <__fp_cmp+0x46>
    1c3c:	12 16       	cp	r1, r18
    1c3e:	13 06       	cpc	r1, r19
    1c40:	e4 07       	cpc	r30, r20
    1c42:	f5 07       	cpc	r31, r21
    1c44:	98 f0       	brcs	.+38     	; 0x1c6c <__fp_cmp+0x46>
    1c46:	62 1b       	sub	r22, r18
    1c48:	73 0b       	sbc	r23, r19
    1c4a:	84 0b       	sbc	r24, r20
    1c4c:	95 0b       	sbc	r25, r21
    1c4e:	39 f4       	brne	.+14     	; 0x1c5e <__fp_cmp+0x38>
    1c50:	0a 26       	eor	r0, r26
    1c52:	61 f0       	breq	.+24     	; 0x1c6c <__fp_cmp+0x46>
    1c54:	23 2b       	or	r18, r19
    1c56:	24 2b       	or	r18, r20
    1c58:	25 2b       	or	r18, r21
    1c5a:	21 f4       	brne	.+8      	; 0x1c64 <__fp_cmp+0x3e>
    1c5c:	08 95       	ret
    1c5e:	0a 26       	eor	r0, r26
    1c60:	09 f4       	brne	.+2      	; 0x1c64 <__fp_cmp+0x3e>
    1c62:	a1 40       	sbci	r26, 0x01	; 1
    1c64:	a6 95       	lsr	r26
    1c66:	8f ef       	ldi	r24, 0xFF	; 255
    1c68:	81 1d       	adc	r24, r1
    1c6a:	81 1d       	adc	r24, r1
    1c6c:	08 95       	ret

00001c6e <__fp_inf>:
    1c6e:	97 f9       	bld	r25, 7
    1c70:	9f 67       	ori	r25, 0x7F	; 127
    1c72:	80 e8       	ldi	r24, 0x80	; 128
    1c74:	70 e0       	ldi	r23, 0x00	; 0
    1c76:	60 e0       	ldi	r22, 0x00	; 0
    1c78:	08 95       	ret

00001c7a <__fp_nan>:
    1c7a:	9f ef       	ldi	r25, 0xFF	; 255
    1c7c:	80 ec       	ldi	r24, 0xC0	; 192
    1c7e:	08 95       	ret

00001c80 <__fp_pscA>:
    1c80:	00 24       	eor	r0, r0
    1c82:	0a 94       	dec	r0
    1c84:	16 16       	cp	r1, r22
    1c86:	17 06       	cpc	r1, r23
    1c88:	18 06       	cpc	r1, r24
    1c8a:	09 06       	cpc	r0, r25
    1c8c:	08 95       	ret

00001c8e <__fp_pscB>:
    1c8e:	00 24       	eor	r0, r0
    1c90:	0a 94       	dec	r0
    1c92:	12 16       	cp	r1, r18
    1c94:	13 06       	cpc	r1, r19
    1c96:	14 06       	cpc	r1, r20
    1c98:	05 06       	cpc	r0, r21
    1c9a:	08 95       	ret

00001c9c <__fp_round>:
    1c9c:	09 2e       	mov	r0, r25
    1c9e:	03 94       	inc	r0
    1ca0:	00 0c       	add	r0, r0
    1ca2:	11 f4       	brne	.+4      	; 0x1ca8 <__fp_round+0xc>
    1ca4:	88 23       	and	r24, r24
    1ca6:	52 f0       	brmi	.+20     	; 0x1cbc <__fp_round+0x20>
    1ca8:	bb 0f       	add	r27, r27
    1caa:	40 f4       	brcc	.+16     	; 0x1cbc <__fp_round+0x20>
    1cac:	bf 2b       	or	r27, r31
    1cae:	11 f4       	brne	.+4      	; 0x1cb4 <__fp_round+0x18>
    1cb0:	60 ff       	sbrs	r22, 0
    1cb2:	04 c0       	rjmp	.+8      	; 0x1cbc <__fp_round+0x20>
    1cb4:	6f 5f       	subi	r22, 0xFF	; 255
    1cb6:	7f 4f       	sbci	r23, 0xFF	; 255
    1cb8:	8f 4f       	sbci	r24, 0xFF	; 255
    1cba:	9f 4f       	sbci	r25, 0xFF	; 255
    1cbc:	08 95       	ret

00001cbe <__fp_split3>:
    1cbe:	57 fd       	sbrc	r21, 7
    1cc0:	90 58       	subi	r25, 0x80	; 128
    1cc2:	44 0f       	add	r20, r20
    1cc4:	55 1f       	adc	r21, r21
    1cc6:	59 f0       	breq	.+22     	; 0x1cde <__fp_splitA+0x10>
    1cc8:	5f 3f       	cpi	r21, 0xFF	; 255
    1cca:	71 f0       	breq	.+28     	; 0x1ce8 <__fp_splitA+0x1a>
    1ccc:	47 95       	ror	r20

00001cce <__fp_splitA>:
    1cce:	88 0f       	add	r24, r24
    1cd0:	97 fb       	bst	r25, 7
    1cd2:	99 1f       	adc	r25, r25
    1cd4:	61 f0       	breq	.+24     	; 0x1cee <__fp_splitA+0x20>
    1cd6:	9f 3f       	cpi	r25, 0xFF	; 255
    1cd8:	79 f0       	breq	.+30     	; 0x1cf8 <__fp_splitA+0x2a>
    1cda:	87 95       	ror	r24
    1cdc:	08 95       	ret
    1cde:	12 16       	cp	r1, r18
    1ce0:	13 06       	cpc	r1, r19
    1ce2:	14 06       	cpc	r1, r20
    1ce4:	55 1f       	adc	r21, r21
    1ce6:	f2 cf       	rjmp	.-28     	; 0x1ccc <__fp_split3+0xe>
    1ce8:	46 95       	lsr	r20
    1cea:	f1 df       	rcall	.-30     	; 0x1cce <__fp_splitA>
    1cec:	08 c0       	rjmp	.+16     	; 0x1cfe <__fp_splitA+0x30>
    1cee:	16 16       	cp	r1, r22
    1cf0:	17 06       	cpc	r1, r23
    1cf2:	18 06       	cpc	r1, r24
    1cf4:	99 1f       	adc	r25, r25
    1cf6:	f1 cf       	rjmp	.-30     	; 0x1cda <__fp_splitA+0xc>
    1cf8:	86 95       	lsr	r24
    1cfa:	71 05       	cpc	r23, r1
    1cfc:	61 05       	cpc	r22, r1
    1cfe:	08 94       	sec
    1d00:	08 95       	ret

00001d02 <__fp_zero>:
    1d02:	e8 94       	clt

00001d04 <__fp_szero>:
    1d04:	bb 27       	eor	r27, r27
    1d06:	66 27       	eor	r22, r22
    1d08:	77 27       	eor	r23, r23
    1d0a:	cb 01       	movw	r24, r22
    1d0c:	97 f9       	bld	r25, 7
    1d0e:	08 95       	ret

00001d10 <__gesf2>:
    1d10:	8a df       	rcall	.-236    	; 0x1c26 <__fp_cmp>
    1d12:	08 f4       	brcc	.+2      	; 0x1d16 <__gesf2+0x6>
    1d14:	8f ef       	ldi	r24, 0xFF	; 255
    1d16:	08 95       	ret

00001d18 <__mulsf3>:
    1d18:	0b d0       	rcall	.+22     	; 0x1d30 <__mulsf3x>
    1d1a:	c0 cf       	rjmp	.-128    	; 0x1c9c <__fp_round>
    1d1c:	b1 df       	rcall	.-158    	; 0x1c80 <__fp_pscA>
    1d1e:	28 f0       	brcs	.+10     	; 0x1d2a <__mulsf3+0x12>
    1d20:	b6 df       	rcall	.-148    	; 0x1c8e <__fp_pscB>
    1d22:	18 f0       	brcs	.+6      	; 0x1d2a <__mulsf3+0x12>
    1d24:	95 23       	and	r25, r21
    1d26:	09 f0       	breq	.+2      	; 0x1d2a <__mulsf3+0x12>
    1d28:	a2 cf       	rjmp	.-188    	; 0x1c6e <__fp_inf>
    1d2a:	a7 cf       	rjmp	.-178    	; 0x1c7a <__fp_nan>
    1d2c:	11 24       	eor	r1, r1
    1d2e:	ea cf       	rjmp	.-44     	; 0x1d04 <__fp_szero>

00001d30 <__mulsf3x>:
    1d30:	c6 df       	rcall	.-116    	; 0x1cbe <__fp_split3>
    1d32:	a0 f3       	brcs	.-24     	; 0x1d1c <__mulsf3+0x4>

00001d34 <__mulsf3_pse>:
    1d34:	95 9f       	mul	r25, r21
    1d36:	d1 f3       	breq	.-12     	; 0x1d2c <__mulsf3+0x14>
    1d38:	95 0f       	add	r25, r21
    1d3a:	50 e0       	ldi	r21, 0x00	; 0
    1d3c:	55 1f       	adc	r21, r21
    1d3e:	62 9f       	mul	r22, r18
    1d40:	f0 01       	movw	r30, r0
    1d42:	72 9f       	mul	r23, r18
    1d44:	bb 27       	eor	r27, r27
    1d46:	f0 0d       	add	r31, r0
    1d48:	b1 1d       	adc	r27, r1
    1d4a:	63 9f       	mul	r22, r19
    1d4c:	aa 27       	eor	r26, r26
    1d4e:	f0 0d       	add	r31, r0
    1d50:	b1 1d       	adc	r27, r1
    1d52:	aa 1f       	adc	r26, r26
    1d54:	64 9f       	mul	r22, r20
    1d56:	66 27       	eor	r22, r22
    1d58:	b0 0d       	add	r27, r0
    1d5a:	a1 1d       	adc	r26, r1
    1d5c:	66 1f       	adc	r22, r22
    1d5e:	82 9f       	mul	r24, r18
    1d60:	22 27       	eor	r18, r18
    1d62:	b0 0d       	add	r27, r0
    1d64:	a1 1d       	adc	r26, r1
    1d66:	62 1f       	adc	r22, r18
    1d68:	73 9f       	mul	r23, r19
    1d6a:	b0 0d       	add	r27, r0
    1d6c:	a1 1d       	adc	r26, r1
    1d6e:	62 1f       	adc	r22, r18
    1d70:	83 9f       	mul	r24, r19
    1d72:	a0 0d       	add	r26, r0
    1d74:	61 1d       	adc	r22, r1
    1d76:	22 1f       	adc	r18, r18
    1d78:	74 9f       	mul	r23, r20
    1d7a:	33 27       	eor	r19, r19
    1d7c:	a0 0d       	add	r26, r0
    1d7e:	61 1d       	adc	r22, r1
    1d80:	23 1f       	adc	r18, r19
    1d82:	84 9f       	mul	r24, r20
    1d84:	60 0d       	add	r22, r0
    1d86:	21 1d       	adc	r18, r1
    1d88:	82 2f       	mov	r24, r18
    1d8a:	76 2f       	mov	r23, r22
    1d8c:	6a 2f       	mov	r22, r26
    1d8e:	11 24       	eor	r1, r1
    1d90:	9f 57       	subi	r25, 0x7F	; 127
    1d92:	50 40       	sbci	r21, 0x00	; 0
    1d94:	8a f0       	brmi	.+34     	; 0x1db8 <__mulsf3_pse+0x84>
    1d96:	e1 f0       	breq	.+56     	; 0x1dd0 <__mulsf3_pse+0x9c>
    1d98:	88 23       	and	r24, r24
    1d9a:	4a f0       	brmi	.+18     	; 0x1dae <__mulsf3_pse+0x7a>
    1d9c:	ee 0f       	add	r30, r30
    1d9e:	ff 1f       	adc	r31, r31
    1da0:	bb 1f       	adc	r27, r27
    1da2:	66 1f       	adc	r22, r22
    1da4:	77 1f       	adc	r23, r23
    1da6:	88 1f       	adc	r24, r24
    1da8:	91 50       	subi	r25, 0x01	; 1
    1daa:	50 40       	sbci	r21, 0x00	; 0
    1dac:	a9 f7       	brne	.-22     	; 0x1d98 <__mulsf3_pse+0x64>
    1dae:	9e 3f       	cpi	r25, 0xFE	; 254
    1db0:	51 05       	cpc	r21, r1
    1db2:	70 f0       	brcs	.+28     	; 0x1dd0 <__mulsf3_pse+0x9c>
    1db4:	5c cf       	rjmp	.-328    	; 0x1c6e <__fp_inf>
    1db6:	a6 cf       	rjmp	.-180    	; 0x1d04 <__fp_szero>
    1db8:	5f 3f       	cpi	r21, 0xFF	; 255
    1dba:	ec f3       	brlt	.-6      	; 0x1db6 <__mulsf3_pse+0x82>
    1dbc:	98 3e       	cpi	r25, 0xE8	; 232
    1dbe:	dc f3       	brlt	.-10     	; 0x1db6 <__mulsf3_pse+0x82>
    1dc0:	86 95       	lsr	r24
    1dc2:	77 95       	ror	r23
    1dc4:	67 95       	ror	r22
    1dc6:	b7 95       	ror	r27
    1dc8:	f7 95       	ror	r31
    1dca:	e7 95       	ror	r30
    1dcc:	9f 5f       	subi	r25, 0xFF	; 255
    1dce:	c1 f7       	brne	.-16     	; 0x1dc0 <__mulsf3_pse+0x8c>
    1dd0:	fe 2b       	or	r31, r30
    1dd2:	88 0f       	add	r24, r24
    1dd4:	91 1d       	adc	r25, r1
    1dd6:	96 95       	lsr	r25
    1dd8:	87 95       	ror	r24
    1dda:	97 f9       	bld	r25, 7
    1ddc:	08 95       	ret

00001dde <__udivmodsi4>:
    1dde:	a1 e2       	ldi	r26, 0x21	; 33
    1de0:	1a 2e       	mov	r1, r26
    1de2:	aa 1b       	sub	r26, r26
    1de4:	bb 1b       	sub	r27, r27
    1de6:	fd 01       	movw	r30, r26
    1de8:	0d c0       	rjmp	.+26     	; 0x1e04 <__udivmodsi4_ep>

00001dea <__udivmodsi4_loop>:
    1dea:	aa 1f       	adc	r26, r26
    1dec:	bb 1f       	adc	r27, r27
    1dee:	ee 1f       	adc	r30, r30
    1df0:	ff 1f       	adc	r31, r31
    1df2:	a2 17       	cp	r26, r18
    1df4:	b3 07       	cpc	r27, r19
    1df6:	e4 07       	cpc	r30, r20
    1df8:	f5 07       	cpc	r31, r21
    1dfa:	20 f0       	brcs	.+8      	; 0x1e04 <__udivmodsi4_ep>
    1dfc:	a2 1b       	sub	r26, r18
    1dfe:	b3 0b       	sbc	r27, r19
    1e00:	e4 0b       	sbc	r30, r20
    1e02:	f5 0b       	sbc	r31, r21

00001e04 <__udivmodsi4_ep>:
    1e04:	66 1f       	adc	r22, r22
    1e06:	77 1f       	adc	r23, r23
    1e08:	88 1f       	adc	r24, r24
    1e0a:	99 1f       	adc	r25, r25
    1e0c:	1a 94       	dec	r1
    1e0e:	69 f7       	brne	.-38     	; 0x1dea <__udivmodsi4_loop>
    1e10:	60 95       	com	r22
    1e12:	70 95       	com	r23
    1e14:	80 95       	com	r24
    1e16:	90 95       	com	r25
    1e18:	9b 01       	movw	r18, r22
    1e1a:	ac 01       	movw	r20, r24
    1e1c:	bd 01       	movw	r22, r26
    1e1e:	cf 01       	movw	r24, r30
    1e20:	08 95       	ret

00001e22 <__tablejump2__>:
    1e22:	ee 0f       	add	r30, r30
    1e24:	ff 1f       	adc	r31, r31
    1e26:	88 1f       	adc	r24, r24
    1e28:	8b bf       	out	0x3b, r24	; 59
    1e2a:	07 90       	elpm	r0, Z+
    1e2c:	f6 91       	elpm	r31, Z
    1e2e:	e0 2d       	mov	r30, r0
    1e30:	19 94       	eijmp

00001e32 <__usmulhisi3>:
    1e32:	e7 d0       	rcall	.+462    	; 0x2002 <__umulhisi3>

00001e34 <__usmulhisi3_tail>:
    1e34:	b7 ff       	sbrs	r27, 7
    1e36:	08 95       	ret
    1e38:	82 1b       	sub	r24, r18
    1e3a:	93 0b       	sbc	r25, r19
    1e3c:	08 95       	ret

00001e3e <__mulshisi3>:
    1e3e:	b7 ff       	sbrs	r27, 7
    1e40:	ef c0       	rjmp	.+478    	; 0x2020 <__muluhisi3>

00001e42 <__mulohisi3>:
    1e42:	ee d0       	rcall	.+476    	; 0x2020 <__muluhisi3>
    1e44:	82 1b       	sub	r24, r18
    1e46:	93 0b       	sbc	r25, r19
    1e48:	08 95       	ret

00001e4a <__moddi3>:
    1e4a:	68 94       	set
    1e4c:	01 c0       	rjmp	.+2      	; 0x1e50 <__divdi3_moddi3>

00001e4e <__divdi3>:
    1e4e:	e8 94       	clt

00001e50 <__divdi3_moddi3>:
    1e50:	f9 2f       	mov	r31, r25
    1e52:	f1 2b       	or	r31, r17
    1e54:	0a f0       	brmi	.+2      	; 0x1e58 <__divdi3_moddi3+0x8>
    1e56:	27 c0       	rjmp	.+78     	; 0x1ea6 <__udivdi3_umoddi3>
    1e58:	a0 e0       	ldi	r26, 0x00	; 0
    1e5a:	b0 e0       	ldi	r27, 0x00	; 0
    1e5c:	e1 e3       	ldi	r30, 0x31	; 49
    1e5e:	ff e0       	ldi	r31, 0x0F	; 15
    1e60:	93 c0       	rjmp	.+294    	; 0x1f88 <__prologue_saves__+0xc>
    1e62:	09 2e       	mov	r0, r25
    1e64:	05 94       	asr	r0
    1e66:	1a f4       	brpl	.+6      	; 0x1e6e <__divdi3_moddi3+0x1e>
    1e68:	79 d0       	rcall	.+242    	; 0x1f5c <__negdi2>
    1e6a:	11 23       	and	r17, r17
    1e6c:	92 f4       	brpl	.+36     	; 0x1e92 <__divdi3_moddi3+0x42>
    1e6e:	f0 e8       	ldi	r31, 0x80	; 128
    1e70:	0f 26       	eor	r0, r31
    1e72:	ff ef       	ldi	r31, 0xFF	; 255
    1e74:	e0 94       	com	r14
    1e76:	f0 94       	com	r15
    1e78:	00 95       	com	r16
    1e7a:	10 95       	com	r17
    1e7c:	b0 94       	com	r11
    1e7e:	c0 94       	com	r12
    1e80:	d0 94       	com	r13
    1e82:	a1 94       	neg	r10
    1e84:	bf 0a       	sbc	r11, r31
    1e86:	cf 0a       	sbc	r12, r31
    1e88:	df 0a       	sbc	r13, r31
    1e8a:	ef 0a       	sbc	r14, r31
    1e8c:	ff 0a       	sbc	r15, r31
    1e8e:	0f 0b       	sbc	r16, r31
    1e90:	1f 0b       	sbc	r17, r31
    1e92:	13 d0       	rcall	.+38     	; 0x1eba <__udivmod64>
    1e94:	07 fc       	sbrc	r0, 7
    1e96:	62 d0       	rcall	.+196    	; 0x1f5c <__negdi2>
    1e98:	cd b7       	in	r28, 0x3d	; 61
    1e9a:	de b7       	in	r29, 0x3e	; 62
    1e9c:	ec e0       	ldi	r30, 0x0C	; 12
    1e9e:	90 c0       	rjmp	.+288    	; 0x1fc0 <__epilogue_restores__+0xc>

00001ea0 <__umoddi3>:
    1ea0:	68 94       	set
    1ea2:	01 c0       	rjmp	.+2      	; 0x1ea6 <__udivdi3_umoddi3>

00001ea4 <__udivdi3>:
    1ea4:	e8 94       	clt

00001ea6 <__udivdi3_umoddi3>:
    1ea6:	8f 92       	push	r8
    1ea8:	9f 92       	push	r9
    1eaa:	cf 93       	push	r28
    1eac:	df 93       	push	r29
    1eae:	05 d0       	rcall	.+10     	; 0x1eba <__udivmod64>
    1eb0:	df 91       	pop	r29
    1eb2:	cf 91       	pop	r28
    1eb4:	9f 90       	pop	r9
    1eb6:	8f 90       	pop	r8
    1eb8:	08 95       	ret

00001eba <__udivmod64>:
    1eba:	88 24       	eor	r8, r8
    1ebc:	99 24       	eor	r9, r9
    1ebe:	f4 01       	movw	r30, r8
    1ec0:	e4 01       	movw	r28, r8
    1ec2:	b0 e4       	ldi	r27, 0x40	; 64
    1ec4:	9f 93       	push	r25
    1ec6:	aa 27       	eor	r26, r26
    1ec8:	9a 15       	cp	r25, r10
    1eca:	8b 04       	cpc	r8, r11
    1ecc:	9c 04       	cpc	r9, r12
    1ece:	ed 05       	cpc	r30, r13
    1ed0:	fe 05       	cpc	r31, r14
    1ed2:	cf 05       	cpc	r28, r15
    1ed4:	d0 07       	cpc	r29, r16
    1ed6:	a1 07       	cpc	r26, r17
    1ed8:	98 f4       	brcc	.+38     	; 0x1f00 <__udivmod64+0x46>
    1eda:	ad 2f       	mov	r26, r29
    1edc:	dc 2f       	mov	r29, r28
    1ede:	cf 2f       	mov	r28, r31
    1ee0:	fe 2f       	mov	r31, r30
    1ee2:	e9 2d       	mov	r30, r9
    1ee4:	98 2c       	mov	r9, r8
    1ee6:	89 2e       	mov	r8, r25
    1ee8:	98 2f       	mov	r25, r24
    1eea:	87 2f       	mov	r24, r23
    1eec:	76 2f       	mov	r23, r22
    1eee:	65 2f       	mov	r22, r21
    1ef0:	54 2f       	mov	r21, r20
    1ef2:	43 2f       	mov	r20, r19
    1ef4:	32 2f       	mov	r19, r18
    1ef6:	22 27       	eor	r18, r18
    1ef8:	b8 50       	subi	r27, 0x08	; 8
    1efa:	31 f7       	brne	.-52     	; 0x1ec8 <__udivmod64+0xe>
    1efc:	bf 91       	pop	r27
    1efe:	27 c0       	rjmp	.+78     	; 0x1f4e <__udivmod64+0x94>
    1f00:	1b 2e       	mov	r1, r27
    1f02:	bf 91       	pop	r27
    1f04:	bb 27       	eor	r27, r27
    1f06:	22 0f       	add	r18, r18
    1f08:	33 1f       	adc	r19, r19
    1f0a:	44 1f       	adc	r20, r20
    1f0c:	55 1f       	adc	r21, r21
    1f0e:	66 1f       	adc	r22, r22
    1f10:	77 1f       	adc	r23, r23
    1f12:	88 1f       	adc	r24, r24
    1f14:	99 1f       	adc	r25, r25
    1f16:	88 1c       	adc	r8, r8
    1f18:	99 1c       	adc	r9, r9
    1f1a:	ee 1f       	adc	r30, r30
    1f1c:	ff 1f       	adc	r31, r31
    1f1e:	cc 1f       	adc	r28, r28
    1f20:	dd 1f       	adc	r29, r29
    1f22:	aa 1f       	adc	r26, r26
    1f24:	bb 1f       	adc	r27, r27
    1f26:	8a 14       	cp	r8, r10
    1f28:	9b 04       	cpc	r9, r11
    1f2a:	ec 05       	cpc	r30, r12
    1f2c:	fd 05       	cpc	r31, r13
    1f2e:	ce 05       	cpc	r28, r14
    1f30:	df 05       	cpc	r29, r15
    1f32:	a0 07       	cpc	r26, r16
    1f34:	b1 07       	cpc	r27, r17
    1f36:	48 f0       	brcs	.+18     	; 0x1f4a <__udivmod64+0x90>
    1f38:	8a 18       	sub	r8, r10
    1f3a:	9b 08       	sbc	r9, r11
    1f3c:	ec 09       	sbc	r30, r12
    1f3e:	fd 09       	sbc	r31, r13
    1f40:	ce 09       	sbc	r28, r14
    1f42:	df 09       	sbc	r29, r15
    1f44:	a0 0b       	sbc	r26, r16
    1f46:	b1 0b       	sbc	r27, r17
    1f48:	21 60       	ori	r18, 0x01	; 1
    1f4a:	1a 94       	dec	r1
    1f4c:	e1 f6       	brne	.-72     	; 0x1f06 <__udivmod64+0x4c>
    1f4e:	2e f4       	brtc	.+10     	; 0x1f5a <__udivmod64+0xa0>
    1f50:	94 01       	movw	r18, r8
    1f52:	af 01       	movw	r20, r30
    1f54:	be 01       	movw	r22, r28
    1f56:	cd 01       	movw	r24, r26
    1f58:	00 0c       	add	r0, r0
    1f5a:	08 95       	ret

00001f5c <__negdi2>:
    1f5c:	60 95       	com	r22
    1f5e:	70 95       	com	r23
    1f60:	80 95       	com	r24
    1f62:	90 95       	com	r25
    1f64:	30 95       	com	r19
    1f66:	40 95       	com	r20
    1f68:	50 95       	com	r21
    1f6a:	21 95       	neg	r18
    1f6c:	3f 4f       	sbci	r19, 0xFF	; 255
    1f6e:	4f 4f       	sbci	r20, 0xFF	; 255
    1f70:	5f 4f       	sbci	r21, 0xFF	; 255
    1f72:	6f 4f       	sbci	r22, 0xFF	; 255
    1f74:	7f 4f       	sbci	r23, 0xFF	; 255
    1f76:	8f 4f       	sbci	r24, 0xFF	; 255
    1f78:	9f 4f       	sbci	r25, 0xFF	; 255
    1f7a:	08 95       	ret

00001f7c <__prologue_saves__>:
    1f7c:	2f 92       	push	r2
    1f7e:	3f 92       	push	r3
    1f80:	4f 92       	push	r4
    1f82:	5f 92       	push	r5
    1f84:	6f 92       	push	r6
    1f86:	7f 92       	push	r7
    1f88:	8f 92       	push	r8
    1f8a:	9f 92       	push	r9
    1f8c:	af 92       	push	r10
    1f8e:	bf 92       	push	r11
    1f90:	cf 92       	push	r12
    1f92:	df 92       	push	r13
    1f94:	ef 92       	push	r14
    1f96:	ff 92       	push	r15
    1f98:	0f 93       	push	r16
    1f9a:	1f 93       	push	r17
    1f9c:	cf 93       	push	r28
    1f9e:	df 93       	push	r29
    1fa0:	cd b7       	in	r28, 0x3d	; 61
    1fa2:	de b7       	in	r29, 0x3e	; 62
    1fa4:	ca 1b       	sub	r28, r26
    1fa6:	db 0b       	sbc	r29, r27
    1fa8:	0f b6       	in	r0, 0x3f	; 63
    1faa:	f8 94       	cli
    1fac:	de bf       	out	0x3e, r29	; 62
    1fae:	0f be       	out	0x3f, r0	; 63
    1fb0:	cd bf       	out	0x3d, r28	; 61
    1fb2:	19 94       	eijmp

00001fb4 <__epilogue_restores__>:
    1fb4:	2a 88       	ldd	r2, Y+18	; 0x12
    1fb6:	39 88       	ldd	r3, Y+17	; 0x11
    1fb8:	48 88       	ldd	r4, Y+16	; 0x10
    1fba:	5f 84       	ldd	r5, Y+15	; 0x0f
    1fbc:	6e 84       	ldd	r6, Y+14	; 0x0e
    1fbe:	7d 84       	ldd	r7, Y+13	; 0x0d
    1fc0:	8c 84       	ldd	r8, Y+12	; 0x0c
    1fc2:	9b 84       	ldd	r9, Y+11	; 0x0b
    1fc4:	aa 84       	ldd	r10, Y+10	; 0x0a
    1fc6:	b9 84       	ldd	r11, Y+9	; 0x09
    1fc8:	c8 84       	ldd	r12, Y+8	; 0x08
    1fca:	df 80       	ldd	r13, Y+7	; 0x07
    1fcc:	ee 80       	ldd	r14, Y+6	; 0x06
    1fce:	fd 80       	ldd	r15, Y+5	; 0x05
    1fd0:	0c 81       	ldd	r16, Y+4	; 0x04
    1fd2:	1b 81       	ldd	r17, Y+3	; 0x03
    1fd4:	aa 81       	ldd	r26, Y+2	; 0x02
    1fd6:	b9 81       	ldd	r27, Y+1	; 0x01
    1fd8:	ce 0f       	add	r28, r30
    1fda:	d1 1d       	adc	r29, r1
    1fdc:	0f b6       	in	r0, 0x3f	; 63
    1fde:	f8 94       	cli
    1fe0:	de bf       	out	0x3e, r29	; 62
    1fe2:	0f be       	out	0x3f, r0	; 63
    1fe4:	cd bf       	out	0x3d, r28	; 61
    1fe6:	ed 01       	movw	r28, r26
    1fe8:	08 95       	ret

00001fea <__cmpdi2_s8>:
    1fea:	00 24       	eor	r0, r0
    1fec:	a7 fd       	sbrc	r26, 7
    1fee:	00 94       	com	r0
    1ff0:	2a 17       	cp	r18, r26
    1ff2:	30 05       	cpc	r19, r0
    1ff4:	40 05       	cpc	r20, r0
    1ff6:	50 05       	cpc	r21, r0
    1ff8:	60 05       	cpc	r22, r0
    1ffa:	70 05       	cpc	r23, r0
    1ffc:	80 05       	cpc	r24, r0
    1ffe:	90 05       	cpc	r25, r0
    2000:	08 95       	ret

00002002 <__umulhisi3>:
    2002:	a2 9f       	mul	r26, r18
    2004:	b0 01       	movw	r22, r0
    2006:	b3 9f       	mul	r27, r19
    2008:	c0 01       	movw	r24, r0
    200a:	a3 9f       	mul	r26, r19
    200c:	70 0d       	add	r23, r0
    200e:	81 1d       	adc	r24, r1
    2010:	11 24       	eor	r1, r1
    2012:	91 1d       	adc	r25, r1
    2014:	b2 9f       	mul	r27, r18
    2016:	70 0d       	add	r23, r0
    2018:	81 1d       	adc	r24, r1
    201a:	11 24       	eor	r1, r1
    201c:	91 1d       	adc	r25, r1
    201e:	08 95       	ret

00002020 <__muluhisi3>:
    2020:	f0 df       	rcall	.-32     	; 0x2002 <__umulhisi3>
    2022:	a5 9f       	mul	r26, r21
    2024:	90 0d       	add	r25, r0
    2026:	b4 9f       	mul	r27, r20
    2028:	90 0d       	add	r25, r0
    202a:	a4 9f       	mul	r26, r20
    202c:	80 0d       	add	r24, r0
    202e:	91 1d       	adc	r25, r1
    2030:	11 24       	eor	r1, r1
    2032:	08 95       	ret

00002034 <_exit>:
    2034:	f8 94       	cli

00002036 <__stop_program>:
    2036:	ff cf       	rjmp	.-2      	; 0x2036 <__stop_program>

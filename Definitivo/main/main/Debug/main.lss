
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800200  00001bea  00001c7e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001bea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000ae  00800212  00800212  00001c90  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001c90  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001cc0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000228  00000000  00000000  00001d00  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000282f  00000000  00000000  00001f28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001377  00000000  00000000  00004757  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001469  00000000  00000000  00005ace  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000734  00000000  00000000  00006f38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000098d  00000000  00000000  0000766c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000015e5  00000000  00000000  00007ff9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f0  00000000  00000000  000095de  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	9a c0       	rjmp	.+308    	; 0x136 <__ctors_end>
       2:	00 00       	nop
       4:	b8 c0       	rjmp	.+368    	; 0x176 <__bad_interrupt>
       6:	00 00       	nop
       8:	b6 c0       	rjmp	.+364    	; 0x176 <__bad_interrupt>
       a:	00 00       	nop
       c:	53 c3       	rjmp	.+1702   	; 0x6b4 <__vector_3>
       e:	00 00       	nop
      10:	b5 c3       	rjmp	.+1898   	; 0x77c <__vector_4>
      12:	00 00       	nop
      14:	17 c4       	rjmp	.+2094   	; 0x844 <__vector_5>
      16:	00 00       	nop
      18:	82 c4       	rjmp	.+2308   	; 0x91e <__vector_6>
      1a:	00 00       	nop
      1c:	ac c0       	rjmp	.+344    	; 0x176 <__bad_interrupt>
      1e:	00 00       	nop
      20:	aa c0       	rjmp	.+340    	; 0x176 <__bad_interrupt>
      22:	00 00       	nop
      24:	a8 c0       	rjmp	.+336    	; 0x176 <__bad_interrupt>
      26:	00 00       	nop
      28:	a6 c0       	rjmp	.+332    	; 0x176 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	b0 c0       	rjmp	.+352    	; 0x18e <__vector_11>
      2e:	00 00       	nop
      30:	a2 c0       	rjmp	.+324    	; 0x176 <__bad_interrupt>
      32:	00 00       	nop
      34:	a0 c0       	rjmp	.+320    	; 0x176 <__bad_interrupt>
      36:	00 00       	nop
      38:	9e c0       	rjmp	.+316    	; 0x176 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	9c c0       	rjmp	.+312    	; 0x176 <__bad_interrupt>
      3e:	00 00       	nop
      40:	9a c0       	rjmp	.+308    	; 0x176 <__bad_interrupt>
      42:	00 00       	nop
      44:	98 c0       	rjmp	.+304    	; 0x176 <__bad_interrupt>
      46:	00 00       	nop
      48:	96 c0       	rjmp	.+300    	; 0x176 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	94 c0       	rjmp	.+296    	; 0x176 <__bad_interrupt>
      4e:	00 00       	nop
      50:	92 c0       	rjmp	.+292    	; 0x176 <__bad_interrupt>
      52:	00 00       	nop
      54:	90 c0       	rjmp	.+288    	; 0x176 <__bad_interrupt>
      56:	00 00       	nop
      58:	8e c0       	rjmp	.+284    	; 0x176 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	8c c0       	rjmp	.+280    	; 0x176 <__bad_interrupt>
      5e:	00 00       	nop
      60:	8a c0       	rjmp	.+276    	; 0x176 <__bad_interrupt>
      62:	00 00       	nop
      64:	88 c0       	rjmp	.+272    	; 0x176 <__bad_interrupt>
      66:	00 00       	nop
      68:	86 c0       	rjmp	.+268    	; 0x176 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	84 c0       	rjmp	.+264    	; 0x176 <__bad_interrupt>
      6e:	00 00       	nop
      70:	82 c0       	rjmp	.+260    	; 0x176 <__bad_interrupt>
      72:	00 00       	nop
      74:	80 c0       	rjmp	.+256    	; 0x176 <__bad_interrupt>
      76:	00 00       	nop
      78:	7e c0       	rjmp	.+252    	; 0x176 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	7c c0       	rjmp	.+248    	; 0x176 <__bad_interrupt>
      7e:	00 00       	nop
      80:	7a c0       	rjmp	.+244    	; 0x176 <__bad_interrupt>
      82:	00 00       	nop
      84:	78 c0       	rjmp	.+240    	; 0x176 <__bad_interrupt>
      86:	00 00       	nop
      88:	76 c0       	rjmp	.+236    	; 0x176 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	74 c0       	rjmp	.+232    	; 0x176 <__bad_interrupt>
      8e:	00 00       	nop
      90:	72 c0       	rjmp	.+228    	; 0x176 <__bad_interrupt>
      92:	00 00       	nop
      94:	70 c0       	rjmp	.+224    	; 0x176 <__bad_interrupt>
      96:	00 00       	nop
      98:	6e c0       	rjmp	.+220    	; 0x176 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	84 c1       	rjmp	.+776    	; 0x3a6 <__vector_39>
      9e:	00 00       	nop
      a0:	6a c0       	rjmp	.+212    	; 0x176 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	68 c0       	rjmp	.+208    	; 0x176 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	0c 94 b7 09 	jmp	0x136e	; 0x136e <__vector_42>
      ac:	64 c0       	rjmp	.+200    	; 0x176 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	62 c0       	rjmp	.+196    	; 0x176 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	60 c0       	rjmp	.+192    	; 0x176 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	5e c0       	rjmp	.+188    	; 0x176 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	5c c0       	rjmp	.+184    	; 0x176 <__bad_interrupt>
      be:	00 00       	nop
      c0:	5a c0       	rjmp	.+180    	; 0x176 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	58 c0       	rjmp	.+176    	; 0x176 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	56 c0       	rjmp	.+172    	; 0x176 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	54 c0       	rjmp	.+168    	; 0x176 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	52 c0       	rjmp	.+164    	; 0x176 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	50 c0       	rjmp	.+160    	; 0x176 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	4e c0       	rjmp	.+156    	; 0x176 <__bad_interrupt>
      da:	00 00       	nop
      dc:	4c c0       	rjmp	.+152    	; 0x176 <__bad_interrupt>
      de:	00 00       	nop
      e0:	4a c0       	rjmp	.+148    	; 0x176 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	0b 03       	fmul	r16, r19
      e6:	12 03       	mulsu	r17, r18
      e8:	20 03       	mulsu	r18, r16
      ea:	2a 03       	fmul	r18, r18
      ec:	39 03       	fmul	r19, r17
      ee:	39 03       	fmul	r19, r17
      f0:	39 03       	fmul	r19, r17
      f2:	39 03       	fmul	r19, r17
      f4:	39 03       	fmul	r19, r17
      f6:	39 03       	fmul	r19, r17
      f8:	39 03       	fmul	r19, r17
      fa:	39 03       	fmul	r19, r17
      fc:	39 03       	fmul	r19, r17
      fe:	39 03       	fmul	r19, r17
     100:	39 03       	fmul	r19, r17
     102:	39 03       	fmul	r19, r17
     104:	39 03       	fmul	r19, r17
     106:	39 03       	fmul	r19, r17
     108:	39 03       	fmul	r19, r17
     10a:	39 03       	fmul	r19, r17
     10c:	39 03       	fmul	r19, r17
     10e:	39 03       	fmul	r19, r17
     110:	39 03       	fmul	r19, r17
     112:	39 03       	fmul	r19, r17
     114:	39 03       	fmul	r19, r17
     116:	39 03       	fmul	r19, r17
     118:	39 03       	fmul	r19, r17
     11a:	39 03       	fmul	r19, r17
     11c:	39 03       	fmul	r19, r17
     11e:	39 03       	fmul	r19, r17
     120:	39 03       	fmul	r19, r17
     122:	39 03       	fmul	r19, r17
     124:	39 03       	fmul	r19, r17
     126:	39 03       	fmul	r19, r17
     128:	39 03       	fmul	r19, r17
     12a:	39 03       	fmul	r19, r17
     12c:	39 03       	fmul	r19, r17
     12e:	32 03       	mulsu	r19, r18
     130:	30 03       	mulsu	r19, r16
     132:	34 03       	mulsu	r19, r20
     134:	36 03       	mulsu	r19, r22

00000136 <__ctors_end>:
     136:	11 24       	eor	r1, r1
     138:	1f be       	out	0x3f, r1	; 63
     13a:	cf ef       	ldi	r28, 0xFF	; 255
     13c:	d1 e2       	ldi	r29, 0x21	; 33
     13e:	de bf       	out	0x3e, r29	; 62
     140:	cd bf       	out	0x3d, r28	; 61
     142:	00 e0       	ldi	r16, 0x00	; 0
     144:	0c bf       	out	0x3c, r16	; 60

00000146 <__do_copy_data>:
     146:	12 e0       	ldi	r17, 0x02	; 2
     148:	a0 e0       	ldi	r26, 0x00	; 0
     14a:	b2 e0       	ldi	r27, 0x02	; 2
     14c:	ea ee       	ldi	r30, 0xEA	; 234
     14e:	fb e1       	ldi	r31, 0x1B	; 27
     150:	00 e0       	ldi	r16, 0x00	; 0
     152:	0b bf       	out	0x3b, r16	; 59
     154:	02 c0       	rjmp	.+4      	; 0x15a <__do_copy_data+0x14>
     156:	07 90       	elpm	r0, Z+
     158:	0d 92       	st	X+, r0
     15a:	a2 31       	cpi	r26, 0x12	; 18
     15c:	b1 07       	cpc	r27, r17
     15e:	d9 f7       	brne	.-10     	; 0x156 <__do_copy_data+0x10>

00000160 <__do_clear_bss>:
     160:	22 e0       	ldi	r18, 0x02	; 2
     162:	a2 e1       	ldi	r26, 0x12	; 18
     164:	b2 e0       	ldi	r27, 0x02	; 2
     166:	01 c0       	rjmp	.+2      	; 0x16a <.do_clear_bss_start>

00000168 <.do_clear_bss_loop>:
     168:	1d 92       	st	X+, r1

0000016a <.do_clear_bss_start>:
     16a:	a0 3c       	cpi	r26, 0xC0	; 192
     16c:	b2 07       	cpc	r27, r18
     16e:	e1 f7       	brne	.-8      	; 0x168 <.do_clear_bss_loop>
     170:	86 d2       	rcall	.+1292   	; 0x67e <main>
     172:	0c 94 f3 0d 	jmp	0x1be6	; 0x1be6 <_exit>

00000176 <__bad_interrupt>:
     176:	44 cf       	rjmp	.-376    	; 0x0 <__vectors>

00000178 <PCINT_Init>:
volatile int N=0;
//volatile int a=0;


void PCINT_Init(){
	PCICR = 1<<PCIE2;
     178:	84 e0       	ldi	r24, 0x04	; 4
     17a:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7c0068>
	PCIFR = 1<<PCIF2;
     17e:	8b bb       	out	0x1b, r24	; 27
	PCMSK2 = (1<<PCINT16) | (1<<PCINT17);
     180:	83 e0       	ldi	r24, 0x03	; 3
     182:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x7c006d>
	sei();
     186:	78 94       	sei
	DDRK=0;
     188:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x7c0107>
     18c:	08 95       	ret

0000018e <__vector_11>:
}



ISR(PCINT2_vect){			//finecorsa
     18e:	1f 92       	push	r1
     190:	0f 92       	push	r0
     192:	0f b6       	in	r0, 0x3f	; 63
     194:	0f 92       	push	r0
     196:	11 24       	eor	r1, r1
     198:	0b b6       	in	r0, 0x3b	; 59
     19a:	0f 92       	push	r0
     19c:	2f 93       	push	r18
     19e:	3f 93       	push	r19
     1a0:	4f 93       	push	r20
     1a2:	5f 93       	push	r21
     1a4:	6f 93       	push	r22
     1a6:	7f 93       	push	r23
     1a8:	8f 93       	push	r24
     1aa:	9f 93       	push	r25
     1ac:	af 93       	push	r26
     1ae:	bf 93       	push	r27
     1b0:	cf 93       	push	r28
     1b2:	ef 93       	push	r30
     1b4:	ff 93       	push	r31
	uint8_t changedbits;

	changedbits = PINK ^ n;
     1b6:	e6 e0       	ldi	r30, 0x06	; 6
     1b8:	f1 e0       	ldi	r31, 0x01	; 1
     1ba:	c0 81       	ld	r28, Z
     1bc:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     1c0:	c8 27       	eor	r28, r24
	n = PINK;
     1c2:	80 81       	ld	r24, Z
     1c4:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
	
	s++;
     1c8:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <s>
     1cc:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <s+0x1>
     1d0:	01 96       	adiw	r24, 0x01	; 1
     1d2:	90 93 17 02 	sts	0x0217, r25	; 0x800217 <s+0x1>
     1d6:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <s>
	d++;
     1da:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <d>
     1de:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <d+0x1>
     1e2:	01 96       	adiw	r24, 0x01	; 1
     1e4:	90 93 15 02 	sts	0x0215, r25	; 0x800215 <d+0x1>
     1e8:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <d>
	c++;
     1ec:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <__data_end>
     1f0:	90 91 13 02 	lds	r25, 0x0213	; 0x800213 <__data_end+0x1>
     1f4:	01 96       	adiw	r24, 0x01	; 1
     1f6:	90 93 13 02 	sts	0x0213, r25	; 0x800213 <__data_end+0x1>
     1fa:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <__data_end>
	
	//_delay_ms(100);
	
	if(changedbits & (1 << PK0))
     1fe:	c0 ff       	sbrs	r28, 0
     200:	54 c0       	rjmp	.+168    	; 0x2aa <__vector_11+0x11c>
	{
		if(c==1){
     202:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <__data_end>
     206:	90 91 13 02 	lds	r25, 0x0213	; 0x800213 <__data_end+0x1>
     20a:	01 97       	sbiw	r24, 0x01	; 1
     20c:	f9 f4       	brne	.+62     	; 0x24c <__vector_11+0xbe>
			stop_tutto();
     20e:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <stop_tutto>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     212:	2f ef       	ldi	r18, 0xFF	; 255
     214:	83 ed       	ldi	r24, 0xD3	; 211
     216:	90 e3       	ldi	r25, 0x30	; 48
     218:	21 50       	subi	r18, 0x01	; 1
     21a:	80 40       	sbci	r24, 0x00	; 0
     21c:	90 40       	sbci	r25, 0x00	; 0
     21e:	e1 f7       	brne	.-8      	; 0x218 <__vector_11+0x8a>
     220:	00 c0       	rjmp	.+0      	; 0x222 <__vector_11+0x94>
     222:	00 00       	nop
			_delay_ms(1000);
			avanti();
     224:	0e 94 1b 0a 	call	0x1436	; 0x1436 <avanti>
     228:	2f ef       	ldi	r18, 0xFF	; 255
     22a:	81 ee       	ldi	r24, 0xE1	; 225
     22c:	94 e0       	ldi	r25, 0x04	; 4
     22e:	21 50       	subi	r18, 0x01	; 1
     230:	80 40       	sbci	r24, 0x00	; 0
     232:	90 40       	sbci	r25, 0x00	; 0
     234:	e1 f7       	brne	.-8      	; 0x22e <__vector_11+0xa0>
     236:	00 c0       	rjmp	.+0      	; 0x238 <__vector_11+0xaa>
     238:	00 00       	nop
			_delay_ms(100);
			seg_enc_a_zero(0);
     23a:	80 e0       	ldi	r24, 0x00	; 0
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	35 d2       	rcall	.+1130   	; 0x6aa <seg_enc_a_zero>
			stop_tutto();
     240:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <stop_tutto>
			n = 0xFF;
     244:	8f ef       	ldi	r24, 0xFF	; 255
     246:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
     24a:	2f c0       	rjmp	.+94     	; 0x2aa <__vector_11+0x11c>
		}
		else{
			if(s==1){
     24c:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <s>
     250:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <s+0x1>
     254:	01 97       	sbiw	r24, 0x01	; 1
     256:	f9 f4       	brne	.+62     	; 0x296 <__vector_11+0x108>
				stop_tutto();
     258:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <stop_tutto>
     25c:	2f ef       	ldi	r18, 0xFF	; 255
     25e:	83 ed       	ldi	r24, 0xD3	; 211
     260:	90 e3       	ldi	r25, 0x30	; 48
     262:	21 50       	subi	r18, 0x01	; 1
     264:	80 40       	sbci	r24, 0x00	; 0
     266:	90 40       	sbci	r25, 0x00	; 0
     268:	e1 f7       	brne	.-8      	; 0x262 <__vector_11+0xd4>
     26a:	00 c0       	rjmp	.+0      	; 0x26c <__vector_11+0xde>
     26c:	00 00       	nop
				_delay_ms(1000);
				indietro();
     26e:	0e 94 56 0a 	call	0x14ac	; 0x14ac <indietro>
     272:	2f ef       	ldi	r18, 0xFF	; 255
     274:	81 ee       	ldi	r24, 0xE1	; 225
     276:	94 e0       	ldi	r25, 0x04	; 4
     278:	21 50       	subi	r18, 0x01	; 1
     27a:	80 40       	sbci	r24, 0x00	; 0
     27c:	90 40       	sbci	r25, 0x00	; 0
     27e:	e1 f7       	brne	.-8      	; 0x278 <__vector_11+0xea>
     280:	00 c0       	rjmp	.+0      	; 0x282 <__vector_11+0xf4>
     282:	00 00       	nop
				_delay_ms(100);
				stop_tutto();
     284:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <stop_tutto>
				seg_enc_a_zero(0);
     288:	80 e0       	ldi	r24, 0x00	; 0
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	0e d2       	rcall	.+1052   	; 0x6aa <seg_enc_a_zero>
				n = 0xFF;
     28e:	8f ef       	ldi	r24, 0xFF	; 255
     290:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
     294:	0a c0       	rjmp	.+20     	; 0x2aa <__vector_11+0x11c>
			}
			else if(s>1){			//10 uF per fitro alti rimbalzo
     296:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <s>
     29a:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <s+0x1>
     29e:	02 97       	sbiw	r24, 0x02	; 2
     2a0:	24 f0       	brlt	.+8      	; 0x2aa <__vector_11+0x11c>
				s=0;
     2a2:	10 92 17 02 	sts	0x0217, r1	; 0x800217 <s+0x1>
     2a6:	10 92 16 02 	sts	0x0216, r1	; 0x800216 <s>
				//n=0xFF;
			}
		}
	}

	if(changedbits & (1 << PK1))
     2aa:	c1 ff       	sbrs	r28, 1
     2ac:	54 c0       	rjmp	.+168    	; 0x356 <__vector_11+0x1c8>
	{
		if(c==1){
     2ae:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <__data_end>
     2b2:	90 91 13 02 	lds	r25, 0x0213	; 0x800213 <__data_end+0x1>
     2b6:	01 97       	sbiw	r24, 0x01	; 1
     2b8:	f9 f4       	brne	.+62     	; 0x2f8 <__vector_11+0x16a>
			stop_tutto();
     2ba:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <stop_tutto>
     2be:	2f ef       	ldi	r18, 0xFF	; 255
     2c0:	83 ed       	ldi	r24, 0xD3	; 211
     2c2:	90 e3       	ldi	r25, 0x30	; 48
     2c4:	21 50       	subi	r18, 0x01	; 1
     2c6:	80 40       	sbci	r24, 0x00	; 0
     2c8:	90 40       	sbci	r25, 0x00	; 0
     2ca:	e1 f7       	brne	.-8      	; 0x2c4 <__vector_11+0x136>
     2cc:	00 c0       	rjmp	.+0      	; 0x2ce <__vector_11+0x140>
     2ce:	00 00       	nop
			_delay_ms(1000);
			indietro();
     2d0:	0e 94 56 0a 	call	0x14ac	; 0x14ac <indietro>
     2d4:	2f ef       	ldi	r18, 0xFF	; 255
     2d6:	81 ee       	ldi	r24, 0xE1	; 225
     2d8:	94 e0       	ldi	r25, 0x04	; 4
     2da:	21 50       	subi	r18, 0x01	; 1
     2dc:	80 40       	sbci	r24, 0x00	; 0
     2de:	90 40       	sbci	r25, 0x00	; 0
     2e0:	e1 f7       	brne	.-8      	; 0x2da <__vector_11+0x14c>
     2e2:	00 c0       	rjmp	.+0      	; 0x2e4 <__vector_11+0x156>
     2e4:	00 00       	nop
			_delay_ms(100);
			stop_tutto();
     2e6:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <stop_tutto>
			seg_enc_a_zero(0);
     2ea:	80 e0       	ldi	r24, 0x00	; 0
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	dd d1       	rcall	.+954    	; 0x6aa <seg_enc_a_zero>
			n = 0xFF;
     2f0:	8f ef       	ldi	r24, 0xFF	; 255
     2f2:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
     2f6:	2f c0       	rjmp	.+94     	; 0x356 <__vector_11+0x1c8>
		}
		else{
			if(d==1){
     2f8:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <d>
     2fc:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <d+0x1>
     300:	01 97       	sbiw	r24, 0x01	; 1
     302:	f9 f4       	brne	.+62     	; 0x342 <__vector_11+0x1b4>
				stop_tutto();
     304:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <stop_tutto>
     308:	2f ef       	ldi	r18, 0xFF	; 255
     30a:	83 ed       	ldi	r24, 0xD3	; 211
     30c:	90 e3       	ldi	r25, 0x30	; 48
     30e:	21 50       	subi	r18, 0x01	; 1
     310:	80 40       	sbci	r24, 0x00	; 0
     312:	90 40       	sbci	r25, 0x00	; 0
     314:	e1 f7       	brne	.-8      	; 0x30e <__vector_11+0x180>
     316:	00 c0       	rjmp	.+0      	; 0x318 <__vector_11+0x18a>
     318:	00 00       	nop
				_delay_ms(1000);
				avanti();
     31a:	0e 94 1b 0a 	call	0x1436	; 0x1436 <avanti>
     31e:	2f ef       	ldi	r18, 0xFF	; 255
     320:	81 ee       	ldi	r24, 0xE1	; 225
     322:	94 e0       	ldi	r25, 0x04	; 4
     324:	21 50       	subi	r18, 0x01	; 1
     326:	80 40       	sbci	r24, 0x00	; 0
     328:	90 40       	sbci	r25, 0x00	; 0
     32a:	e1 f7       	brne	.-8      	; 0x324 <__vector_11+0x196>
     32c:	00 c0       	rjmp	.+0      	; 0x32e <__vector_11+0x1a0>
     32e:	00 00       	nop
				_delay_ms(100);
				stop_tutto();
     330:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <stop_tutto>
				seg_enc_a_zero(0);
     334:	80 e0       	ldi	r24, 0x00	; 0
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	b8 d1       	rcall	.+880    	; 0x6aa <seg_enc_a_zero>
				n = 0xFF;
     33a:	8f ef       	ldi	r24, 0xFF	; 255
     33c:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
     340:	0a c0       	rjmp	.+20     	; 0x356 <__vector_11+0x1c8>
			}
			else if(d>1){
     342:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <d>
     346:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <d+0x1>
     34a:	02 97       	sbiw	r24, 0x02	; 2
     34c:	24 f0       	brlt	.+8      	; 0x356 <__vector_11+0x1c8>
				d=0;
     34e:	10 92 15 02 	sts	0x0215, r1	; 0x800215 <d+0x1>
     352:	10 92 14 02 	sts	0x0214, r1	; 0x800214 <d>
				//n=0xFF;
			}
		}	
	}
     356:	ff 91       	pop	r31
     358:	ef 91       	pop	r30
     35a:	cf 91       	pop	r28
     35c:	bf 91       	pop	r27
     35e:	af 91       	pop	r26
     360:	9f 91       	pop	r25
     362:	8f 91       	pop	r24
     364:	7f 91       	pop	r23
     366:	6f 91       	pop	r22
     368:	5f 91       	pop	r21
     36a:	4f 91       	pop	r20
     36c:	3f 91       	pop	r19
     36e:	2f 91       	pop	r18
     370:	0f 90       	pop	r0
     372:	0b be       	out	0x3b, r0	; 59
     374:	0f 90       	pop	r0
     376:	0f be       	out	0x3f, r0	; 63
     378:	0f 90       	pop	r0
     37a:	1f 90       	pop	r1
     37c:	18 95       	reti

0000037e <I2C_setCallbacks>:
{
	// abilita bit e pulisci dati
	cli();
	TWCR = 0;
	TWAR = 0;
	sei();
     37e:	90 93 1b 02 	sts	0x021B, r25	; 0x80021b <I2C_recv+0x1>
     382:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <I2C_recv>
     386:	70 93 19 02 	sts	0x0219, r23	; 0x800219 <I2C_req+0x1>
     38a:	60 93 18 02 	sts	0x0218, r22	; 0x800218 <I2C_req>
     38e:	08 95       	ret

00000390 <I2C_init>:
     390:	f8 94       	cli
     392:	88 0f       	add	r24, r24
     394:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7c00ba>
     398:	85 ec       	ldi	r24, 0xC5	; 197
     39a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
     39e:	78 94       	sei
     3a0:	0c 94 b2 0b 	jmp	0x1764	; 0x1764 <Serial_Init>
     3a4:	08 95       	ret

000003a6 <__vector_39>:
}

ISR(TWI_vect)
{
     3a6:	1f 92       	push	r1
     3a8:	0f 92       	push	r0
     3aa:	0f b6       	in	r0, 0x3f	; 63
     3ac:	0f 92       	push	r0
     3ae:	11 24       	eor	r1, r1
     3b0:	0b b6       	in	r0, 0x3b	; 59
     3b2:	0f 92       	push	r0
     3b4:	2f 93       	push	r18
     3b6:	3f 93       	push	r19
     3b8:	4f 93       	push	r20
     3ba:	5f 93       	push	r21
     3bc:	6f 93       	push	r22
     3be:	7f 93       	push	r23
     3c0:	8f 93       	push	r24
     3c2:	9f 93       	push	r25
     3c4:	af 93       	push	r26
     3c6:	bf 93       	push	r27
     3c8:	ef 93       	push	r30
     3ca:	ff 93       	push	r31
	switch(TW_STATUS)
     3cc:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7c00b9>
     3d0:	88 7f       	andi	r24, 0xF8	; 248
     3d2:	80 38       	cpi	r24, 0x80	; 128
     3d4:	49 f0       	breq	.+18     	; 0x3e8 <__vector_39+0x42>
     3d6:	18 f4       	brcc	.+6      	; 0x3de <__vector_39+0x38>
     3d8:	88 23       	and	r24, r24
     3da:	19 f1       	breq	.+70     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     3dc:	28 c0       	rjmp	.+80     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     3de:	88 3a       	cpi	r24, 0xA8	; 168
     3e0:	71 f0       	breq	.+28     	; 0x3fe <__vector_39+0x58>
     3e2:	88 3b       	cpi	r24, 0xB8	; 184
     3e4:	a9 f0       	breq	.+42     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     3e6:	23 c0       	rjmp	.+70     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
	{
		case TW_SR_DATA_ACK:
		//dati ricevuti da master, richiama il receive callback
		I2C_recv(TWDR);
     3e8:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
     3ec:	e0 91 1a 02 	lds	r30, 0x021A	; 0x80021a <I2C_recv>
     3f0:	f0 91 1b 02 	lds	r31, 0x021B	; 0x80021b <I2C_recv+0x1>
     3f4:	19 95       	eicall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     3f6:	85 ec       	ldi	r24, 0xC5	; 197
     3f8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
		break;
     3fc:	1b c0       	rjmp	.+54     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
		case TW_ST_SLA_ACK:
		// master irchiede dati, richiama il receive callback
		I2C_req();
     3fe:	e0 91 18 02 	lds	r30, 0x0218	; 0x800218 <I2C_req>
     402:	f0 91 19 02 	lds	r31, 0x0219	; 0x800219 <I2C_req+0x1>
     406:	19 95       	eicall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     408:	85 ec       	ldi	r24, 0xC5	; 197
     40a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
		break;
     40e:	12 c0       	rjmp	.+36     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
		case TW_ST_DATA_ACK:
		// master irchiede dati, richiama il receive callback
		I2C_req();
     410:	e0 91 18 02 	lds	r30, 0x0218	; 0x800218 <I2C_req>
     414:	f0 91 19 02 	lds	r31, 0x0219	; 0x800219 <I2C_req+0x1>
     418:	19 95       	eicall
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     41a:	85 ec       	ldi	r24, 0xC5	; 197
     41c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
		break;
     420:	09 c0       	rjmp	.+18     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
		case TW_BUS_ERROR:
		// qualsiasi stato di errore, preparea TWI per essere reimpostato
		TWCR = 0;
     422:	ec eb       	ldi	r30, 0xBC	; 188
     424:	f0 e0       	ldi	r31, 0x00	; 0
     426:	10 82       	st	Z, r1
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     428:	85 ec       	ldi	r24, 0xC5	; 197
     42a:	80 83       	st	Z, r24
		break;
     42c:	03 c0       	rjmp	.+6      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
		default:
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     42e:	85 ec       	ldi	r24, 0xC5	; 197
     430:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7c00bc>
		break;
	}
     434:	ff 91       	pop	r31
     436:	ef 91       	pop	r30
     438:	bf 91       	pop	r27
     43a:	af 91       	pop	r26
     43c:	9f 91       	pop	r25
     43e:	8f 91       	pop	r24
     440:	7f 91       	pop	r23
     442:	6f 91       	pop	r22
     444:	5f 91       	pop	r21
     446:	4f 91       	pop	r20
     448:	3f 91       	pop	r19
     44a:	2f 91       	pop	r18
     44c:	0f 90       	pop	r0
     44e:	0b be       	out	0x3b, r0	; 59
     450:	0f 90       	pop	r0
     452:	0f be       	out	0x3f, r0	; 63
     454:	0f 90       	pop	r0
     456:	1f 90       	pop	r1
     458:	18 95       	reti

0000045a <I2C_received>:
#include "Fine_Corsa.h"

volatile int data = 0;
void I2C_received(uint8_t received_data)		//ricevo da master
{
	data = received_data;
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <data+0x1>
     460:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <data>
     464:	08 95       	ret

00000466 <I2C_requested>:
}

void I2C_requested()						//trasmetto a master
{
	I2C_transmitByte(data);
     466:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <data>
     46a:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <data+0x1>
void I2C_stop(void);
void I2C_setCallbacks(void (*recv)(uint8_t), void (*req)());

inline void __attribute__((always_inline)) I2C_transmitByte(uint8_t data)
{
	TWDR = data;
     46e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7c00bb>
     472:	08 95       	ret

00000474 <controllo_telecamera>:
	}
}

void controllo_telecamera(void){
	int i;
	if(data == 0x36){
     474:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <data>
     478:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <data+0x1>
     47c:	c6 97       	sbiw	r24, 0x36	; 54
     47e:	01 f5       	brne	.+64     	; 0x4c0 <controllo_telecamera+0x4c>
		Serial_Send("croce\n");
     480:	85 e0       	ldi	r24, 0x05	; 5
     482:	92 e0       	ldi	r25, 0x02	; 2
     484:	0e 94 d4 0b 	call	0x17a8	; 0x17a8 <Serial_Send_String>
		for(i=0; i<5; i++){
     488:	80 e0       	ldi	r24, 0x00	; 0
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	16 c0       	rjmp	.+44     	; 0x4ba <controllo_telecamera+0x46>
			PORTF = 1;			//lampeggia led
     48e:	21 e0       	ldi	r18, 0x01	; 1
     490:	21 bb       	out	0x11, r18	; 17
     492:	2f ef       	ldi	r18, 0xFF	; 255
     494:	38 ef       	ldi	r19, 0xF8	; 248
     496:	45 e1       	ldi	r20, 0x15	; 21
     498:	21 50       	subi	r18, 0x01	; 1
     49a:	30 40       	sbci	r19, 0x00	; 0
     49c:	40 40       	sbci	r20, 0x00	; 0
     49e:	e1 f7       	brne	.-8      	; 0x498 <controllo_telecamera+0x24>
     4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <controllo_telecamera+0x2e>
     4a2:	00 00       	nop
			_delay_ms(450);
			PORTF = 0;				//lampeggia led
     4a4:	11 ba       	out	0x11, r1	; 17
     4a6:	2f ef       	ldi	r18, 0xFF	; 255
     4a8:	38 ef       	ldi	r19, 0xF8	; 248
     4aa:	45 e1       	ldi	r20, 0x15	; 21
     4ac:	21 50       	subi	r18, 0x01	; 1
     4ae:	30 40       	sbci	r19, 0x00	; 0
     4b0:	40 40       	sbci	r20, 0x00	; 0
     4b2:	e1 f7       	brne	.-8      	; 0x4ac <controllo_telecamera+0x38>
     4b4:	00 c0       	rjmp	.+0      	; 0x4b6 <controllo_telecamera+0x42>
     4b6:	00 00       	nop

void controllo_telecamera(void){
	int i;
	if(data == 0x36){
		Serial_Send("croce\n");
		for(i=0; i<5; i++){
     4b8:	01 96       	adiw	r24, 0x01	; 1
     4ba:	85 30       	cpi	r24, 0x05	; 5
     4bc:	91 05       	cpc	r25, r1
     4be:	3c f3       	brlt	.-50     	; 0x48e <controllo_telecamera+0x1a>
     4c0:	08 95       	ret

000004c2 <interrupt_rasp>:
	else;
}


void interrupt_rasp(){
	PORTF = 2;
     4c2:	82 e0       	ldi	r24, 0x02	; 2
     4c4:	81 bb       	out	0x11, r24	; 17
     4c6:	8f e3       	ldi	r24, 0x3F	; 63
     4c8:	9c e9       	ldi	r25, 0x9C	; 156
     4ca:	01 97       	sbiw	r24, 0x01	; 1
     4cc:	f1 f7       	brne	.-4      	; 0x4ca <interrupt_rasp+0x8>
     4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <interrupt_rasp+0xe>
     4d0:	00 00       	nop
	_delay_ms(10);
	PORTF = 0;
     4d2:	11 ba       	out	0x11, r1	; 17
     4d4:	08 95       	ret

000004d6 <delay_movimento>:

volatile int data_ret = 0;
volatile int seg_enc=0;

void delay_movimento( int c){
	if(c==1){			//avanti
     4d6:	81 30       	cpi	r24, 0x01	; 1
     4d8:	91 05       	cpc	r25, r1
     4da:	09 f0       	breq	.+2      	; 0x4de <delay_movimento+0x8>
     4dc:	52 c0       	rjmp	.+164    	; 0x582 <delay_movimento+0xac>
		do{
			seg_enc = return_seg_enc();
     4de:	e0 d0       	rcall	.+448    	; 0x6a0 <return_seg_enc>
     4e0:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <seg_enc+0x1>
     4e4:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <seg_enc>
		}while ((seg_enc != 1300) && (data!=0x34));
     4e8:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <seg_enc>
     4ec:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <seg_enc+0x1>
     4f0:	84 31       	cpi	r24, 0x14	; 20
     4f2:	95 40       	sbci	r25, 0x05	; 5
     4f4:	31 f0       	breq	.+12     	; 0x502 <delay_movimento+0x2c>
     4f6:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <data>
     4fa:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <data+0x1>
     4fe:	c4 97       	sbiw	r24, 0x34	; 52
     500:	71 f7       	brne	.-36     	; 0x4de <delay_movimento+0x8>
		if(data == 0x34){
     502:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <data>
     506:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <data+0x1>
     50a:	c4 97       	sbiw	r24, 0x34	; 52
			indietro();
     50c:	f9 f4       	brne	.+62     	; 0x54c <delay_movimento+0x76>
     50e:	ce d7       	rcall	.+3996   	; 0x14ac <indietro>
     510:	8f e5       	ldi	r24, 0x5F	; 95
     512:	9a ee       	ldi	r25, 0xEA	; 234
     514:	01 97       	sbiw	r24, 0x01	; 1
     516:	f1 f7       	brne	.-4      	; 0x514 <delay_movimento+0x3e>
     518:	00 c0       	rjmp	.+0      	; 0x51a <delay_movimento+0x44>
     51a:	00 00       	nop
			_delay_ms(15);
			stop_tutto();
     51c:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <stop_tutto>
     520:	9f ef       	ldi	r25, 0xFF	; 255
     522:	25 ea       	ldi	r18, 0xA5	; 165
     524:	8e e0       	ldi	r24, 0x0E	; 14
     526:	91 50       	subi	r25, 0x01	; 1
     528:	20 40       	sbci	r18, 0x00	; 0
     52a:	80 40       	sbci	r24, 0x00	; 0
     52c:	e1 f7       	brne	.-8      	; 0x526 <delay_movimento+0x50>
     52e:	00 c0       	rjmp	.+0      	; 0x530 <delay_movimento+0x5a>
			_delay_ms(300);
			interrupt_rasp();
     530:	00 00       	nop
     532:	c7 df       	rcall	.-114    	; 0x4c2 <interrupt_rasp>
			seg_enc_a_zero(0);
     534:	80 e0       	ldi	r24, 0x00	; 0
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	b8 d0       	rcall	.+368    	; 0x6aa <seg_enc_a_zero>
			seg_enc=0;
     53a:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <seg_enc+0x1>
     53e:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <seg_enc>
			Serial_Send("Nero");
     542:	8c e0       	ldi	r24, 0x0C	; 12
     544:	92 e0       	ldi	r25, 0x02	; 2
     546:	0c 94 d4 0b 	jmp	0x17a8	; 0x17a8 <Serial_Send_String>
		}
		else{
			indietro();
     54a:	08 95       	ret
     54c:	af d7       	rcall	.+3934   	; 0x14ac <indietro>
     54e:	8f e5       	ldi	r24, 0x5F	; 95
     550:	9a ee       	ldi	r25, 0xEA	; 234
     552:	01 97       	sbiw	r24, 0x01	; 1
     554:	f1 f7       	brne	.-4      	; 0x552 <delay_movimento+0x7c>
     556:	00 c0       	rjmp	.+0      	; 0x558 <delay_movimento+0x82>
     558:	00 00       	nop
			_delay_ms(15);
			stop_tutto();
     55a:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <stop_tutto>
     55e:	9f ef       	ldi	r25, 0xFF	; 255
     560:	25 ea       	ldi	r18, 0xA5	; 165
     562:	8e e0       	ldi	r24, 0x0E	; 14
     564:	91 50       	subi	r25, 0x01	; 1
     566:	20 40       	sbci	r18, 0x00	; 0
     568:	80 40       	sbci	r24, 0x00	; 0
     56a:	e1 f7       	brne	.-8      	; 0x564 <delay_movimento+0x8e>
     56c:	00 c0       	rjmp	.+0      	; 0x56e <delay_movimento+0x98>
			_delay_ms(300);
			interrupt_rasp();
     56e:	00 00       	nop
			seg_enc_a_zero(0);
     570:	a8 df       	rcall	.-176    	; 0x4c2 <interrupt_rasp>
     572:	80 e0       	ldi	r24, 0x00	; 0
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	99 d0       	rcall	.+306    	; 0x6aa <seg_enc_a_zero>
			seg_enc=0;
     578:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <seg_enc+0x1>
     57c:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <seg_enc>
		}
		
	}
	else if(c==2){		//stop da girata sinistra
     580:	08 95       	ret
     582:	82 30       	cpi	r24, 0x02	; 2
     584:	91 05       	cpc	r25, r1
		//stop_tutto();
		destra();
     586:	d9 f4       	brne	.+54     	; 0x5be <delay_movimento+0xe8>
     588:	cc d7       	rcall	.+3992   	; 0x1522 <destra>
     58a:	8f e5       	ldi	r24, 0x5F	; 95
     58c:	9a ee       	ldi	r25, 0xEA	; 234
     58e:	01 97       	sbiw	r24, 0x01	; 1
     590:	f1 f7       	brne	.-4      	; 0x58e <delay_movimento+0xb8>
     592:	00 c0       	rjmp	.+0      	; 0x594 <delay_movimento+0xbe>
     594:	00 00       	nop
		_delay_ms(15);
		stop_tutto();
     596:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <stop_tutto>
     59a:	9f ef       	ldi	r25, 0xFF	; 255
     59c:	25 ea       	ldi	r18, 0xA5	; 165
     59e:	8e e0       	ldi	r24, 0x0E	; 14
     5a0:	91 50       	subi	r25, 0x01	; 1
     5a2:	20 40       	sbci	r18, 0x00	; 0
     5a4:	80 40       	sbci	r24, 0x00	; 0
     5a6:	e1 f7       	brne	.-8      	; 0x5a0 <delay_movimento+0xca>
		_delay_ms(300);
		interrupt_rasp();
     5a8:	00 c0       	rjmp	.+0      	; 0x5aa <delay_movimento+0xd4>
     5aa:	00 00       	nop
		seg_enc_a_zero(0);
     5ac:	8a df       	rcall	.-236    	; 0x4c2 <interrupt_rasp>
     5ae:	80 e0       	ldi	r24, 0x00	; 0
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	7b d0       	rcall	.+246    	; 0x6aa <seg_enc_a_zero>
		seg_enc=0;
     5b4:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <seg_enc+0x1>
     5b8:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <seg_enc>
     5bc:	08 95       	ret
	}
	else if(c==3){		//stop da girata destra
     5be:	03 97       	sbiw	r24, 0x03	; 3
     5c0:	d9 f4       	brne	.+54     	; 0x5f8 <delay_movimento+0x122>
		//stop_tutto();
		sinistra_lento();
     5c2:	0e 94 42 0b 	call	0x1684	; 0x1684 <sinistra_lento>
     5c6:	8f e5       	ldi	r24, 0x5F	; 95
     5c8:	9a ee       	ldi	r25, 0xEA	; 234
     5ca:	01 97       	sbiw	r24, 0x01	; 1
     5cc:	f1 f7       	brne	.-4      	; 0x5ca <delay_movimento+0xf4>
     5ce:	00 c0       	rjmp	.+0      	; 0x5d0 <delay_movimento+0xfa>
     5d0:	00 00       	nop
		_delay_ms(15);
		stop_tutto();
     5d2:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <stop_tutto>
     5d6:	9f ef       	ldi	r25, 0xFF	; 255
     5d8:	25 ea       	ldi	r18, 0xA5	; 165
     5da:	8e e0       	ldi	r24, 0x0E	; 14
     5dc:	91 50       	subi	r25, 0x01	; 1
     5de:	20 40       	sbci	r18, 0x00	; 0
     5e0:	80 40       	sbci	r24, 0x00	; 0
     5e2:	e1 f7       	brne	.-8      	; 0x5dc <delay_movimento+0x106>
		_delay_ms(300);
		interrupt_rasp();
     5e4:	00 c0       	rjmp	.+0      	; 0x5e6 <delay_movimento+0x110>
     5e6:	00 00       	nop
		seg_enc_a_zero(0);
     5e8:	6c df       	rcall	.-296    	; 0x4c2 <interrupt_rasp>
     5ea:	80 e0       	ldi	r24, 0x00	; 0
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	5d d0       	rcall	.+186    	; 0x6aa <seg_enc_a_zero>
		seg_enc=0;
     5f0:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <seg_enc+0x1>
     5f4:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <seg_enc>
     5f8:	08 95       	ret

000005fa <controllo_movimento>:
	}
}

void controllo_movimento(){
	switch(data){
     5fa:	e0 91 20 02 	lds	r30, 0x0220	; 0x800220 <data>
     5fe:	f0 91 21 02 	lds	r31, 0x0221	; 0x800221 <data+0x1>
     602:	31 97       	sbiw	r30, 0x01	; 1
     604:	e9 32       	cpi	r30, 0x29	; 41
     606:	f1 05       	cpc	r31, r1
     608:	a0 f5       	brcc	.+104    	; 0x672 <controllo_movimento+0x78>
     60a:	88 27       	eor	r24, r24
     60c:	ee 58       	subi	r30, 0x8E	; 142
     60e:	ff 4f       	sbci	r31, 0xFF	; 255
     610:	8f 4f       	sbci	r24, 0xFF	; 255
     612:	0c 94 c6 0d 	jmp	0x1b8c	; 0x1b8c <__tablejump2__>
		
		//Fermo Da controllo avanti e girata
		case 0x01:
			delay_movimento(2);		//da sinistra
     616:	82 e0       	ldi	r24, 0x02	; 2
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	5d df       	rcall	.-326    	; 0x4d6 <delay_movimento>
			seg_enc_a_zero(0);
     61c:	80 e0       	ldi	r24, 0x00	; 0
     61e:	90 e0       	ldi	r25, 0x00	; 0
     620:	44 c0       	rjmp	.+136    	; 0x6aa <seg_enc_a_zero>
			break;
     622:	08 95       	ret
		case 0x02:
			avanti();
     624:	08 d7       	rcall	.+3600   	; 0x1436 <avanti>
			delay_movimento(1);		//avanti
     626:	81 e0       	ldi	r24, 0x01	; 1
     628:	90 e0       	ldi	r25, 0x00	; 0
     62a:	55 df       	rcall	.-342    	; 0x4d6 <delay_movimento>
     62c:	2f ef       	ldi	r18, 0xFF	; 255
     62e:	89 e6       	ldi	r24, 0x69	; 105
     630:	98 e1       	ldi	r25, 0x18	; 24
     632:	21 50       	subi	r18, 0x01	; 1
     634:	80 40       	sbci	r24, 0x00	; 0
     636:	90 40       	sbci	r25, 0x00	; 0
     638:	e1 f7       	brne	.-8      	; 0x632 <controllo_movimento+0x38>
     63a:	00 c0       	rjmp	.+0      	; 0x63c <controllo_movimento+0x42>
     63c:	00 00       	nop
     63e:	08 95       	ret
			/*_delay_ms(700);		//800
			stop_tutto();*/
			_delay_ms(500);
			break;
		case 0x03:
			delay_movimento(3);		//da destra
     640:	83 e0       	ldi	r24, 0x03	; 3
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	48 df       	rcall	.-368    	; 0x4d6 <delay_movimento>
     646:	84 e0       	ldi	r24, 0x04	; 4
			data_ret = 0x04;
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	90 93 1f 02 	sts	0x021F, r25	; 0x80021f <data_ret+0x1>
     64e:	80 93 1e 02 	sts	0x021E, r24	; 0x80021e <data_ret>
     652:	08 95       	ret
			break;
		case 0x04:
			stop_tutto();		//fermo
     654:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <stop_tutto>
			seg_enc_a_zero(0);
     658:	80 e0       	ldi	r24, 0x00	; 0
     65a:	90 e0       	ldi	r25, 0x00	; 0
			break;
     65c:	26 c0       	rjmp	.+76     	; 0x6aa <seg_enc_a_zero>
		
		
		//Giroscopio
		case 0x27:				//sinistra
			sinistra();
     65e:	08 95       	ret
     660:	d6 c7       	rjmp	.+4012   	; 0x160e <sinistra>
			break;
     662:	08 95       	ret
		case 0x26:				//destra
			destra();
     664:	5e c7       	rjmp	.+3772   	; 0x1522 <destra>
     666:	08 95       	ret
			break;
     668:	97 c7       	rjmp	.+3886   	; 0x1598 <destra_lento>
		case 0x28:
			destra_lento();
     66a:	08 95       	ret
     66c:	0c 94 42 0b 	jmp	0x1684	; 0x1684 <sinistra_lento>
			break;
		case 0x29:
			sinistra_lento();
     670:	08 95       	ret
			break;
     672:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <stop_tutto>
		
		default:
			stop_tutto();
     676:	80 e0       	ldi	r24, 0x00	; 0
			seg_enc_a_zero(0);
     678:	90 e0       	ldi	r25, 0x00	; 0
     67a:	17 c0       	rjmp	.+46     	; 0x6aa <seg_enc_a_zero>
     67c:	08 95       	ret

0000067e <main>:
     67e:	0e 94 b2 0b 	call	0x1764	; 0x1764 <Serial_Init>
int main(void)
{
	Serial_Init();
	
	//I2C
	I2C_init(0x10);
     682:	80 e1       	ldi	r24, 0x10	; 16
     684:	85 de       	rcall	.-758    	; 0x390 <I2C_init>
	I2C_setCallbacks(I2C_received, I2C_requested);
     686:	63 e3       	ldi	r22, 0x33	; 51
     688:	72 e0       	ldi	r23, 0x02	; 2
     68a:	8d e2       	ldi	r24, 0x2D	; 45
     68c:	92 e0       	ldi	r25, 0x02	; 2
	//Servo
	//Set_Servo(150);
	//_delay_ms(3000);
	
	//Motori
    PID();
     68e:	77 de       	rcall	.-786    	; 0x37e <I2C_setCallbacks>
	PWM();
     690:	b9 d6       	rcall	.+3442   	; 0x1404 <PID>
	
	//Finecorsa
	PCINT_Init();
     692:	9b d6       	rcall	.+3382   	; 0x13ca <PWM>
	
	//Led riconoscimento
	DDRF = 3;
     694:	71 dd       	rcall	.-1310   	; 0x178 <PCINT_Init>
     696:	83 e0       	ldi	r24, 0x03	; 3
	
	
    while (1) 
    {
		
		controllo_movimento();
     698:	80 bb       	out	0x10, r24	; 16
     69a:	af df       	rcall	.-162    	; 0x5fa <controllo_movimento>
		
		//data = return_data();
		controllo_telecamera();
     69c:	eb de       	rcall	.-554    	; 0x474 <controllo_telecamera>
     69e:	fd cf       	rjmp	.-6      	; 0x69a <main+0x1c>

000006a0 <return_seg_enc>:
     6a0:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <seg_enc_0>

volatile int seg_enc_0 = 0;


int return_seg_enc(){
	return seg_enc_0;
     6a4:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <seg_enc_0+0x1>
}
     6a8:	08 95       	ret

000006aa <seg_enc_a_zero>:

void seg_enc_a_zero(int c){
	seg_enc_0 = c;
     6aa:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <seg_enc_0+0x1>
     6ae:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <seg_enc_0>
     6b2:	08 95       	ret

000006b4 <__vector_3>:
}

ISR(INT2_vect){//interrupt encoder1
     6b4:	1f 92       	push	r1
     6b6:	0f 92       	push	r0
     6b8:	0f b6       	in	r0, 0x3f	; 63
     6ba:	0f 92       	push	r0
     6bc:	11 24       	eor	r1, r1
     6be:	0b b6       	in	r0, 0x3b	; 59
     6c0:	0f 92       	push	r0
     6c2:	2f 93       	push	r18
     6c4:	3f 93       	push	r19
     6c6:	4f 93       	push	r20
     6c8:	5f 93       	push	r21
     6ca:	6f 93       	push	r22
     6cc:	7f 93       	push	r23
     6ce:	8f 93       	push	r24
     6d0:	9f 93       	push	r25
     6d2:	af 93       	push	r26
     6d4:	bf 93       	push	r27
     6d6:	ef 93       	push	r30
     6d8:	ff 93       	push	r31
	t_1 = (int32_t) TCNT5;
     6da:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
     6de:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     6e2:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <t_1+0x1>
     6e6:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <t_1>
	deltat_1 = (t_1-t_old_1) * KTIMER_256;
     6ea:	a0 91 32 02 	lds	r26, 0x0232	; 0x800232 <t_1>
     6ee:	b0 91 33 02 	lds	r27, 0x0233	; 0x800233 <t_1+0x1>
     6f2:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <t_old_1>
     6f6:	90 91 31 02 	lds	r25, 0x0231	; 0x800231 <t_old_1+0x1>
     6fa:	a8 1b       	sub	r26, r24
     6fc:	b9 0b       	sbc	r27, r25
     6fe:	20 e4       	ldi	r18, 0x40	; 64
     700:	32 e4       	ldi	r19, 0x42	; 66
     702:	4f e0       	ldi	r20, 0x0F	; 15
     704:	50 e0       	ldi	r21, 0x00	; 0
     706:	0e 94 d4 0d 	call	0x1ba8	; 0x1ba8 <__mulshisi3>
     70a:	24 e2       	ldi	r18, 0x24	; 36
     70c:	34 ef       	ldi	r19, 0xF4	; 244
     70e:	40 e0       	ldi	r20, 0x00	; 0
     710:	50 e0       	ldi	r21, 0x00	; 0
     712:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__udivmodsi4>
     716:	30 93 a7 02 	sts	0x02A7, r19	; 0x8002a7 <deltat_1+0x1>
     71a:	20 93 a6 02 	sts	0x02A6, r18	; 0x8002a6 <deltat_1>
	velocita_1 = 1000000000UL/(K_ENCODER1 * deltat_1); //giri al secondo
     71e:	a0 91 a6 02 	lds	r26, 0x02A6	; 0x8002a6 <deltat_1>
     722:	b0 91 a7 02 	lds	r27, 0x02A7	; 0x8002a7 <deltat_1+0x1>
     726:	2c e6       	ldi	r18, 0x6C	; 108
     728:	32 e0       	ldi	r19, 0x02	; 2
     72a:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__usmulhisi3>
     72e:	9b 01       	movw	r18, r22
     730:	ac 01       	movw	r20, r24
     732:	60 e0       	ldi	r22, 0x00	; 0
     734:	7a ec       	ldi	r23, 0xCA	; 202
     736:	8a e9       	ldi	r24, 0x9A	; 154
     738:	9b e3       	ldi	r25, 0x3B	; 59
     73a:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__udivmodsi4>
     73e:	30 93 b5 02 	sts	0x02B5, r19	; 0x8002b5 <velocita_1+0x1>
     742:	20 93 b4 02 	sts	0x02B4, r18	; 0x8002b4 <velocita_1>
	t_old_1 = t_1;
     746:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <t_1>
     74a:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <t_1+0x1>
     74e:	90 93 31 02 	sts	0x0231, r25	; 0x800231 <t_old_1+0x1>
     752:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <t_old_1>
	//seg_enc_0++;
	//Serial_Send(seg_enc); Serial_Send("\n");
}
     756:	ff 91       	pop	r31
     758:	ef 91       	pop	r30
     75a:	bf 91       	pop	r27
     75c:	af 91       	pop	r26
     75e:	9f 91       	pop	r25
     760:	8f 91       	pop	r24
     762:	7f 91       	pop	r23
     764:	6f 91       	pop	r22
     766:	5f 91       	pop	r21
     768:	4f 91       	pop	r20
     76a:	3f 91       	pop	r19
     76c:	2f 91       	pop	r18
     76e:	0f 90       	pop	r0
     770:	0b be       	out	0x3b, r0	; 59
     772:	0f 90       	pop	r0
     774:	0f be       	out	0x3f, r0	; 63
     776:	0f 90       	pop	r0
     778:	1f 90       	pop	r1
     77a:	18 95       	reti

0000077c <__vector_4>:

ISR(INT3_vect){//interrupt encoder2
     77c:	1f 92       	push	r1
     77e:	0f 92       	push	r0
     780:	0f b6       	in	r0, 0x3f	; 63
     782:	0f 92       	push	r0
     784:	11 24       	eor	r1, r1
     786:	0b b6       	in	r0, 0x3b	; 59
     788:	0f 92       	push	r0
     78a:	2f 93       	push	r18
     78c:	3f 93       	push	r19
     78e:	4f 93       	push	r20
     790:	5f 93       	push	r21
     792:	6f 93       	push	r22
     794:	7f 93       	push	r23
     796:	8f 93       	push	r24
     798:	9f 93       	push	r25
     79a:	af 93       	push	r26
     79c:	bf 93       	push	r27
     79e:	ef 93       	push	r30
     7a0:	ff 93       	push	r31
	t_2 = (int32_t) TCNT5;
     7a2:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
     7a6:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     7aa:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <t_2+0x1>
     7ae:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <t_2>
	deltat_2 = (t_2-t_old_2) * KTIMER_256;
     7b2:	a0 91 2e 02 	lds	r26, 0x022E	; 0x80022e <t_2>
     7b6:	b0 91 2f 02 	lds	r27, 0x022F	; 0x80022f <t_2+0x1>
     7ba:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <t_old_2>
     7be:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <t_old_2+0x1>
     7c2:	a8 1b       	sub	r26, r24
     7c4:	b9 0b       	sbc	r27, r25
     7c6:	20 e4       	ldi	r18, 0x40	; 64
     7c8:	32 e4       	ldi	r19, 0x42	; 66
     7ca:	4f e0       	ldi	r20, 0x0F	; 15
     7cc:	50 e0       	ldi	r21, 0x00	; 0
     7ce:	0e 94 d4 0d 	call	0x1ba8	; 0x1ba8 <__mulshisi3>
     7d2:	24 e2       	ldi	r18, 0x24	; 36
     7d4:	34 ef       	ldi	r19, 0xF4	; 244
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__udivmodsi4>
     7de:	30 93 bd 02 	sts	0x02BD, r19	; 0x8002bd <deltat_2+0x1>
     7e2:	20 93 bc 02 	sts	0x02BC, r18	; 0x8002bc <deltat_2>
	velocita_2 = 1000000000UL/(K_ENCODER2 * deltat_2); //giri al secondo
     7e6:	a0 91 bc 02 	lds	r26, 0x02BC	; 0x8002bc <deltat_2>
     7ea:	b0 91 bd 02 	lds	r27, 0x02BD	; 0x8002bd <deltat_2+0x1>
     7ee:	2e ed       	ldi	r18, 0xDE	; 222
     7f0:	33 e0       	ldi	r19, 0x03	; 3
     7f2:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__usmulhisi3>
     7f6:	9b 01       	movw	r18, r22
     7f8:	ac 01       	movw	r20, r24
     7fa:	60 e0       	ldi	r22, 0x00	; 0
     7fc:	7a ec       	ldi	r23, 0xCA	; 202
     7fe:	8a e9       	ldi	r24, 0x9A	; 154
     800:	9b e3       	ldi	r25, 0x3B	; 59
     802:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__udivmodsi4>
     806:	30 93 a1 02 	sts	0x02A1, r19	; 0x8002a1 <velocita_2+0x1>
     80a:	20 93 a0 02 	sts	0x02A0, r18	; 0x8002a0 <velocita_2>
	t_old_2 = t_2;
     80e:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <t_2>
     812:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <t_2+0x1>
     816:	90 93 2d 02 	sts	0x022D, r25	; 0x80022d <t_old_2+0x1>
     81a:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <t_old_2>
}
     81e:	ff 91       	pop	r31
     820:	ef 91       	pop	r30
     822:	bf 91       	pop	r27
     824:	af 91       	pop	r26
     826:	9f 91       	pop	r25
     828:	8f 91       	pop	r24
     82a:	7f 91       	pop	r23
     82c:	6f 91       	pop	r22
     82e:	5f 91       	pop	r21
     830:	4f 91       	pop	r20
     832:	3f 91       	pop	r19
     834:	2f 91       	pop	r18
     836:	0f 90       	pop	r0
     838:	0b be       	out	0x3b, r0	; 59
     83a:	0f 90       	pop	r0
     83c:	0f be       	out	0x3f, r0	; 63
     83e:	0f 90       	pop	r0
     840:	1f 90       	pop	r1
     842:	18 95       	reti

00000844 <__vector_5>:

ISR(INT4_vect){//interrupt encoder3
     844:	1f 92       	push	r1
     846:	0f 92       	push	r0
     848:	0f b6       	in	r0, 0x3f	; 63
     84a:	0f 92       	push	r0
     84c:	11 24       	eor	r1, r1
     84e:	0b b6       	in	r0, 0x3b	; 59
     850:	0f 92       	push	r0
     852:	2f 93       	push	r18
     854:	3f 93       	push	r19
     856:	4f 93       	push	r20
     858:	5f 93       	push	r21
     85a:	6f 93       	push	r22
     85c:	7f 93       	push	r23
     85e:	8f 93       	push	r24
     860:	9f 93       	push	r25
     862:	af 93       	push	r26
     864:	bf 93       	push	r27
     866:	ef 93       	push	r30
     868:	ff 93       	push	r31
	t_3 = (int32_t) TCNT5;
     86a:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
     86e:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     872:	90 93 2b 02 	sts	0x022B, r25	; 0x80022b <t_3+0x1>
     876:	80 93 2a 02 	sts	0x022A, r24	; 0x80022a <t_3>
	deltat_3 = (t_3-t_old_3) * KTIMER_256;
     87a:	a0 91 2a 02 	lds	r26, 0x022A	; 0x80022a <t_3>
     87e:	b0 91 2b 02 	lds	r27, 0x022B	; 0x80022b <t_3+0x1>
     882:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <t_old_3>
     886:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <t_old_3+0x1>
     88a:	a8 1b       	sub	r26, r24
     88c:	b9 0b       	sbc	r27, r25
     88e:	20 e4       	ldi	r18, 0x40	; 64
     890:	32 e4       	ldi	r19, 0x42	; 66
     892:	4f e0       	ldi	r20, 0x0F	; 15
     894:	50 e0       	ldi	r21, 0x00	; 0
     896:	0e 94 d4 0d 	call	0x1ba8	; 0x1ba8 <__mulshisi3>
     89a:	24 e2       	ldi	r18, 0x24	; 36
     89c:	34 ef       	ldi	r19, 0xF4	; 244
     89e:	40 e0       	ldi	r20, 0x00	; 0
     8a0:	50 e0       	ldi	r21, 0x00	; 0
     8a2:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__udivmodsi4>
     8a6:	30 93 9d 02 	sts	0x029D, r19	; 0x80029d <deltat_3+0x1>
     8aa:	20 93 9c 02 	sts	0x029C, r18	; 0x80029c <deltat_3>
	velocita_3 = 1000000000UL/(K_ENCODER3 * deltat_3); //giri al secondo
     8ae:	a0 91 9c 02 	lds	r26, 0x029C	; 0x80029c <deltat_3>
     8b2:	b0 91 9d 02 	lds	r27, 0x029D	; 0x80029d <deltat_3+0x1>
     8b6:	2e ed       	ldi	r18, 0xDE	; 222
     8b8:	33 e0       	ldi	r19, 0x03	; 3
     8ba:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__usmulhisi3>
     8be:	9b 01       	movw	r18, r22
     8c0:	ac 01       	movw	r20, r24
     8c2:	60 e0       	ldi	r22, 0x00	; 0
     8c4:	7a ec       	ldi	r23, 0xCA	; 202
     8c6:	8a e9       	ldi	r24, 0x9A	; 154
     8c8:	9b e3       	ldi	r25, 0x3B	; 59
     8ca:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__udivmodsi4>
     8ce:	30 93 bb 02 	sts	0x02BB, r19	; 0x8002bb <velocita_3+0x1>
     8d2:	20 93 ba 02 	sts	0x02BA, r18	; 0x8002ba <velocita_3>
	t_old_3 = t_3;
     8d6:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <t_3>
     8da:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <t_3+0x1>
     8de:	90 93 29 02 	sts	0x0229, r25	; 0x800229 <t_old_3+0x1>
     8e2:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <t_old_3>
	seg_enc_0++;
     8e6:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <seg_enc_0>
     8ea:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <seg_enc_0+0x1>
     8ee:	01 96       	adiw	r24, 0x01	; 1
     8f0:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <seg_enc_0+0x1>
     8f4:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <seg_enc_0>
	/*Serial_Send(seg_enc); Serial_Send("\n");*/
}
     8f8:	ff 91       	pop	r31
     8fa:	ef 91       	pop	r30
     8fc:	bf 91       	pop	r27
     8fe:	af 91       	pop	r26
     900:	9f 91       	pop	r25
     902:	8f 91       	pop	r24
     904:	7f 91       	pop	r23
     906:	6f 91       	pop	r22
     908:	5f 91       	pop	r21
     90a:	4f 91       	pop	r20
     90c:	3f 91       	pop	r19
     90e:	2f 91       	pop	r18
     910:	0f 90       	pop	r0
     912:	0b be       	out	0x3b, r0	; 59
     914:	0f 90       	pop	r0
     916:	0f be       	out	0x3f, r0	; 63
     918:	0f 90       	pop	r0
     91a:	1f 90       	pop	r1
     91c:	18 95       	reti

0000091e <__vector_6>:

ISR(INT5_vect){//interrupt encoder4
     91e:	1f 92       	push	r1
     920:	0f 92       	push	r0
     922:	0f b6       	in	r0, 0x3f	; 63
     924:	0f 92       	push	r0
     926:	11 24       	eor	r1, r1
     928:	0b b6       	in	r0, 0x3b	; 59
     92a:	0f 92       	push	r0
     92c:	2f 93       	push	r18
     92e:	3f 93       	push	r19
     930:	4f 93       	push	r20
     932:	5f 93       	push	r21
     934:	6f 93       	push	r22
     936:	7f 93       	push	r23
     938:	8f 93       	push	r24
     93a:	9f 93       	push	r25
     93c:	af 93       	push	r26
     93e:	bf 93       	push	r27
     940:	ef 93       	push	r30
     942:	ff 93       	push	r31
	t_4 = (int32_t) TCNT5;
     944:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
     948:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     94c:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <t_4+0x1>
     950:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <t_4>
	deltat_4 = (t_4-t_old_4) * KTIMER_256;
     954:	a0 91 26 02 	lds	r26, 0x0226	; 0x800226 <t_4>
     958:	b0 91 27 02 	lds	r27, 0x0227	; 0x800227 <t_4+0x1>
     95c:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <t_old_4>
     960:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <t_old_4+0x1>
     964:	a8 1b       	sub	r26, r24
     966:	b9 0b       	sbc	r27, r25
     968:	20 e4       	ldi	r18, 0x40	; 64
     96a:	32 e4       	ldi	r19, 0x42	; 66
     96c:	4f e0       	ldi	r20, 0x0F	; 15
     96e:	50 e0       	ldi	r21, 0x00	; 0
     970:	0e 94 d4 0d 	call	0x1ba8	; 0x1ba8 <__mulshisi3>
     974:	24 e2       	ldi	r18, 0x24	; 36
     976:	34 ef       	ldi	r19, 0xF4	; 244
     978:	40 e0       	ldi	r20, 0x00	; 0
     97a:	50 e0       	ldi	r21, 0x00	; 0
     97c:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__udivmodsi4>
     980:	30 93 b7 02 	sts	0x02B7, r19	; 0x8002b7 <deltat_4+0x1>
     984:	20 93 b6 02 	sts	0x02B6, r18	; 0x8002b6 <deltat_4>
	velocita_4 = 1000000000UL/(K_ENCODER4 * deltat_4); //giri al secondo
     988:	a0 91 b6 02 	lds	r26, 0x02B6	; 0x8002b6 <deltat_4>
     98c:	b0 91 b7 02 	lds	r27, 0x02B7	; 0x8002b7 <deltat_4+0x1>
     990:	2e ed       	ldi	r18, 0xDE	; 222
     992:	33 e0       	ldi	r19, 0x03	; 3
     994:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <__usmulhisi3>
     998:	9b 01       	movw	r18, r22
     99a:	ac 01       	movw	r20, r24
     99c:	60 e0       	ldi	r22, 0x00	; 0
     99e:	7a ec       	ldi	r23, 0xCA	; 202
     9a0:	8a e9       	ldi	r24, 0x9A	; 154
     9a2:	9b e3       	ldi	r25, 0x3B	; 59
     9a4:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__udivmodsi4>
     9a8:	30 93 b1 02 	sts	0x02B1, r19	; 0x8002b1 <velocita_4+0x1>
     9ac:	20 93 b0 02 	sts	0x02B0, r18	; 0x8002b0 <velocita_4>
	t_old_4 = t_4;
     9b0:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <t_4>
     9b4:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <t_4+0x1>
     9b8:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <t_old_4+0x1>
     9bc:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <t_old_4>
	/*seg_enc_0++;
	Serial_Send(seg_enc); Serial_Send("\n");*/
}
     9c0:	ff 91       	pop	r31
     9c2:	ef 91       	pop	r30
     9c4:	bf 91       	pop	r27
     9c6:	af 91       	pop	r26
     9c8:	9f 91       	pop	r25
     9ca:	8f 91       	pop	r24
     9cc:	7f 91       	pop	r23
     9ce:	6f 91       	pop	r22
     9d0:	5f 91       	pop	r21
     9d2:	4f 91       	pop	r20
     9d4:	3f 91       	pop	r19
     9d6:	2f 91       	pop	r18
     9d8:	0f 90       	pop	r0
     9da:	0b be       	out	0x3b, r0	; 59
     9dc:	0f 90       	pop	r0
     9de:	0f be       	out	0x3f, r0	; 63
     9e0:	0f 90       	pop	r0
     9e2:	1f 90       	pop	r1
     9e4:	18 95       	reti

000009e6 <Init_PWM123>:

void Init_PWM123(){//Motore 1/2/3
	TCCR1A = (1<<COM1A1) | (1<<COM1B1) | (1<<COM1C1) | (1<<WGM11) | (1<<WGM10);
     9e6:	8b ea       	ldi	r24, 0xAB	; 171
     9e8:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
	DDRB = (1<<PB5) | (1<<PB6) | (1<<PB7); //| (1<<PB4);//Uscita PWM motori e Servo
     9ec:	80 ee       	ldi	r24, 0xE0	; 224
     9ee:	84 b9       	out	0x04, r24	; 4
     9f0:	08 95       	ret

000009f2 <Init_PWM4>:
}

void Init_PWM4(){//Motore 4
	TCCR3A = (1<<COM3A1) | (1<<WGM31) | (1<<WGM30);
     9f2:	83 e8       	ldi	r24, 0x83	; 131
     9f4:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
	DDRE = (1<<PE3);
     9f8:	88 e0       	ldi	r24, 0x08	; 8
     9fa:	8d b9       	out	0x0d, r24	; 13
     9fc:	08 95       	ret

000009fe <Start_PWM123>:
}

void Start_PWM123(){//Motore 1/2/3
	TCCR1B = (1<<WGM12) | (1<<CS12);
     9fe:	8c e0       	ldi	r24, 0x0C	; 12
     a00:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7c0081>
     a04:	08 95       	ret

00000a06 <Start_PWM4>:
}

void Start_PWM4(){//Motore 4
	TCCR3B = (1<<WGM32) | (1<<CS32);
     a06:	8c e0       	ldi	r24, 0x0C	; 12
     a08:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7c0091>
     a0c:	08 95       	ret

00000a0e <Set_PWM1>:
}

void Set_PWM1(int duty_1){//Motore 1
	OCR1A = duty_1;
     a0e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
     a12:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
     a16:	08 95       	ret

00000a18 <Set_PWM2>:
}

void Set_PWM2(int duty_2){//Motore 2
	OCR1B = duty_2;
     a18:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
     a1c:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
     a20:	08 95       	ret

00000a22 <Set_PWM3>:
}

void Set_PWM3(int duty_3){//Motore 3
	OCR1C = duty_3;
     a22:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <__TEXT_REGION_LENGTH__+0x7c008d>
     a26:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <__TEXT_REGION_LENGTH__+0x7c008c>
     a2a:	08 95       	ret

00000a2c <Set_PWM4>:
}

void Set_PWM4(int duty_4){//Motore 4
	OCR3A = duty_4;
     a2c:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7c0099>
     a30:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7c0098>
     a34:	08 95       	ret

00000a36 <PID1>:
}

void PID1(){//pid motore 1
     a36:	cf 92       	push	r12
     a38:	df 92       	push	r13
     a3a:	ef 92       	push	r14
     a3c:	ff 92       	push	r15
	e_1 = (double) (SET_POINT_VELOCITA - velocita_1);
     a3e:	c0 90 01 02 	lds	r12, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
     a42:	d0 90 02 02 	lds	r13, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
     a46:	e0 90 03 02 	lds	r14, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
     a4a:	f0 90 04 02 	lds	r15, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
     a4e:	60 91 b4 02 	lds	r22, 0x02B4	; 0x8002b4 <velocita_1>
     a52:	70 91 b5 02 	lds	r23, 0x02B5	; 0x8002b5 <velocita_1+0x1>
     a56:	07 2e       	mov	r0, r23
     a58:	00 0c       	add	r0, r0
     a5a:	88 0b       	sbc	r24, r24
     a5c:	99 0b       	sbc	r25, r25
     a5e:	5d d7       	rcall	.+3770   	; 0x191a <__floatsisf>
     a60:	9b 01       	movw	r18, r22
     a62:	ac 01       	movw	r20, r24
     a64:	c7 01       	movw	r24, r14
     a66:	b6 01       	movw	r22, r12
     a68:	bc d6       	rcall	.+3448   	; 0x17e2 <__subsf3>
     a6a:	60 93 90 02 	sts	0x0290, r22	; 0x800290 <e_1>
     a6e:	70 93 91 02 	sts	0x0291, r23	; 0x800291 <e_1+0x1>
     a72:	80 93 92 02 	sts	0x0292, r24	; 0x800292 <e_1+0x2>
     a76:	90 93 93 02 	sts	0x0293, r25	; 0x800293 <e_1+0x3>
	p_1 = e_1*KP;
     a7a:	60 91 90 02 	lds	r22, 0x0290	; 0x800290 <e_1>
     a7e:	70 91 91 02 	lds	r23, 0x0291	; 0x800291 <e_1+0x1>
     a82:	80 91 92 02 	lds	r24, 0x0292	; 0x800292 <e_1+0x2>
     a86:	90 91 93 02 	lds	r25, 0x0293	; 0x800293 <e_1+0x3>
     a8a:	21 e7       	ldi	r18, 0x71	; 113
     a8c:	3d e3       	ldi	r19, 0x3D	; 61
     a8e:	42 e8       	ldi	r20, 0x82	; 130
     a90:	50 e4       	ldi	r21, 0x40	; 64
     a92:	f7 d7       	rcall	.+4078   	; 0x1a82 <__mulsf3>
     a94:	60 93 8c 02 	sts	0x028C, r22	; 0x80028c <p_1>
     a98:	70 93 8d 02 	sts	0x028D, r23	; 0x80028d <p_1+0x1>
     a9c:	80 93 8e 02 	sts	0x028E, r24	; 0x80028e <p_1+0x2>
     aa0:	90 93 8f 02 	sts	0x028F, r25	; 0x80028f <p_1+0x3>
	i_1= i_old_1 + (KI*e_1);
     aa4:	60 91 90 02 	lds	r22, 0x0290	; 0x800290 <e_1>
     aa8:	70 91 91 02 	lds	r23, 0x0291	; 0x800291 <e_1+0x1>
     aac:	80 91 92 02 	lds	r24, 0x0292	; 0x800292 <e_1+0x2>
     ab0:	90 91 93 02 	lds	r25, 0x0293	; 0x800293 <e_1+0x3>
     ab4:	2f e8       	ldi	r18, 0x8F	; 143
     ab6:	32 ec       	ldi	r19, 0xC2	; 194
     ab8:	45 ef       	ldi	r20, 0xF5	; 245
     aba:	5d e3       	ldi	r21, 0x3D	; 61
     abc:	e2 d7       	rcall	.+4036   	; 0x1a82 <__mulsf3>
     abe:	20 91 80 02 	lds	r18, 0x0280	; 0x800280 <i_old_1>
     ac2:	30 91 81 02 	lds	r19, 0x0281	; 0x800281 <i_old_1+0x1>
     ac6:	40 91 82 02 	lds	r20, 0x0282	; 0x800282 <i_old_1+0x2>
     aca:	50 91 83 02 	lds	r21, 0x0283	; 0x800283 <i_old_1+0x3>
     ace:	8a d6       	rcall	.+3348   	; 0x17e4 <__addsf3>
     ad0:	60 93 88 02 	sts	0x0288, r22	; 0x800288 <i_1>
     ad4:	70 93 89 02 	sts	0x0289, r23	; 0x800289 <i_1+0x1>
     ad8:	80 93 8a 02 	sts	0x028A, r24	; 0x80028a <i_1+0x2>
     adc:	90 93 8b 02 	sts	0x028B, r25	; 0x80028b <i_1+0x3>
	d_1 = (e_1 - e_old_1) * KD;
     ae0:	60 91 90 02 	lds	r22, 0x0290	; 0x800290 <e_1>
     ae4:	70 91 91 02 	lds	r23, 0x0291	; 0x800291 <e_1+0x1>
     ae8:	80 91 92 02 	lds	r24, 0x0292	; 0x800292 <e_1+0x2>
     aec:	90 91 93 02 	lds	r25, 0x0293	; 0x800293 <e_1+0x3>
     af0:	20 91 ac 02 	lds	r18, 0x02AC	; 0x8002ac <e_old_1>
     af4:	30 91 ad 02 	lds	r19, 0x02AD	; 0x8002ad <e_old_1+0x1>
     af8:	40 91 ae 02 	lds	r20, 0x02AE	; 0x8002ae <e_old_1+0x2>
     afc:	50 91 af 02 	lds	r21, 0x02AF	; 0x8002af <e_old_1+0x3>
     b00:	70 d6       	rcall	.+3296   	; 0x17e2 <__subsf3>
     b02:	23 ee       	ldi	r18, 0xE3	; 227
     b04:	35 ea       	ldi	r19, 0xA5	; 165
     b06:	4b e9       	ldi	r20, 0x9B	; 155
     b08:	5c e3       	ldi	r21, 0x3C	; 60
     b0a:	bb d7       	rcall	.+3958   	; 0x1a82 <__mulsf3>
     b0c:	60 93 84 02 	sts	0x0284, r22	; 0x800284 <d_1>
     b10:	70 93 85 02 	sts	0x0285, r23	; 0x800285 <d_1+0x1>
     b14:	80 93 86 02 	sts	0x0286, r24	; 0x800286 <d_1+0x2>
     b18:	90 93 87 02 	sts	0x0287, r25	; 0x800287 <d_1+0x3>
	if(i_1>I_MAX){
     b1c:	60 91 88 02 	lds	r22, 0x0288	; 0x800288 <i_1>
     b20:	70 91 89 02 	lds	r23, 0x0289	; 0x800289 <i_1+0x1>
     b24:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <i_1+0x2>
     b28:	90 91 8b 02 	lds	r25, 0x028B	; 0x80028b <i_1+0x3>
     b2c:	20 e0       	ldi	r18, 0x00	; 0
     b2e:	30 ec       	ldi	r19, 0xC0	; 192
     b30:	4f e7       	ldi	r20, 0x7F	; 127
     b32:	54 e4       	ldi	r21, 0x44	; 68
     b34:	a2 d7       	rcall	.+3908   	; 0x1a7a <__gesf2>
     b36:	18 16       	cp	r1, r24
     b38:	64 f4       	brge	.+24     	; 0xb52 <PID1+0x11c>
		i_1 = I_MAX;
     b3a:	80 e0       	ldi	r24, 0x00	; 0
     b3c:	90 ec       	ldi	r25, 0xC0	; 192
     b3e:	af e7       	ldi	r26, 0x7F	; 127
     b40:	b4 e4       	ldi	r27, 0x44	; 68
     b42:	80 93 88 02 	sts	0x0288, r24	; 0x800288 <i_1>
     b46:	90 93 89 02 	sts	0x0289, r25	; 0x800289 <i_1+0x1>
     b4a:	a0 93 8a 02 	sts	0x028A, r26	; 0x80028a <i_1+0x2>
     b4e:	b0 93 8b 02 	sts	0x028B, r27	; 0x80028b <i_1+0x3>
	}
	if(i_1<I_MIN){
     b52:	60 91 88 02 	lds	r22, 0x0288	; 0x800288 <i_1>
     b56:	70 91 89 02 	lds	r23, 0x0289	; 0x800289 <i_1+0x1>
     b5a:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <i_1+0x2>
     b5e:	90 91 8b 02 	lds	r25, 0x028B	; 0x80028b <i_1+0x3>
     b62:	20 e0       	ldi	r18, 0x00	; 0
     b64:	30 e0       	ldi	r19, 0x00	; 0
     b66:	a9 01       	movw	r20, r18
     b68:	a1 d6       	rcall	.+3394   	; 0x18ac <__cmpsf2>
     b6a:	88 23       	and	r24, r24
     b6c:	44 f4       	brge	.+16     	; 0xb7e <PID1+0x148>
		i_1=I_MIN;
     b6e:	10 92 88 02 	sts	0x0288, r1	; 0x800288 <i_1>
     b72:	10 92 89 02 	sts	0x0289, r1	; 0x800289 <i_1+0x1>
     b76:	10 92 8a 02 	sts	0x028A, r1	; 0x80028a <i_1+0x2>
     b7a:	10 92 8b 02 	sts	0x028B, r1	; 0x80028b <i_1+0x3>
	}
	i_old_1 = i_1;
     b7e:	80 91 88 02 	lds	r24, 0x0288	; 0x800288 <i_1>
     b82:	90 91 89 02 	lds	r25, 0x0289	; 0x800289 <i_1+0x1>
     b86:	a0 91 8a 02 	lds	r26, 0x028A	; 0x80028a <i_1+0x2>
     b8a:	b0 91 8b 02 	lds	r27, 0x028B	; 0x80028b <i_1+0x3>
     b8e:	80 93 80 02 	sts	0x0280, r24	; 0x800280 <i_old_1>
     b92:	90 93 81 02 	sts	0x0281, r25	; 0x800281 <i_old_1+0x1>
     b96:	a0 93 82 02 	sts	0x0282, r26	; 0x800282 <i_old_1+0x2>
     b9a:	b0 93 83 02 	sts	0x0283, r27	; 0x800283 <i_old_1+0x3>
	e_old_1 = e_1;
     b9e:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <e_1>
     ba2:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <e_1+0x1>
     ba6:	a0 91 92 02 	lds	r26, 0x0292	; 0x800292 <e_1+0x2>
     baa:	b0 91 93 02 	lds	r27, 0x0293	; 0x800293 <e_1+0x3>
     bae:	80 93 ac 02 	sts	0x02AC, r24	; 0x8002ac <e_old_1>
     bb2:	90 93 ad 02 	sts	0x02AD, r25	; 0x8002ad <e_old_1+0x1>
     bb6:	a0 93 ae 02 	sts	0x02AE, r26	; 0x8002ae <e_old_1+0x2>
     bba:	b0 93 af 02 	sts	0x02AF, r27	; 0x8002af <e_old_1+0x3>
	pid1 = p_1+i_1+d_1;
     bbe:	60 91 8c 02 	lds	r22, 0x028C	; 0x80028c <p_1>
     bc2:	70 91 8d 02 	lds	r23, 0x028D	; 0x80028d <p_1+0x1>
     bc6:	80 91 8e 02 	lds	r24, 0x028E	; 0x80028e <p_1+0x2>
     bca:	90 91 8f 02 	lds	r25, 0x028F	; 0x80028f <p_1+0x3>
     bce:	20 91 88 02 	lds	r18, 0x0288	; 0x800288 <i_1>
     bd2:	30 91 89 02 	lds	r19, 0x0289	; 0x800289 <i_1+0x1>
     bd6:	40 91 8a 02 	lds	r20, 0x028A	; 0x80028a <i_1+0x2>
     bda:	50 91 8b 02 	lds	r21, 0x028B	; 0x80028b <i_1+0x3>
     bde:	02 d6       	rcall	.+3076   	; 0x17e4 <__addsf3>
     be0:	20 91 84 02 	lds	r18, 0x0284	; 0x800284 <d_1>
     be4:	30 91 85 02 	lds	r19, 0x0285	; 0x800285 <d_1+0x1>
     be8:	40 91 86 02 	lds	r20, 0x0286	; 0x800286 <d_1+0x2>
     bec:	50 91 87 02 	lds	r21, 0x0287	; 0x800287 <d_1+0x3>
     bf0:	f9 d5       	rcall	.+3058   	; 0x17e4 <__addsf3>
     bf2:	60 93 7c 02 	sts	0x027C, r22	; 0x80027c <pid1>
     bf6:	70 93 7d 02 	sts	0x027D, r23	; 0x80027d <pid1+0x1>
     bfa:	80 93 7e 02 	sts	0x027E, r24	; 0x80027e <pid1+0x2>
     bfe:	90 93 7f 02 	sts	0x027F, r25	; 0x80027f <pid1+0x3>
	if(pid1<0){
     c02:	60 91 7c 02 	lds	r22, 0x027C	; 0x80027c <pid1>
     c06:	70 91 7d 02 	lds	r23, 0x027D	; 0x80027d <pid1+0x1>
     c0a:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <pid1+0x2>
     c0e:	90 91 7f 02 	lds	r25, 0x027F	; 0x80027f <pid1+0x3>
     c12:	20 e0       	ldi	r18, 0x00	; 0
     c14:	30 e0       	ldi	r19, 0x00	; 0
     c16:	a9 01       	movw	r20, r18
     c18:	49 d6       	rcall	.+3218   	; 0x18ac <__cmpsf2>
     c1a:	88 23       	and	r24, r24
     c1c:	44 f4       	brge	.+16     	; 0xc2e <PID1+0x1f8>
		pid1 = 0;
     c1e:	10 92 7c 02 	sts	0x027C, r1	; 0x80027c <pid1>
     c22:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <pid1+0x1>
     c26:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <pid1+0x2>
     c2a:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <pid1+0x3>
	}
	if(pid1>1023){
     c2e:	60 91 7c 02 	lds	r22, 0x027C	; 0x80027c <pid1>
     c32:	70 91 7d 02 	lds	r23, 0x027D	; 0x80027d <pid1+0x1>
     c36:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <pid1+0x2>
     c3a:	90 91 7f 02 	lds	r25, 0x027F	; 0x80027f <pid1+0x3>
     c3e:	20 e0       	ldi	r18, 0x00	; 0
     c40:	30 ec       	ldi	r19, 0xC0	; 192
     c42:	4f e7       	ldi	r20, 0x7F	; 127
     c44:	54 e4       	ldi	r21, 0x44	; 68
     c46:	19 d7       	rcall	.+3634   	; 0x1a7a <__gesf2>
     c48:	18 16       	cp	r1, r24
     c4a:	64 f4       	brge	.+24     	; 0xc64 <PID1+0x22e>
		pid1 = 1023;
     c4c:	80 e0       	ldi	r24, 0x00	; 0
     c4e:	90 ec       	ldi	r25, 0xC0	; 192
     c50:	af e7       	ldi	r26, 0x7F	; 127
     c52:	b4 e4       	ldi	r27, 0x44	; 68
     c54:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <pid1>
     c58:	90 93 7d 02 	sts	0x027D, r25	; 0x80027d <pid1+0x1>
     c5c:	a0 93 7e 02 	sts	0x027E, r26	; 0x80027e <pid1+0x2>
     c60:	b0 93 7f 02 	sts	0x027F, r27	; 0x80027f <pid1+0x3>
	}
	Set_PWM4((int) pid1);
     c64:	60 91 7c 02 	lds	r22, 0x027C	; 0x80027c <pid1>
     c68:	70 91 7d 02 	lds	r23, 0x027D	; 0x80027d <pid1+0x1>
     c6c:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <pid1+0x2>
     c70:	90 91 7f 02 	lds	r25, 0x027F	; 0x80027f <pid1+0x3>
     c74:	1f d6       	rcall	.+3134   	; 0x18b4 <__fixsfsi>
     c76:	cb 01       	movw	r24, r22
     c78:	d9 de       	rcall	.-590    	; 0xa2c <Set_PWM4>
}
     c7a:	ff 90       	pop	r15
     c7c:	ef 90       	pop	r14
     c7e:	df 90       	pop	r13
     c80:	cf 90       	pop	r12
     c82:	08 95       	ret

00000c84 <PID2>:

void PID2(){//pid motore 2
     c84:	cf 92       	push	r12
     c86:	df 92       	push	r13
     c88:	ef 92       	push	r14
     c8a:	ff 92       	push	r15
	e_2 = (double) (SET_POINT_VELOCITA - velocita_2);
     c8c:	c0 90 01 02 	lds	r12, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
     c90:	d0 90 02 02 	lds	r13, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
     c94:	e0 90 03 02 	lds	r14, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
     c98:	f0 90 04 02 	lds	r15, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
     c9c:	60 91 a0 02 	lds	r22, 0x02A0	; 0x8002a0 <velocita_2>
     ca0:	70 91 a1 02 	lds	r23, 0x02A1	; 0x8002a1 <velocita_2+0x1>
     ca4:	07 2e       	mov	r0, r23
     ca6:	00 0c       	add	r0, r0
     ca8:	88 0b       	sbc	r24, r24
     caa:	99 0b       	sbc	r25, r25
     cac:	36 d6       	rcall	.+3180   	; 0x191a <__floatsisf>
     cae:	9b 01       	movw	r18, r22
     cb0:	ac 01       	movw	r20, r24
     cb2:	c7 01       	movw	r24, r14
     cb4:	b6 01       	movw	r22, r12
     cb6:	95 d5       	rcall	.+2858   	; 0x17e2 <__subsf3>
     cb8:	60 93 78 02 	sts	0x0278, r22	; 0x800278 <e_2>
     cbc:	70 93 79 02 	sts	0x0279, r23	; 0x800279 <e_2+0x1>
     cc0:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <e_2+0x2>
     cc4:	90 93 7b 02 	sts	0x027B, r25	; 0x80027b <e_2+0x3>
	p_2 = e_2*KP;
     cc8:	60 91 78 02 	lds	r22, 0x0278	; 0x800278 <e_2>
     ccc:	70 91 79 02 	lds	r23, 0x0279	; 0x800279 <e_2+0x1>
     cd0:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <e_2+0x2>
     cd4:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <e_2+0x3>
     cd8:	21 e7       	ldi	r18, 0x71	; 113
     cda:	3d e3       	ldi	r19, 0x3D	; 61
     cdc:	42 e8       	ldi	r20, 0x82	; 130
     cde:	50 e4       	ldi	r21, 0x40	; 64
     ce0:	d0 d6       	rcall	.+3488   	; 0x1a82 <__mulsf3>
     ce2:	60 93 74 02 	sts	0x0274, r22	; 0x800274 <p_2>
     ce6:	70 93 75 02 	sts	0x0275, r23	; 0x800275 <p_2+0x1>
     cea:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <p_2+0x2>
     cee:	90 93 77 02 	sts	0x0277, r25	; 0x800277 <p_2+0x3>
	i_2= i_old_2 + (KI*e_2);
     cf2:	60 91 78 02 	lds	r22, 0x0278	; 0x800278 <e_2>
     cf6:	70 91 79 02 	lds	r23, 0x0279	; 0x800279 <e_2+0x1>
     cfa:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <e_2+0x2>
     cfe:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <e_2+0x3>
     d02:	2f e8       	ldi	r18, 0x8F	; 143
     d04:	32 ec       	ldi	r19, 0xC2	; 194
     d06:	45 ef       	ldi	r20, 0xF5	; 245
     d08:	5d e3       	ldi	r21, 0x3D	; 61
     d0a:	bb d6       	rcall	.+3446   	; 0x1a82 <__mulsf3>
     d0c:	20 91 68 02 	lds	r18, 0x0268	; 0x800268 <i_old_2>
     d10:	30 91 69 02 	lds	r19, 0x0269	; 0x800269 <i_old_2+0x1>
     d14:	40 91 6a 02 	lds	r20, 0x026A	; 0x80026a <i_old_2+0x2>
     d18:	50 91 6b 02 	lds	r21, 0x026B	; 0x80026b <i_old_2+0x3>
     d1c:	63 d5       	rcall	.+2758   	; 0x17e4 <__addsf3>
     d1e:	60 93 70 02 	sts	0x0270, r22	; 0x800270 <i_2>
     d22:	70 93 71 02 	sts	0x0271, r23	; 0x800271 <i_2+0x1>
     d26:	80 93 72 02 	sts	0x0272, r24	; 0x800272 <i_2+0x2>
     d2a:	90 93 73 02 	sts	0x0273, r25	; 0x800273 <i_2+0x3>
	d_2 = (e_2 - e_old_2) * KD;
     d2e:	60 91 78 02 	lds	r22, 0x0278	; 0x800278 <e_2>
     d32:	70 91 79 02 	lds	r23, 0x0279	; 0x800279 <e_2+0x1>
     d36:	80 91 7a 02 	lds	r24, 0x027A	; 0x80027a <e_2+0x2>
     d3a:	90 91 7b 02 	lds	r25, 0x027B	; 0x80027b <e_2+0x3>
     d3e:	20 91 98 02 	lds	r18, 0x0298	; 0x800298 <e_old_2>
     d42:	30 91 99 02 	lds	r19, 0x0299	; 0x800299 <e_old_2+0x1>
     d46:	40 91 9a 02 	lds	r20, 0x029A	; 0x80029a <e_old_2+0x2>
     d4a:	50 91 9b 02 	lds	r21, 0x029B	; 0x80029b <e_old_2+0x3>
     d4e:	49 d5       	rcall	.+2706   	; 0x17e2 <__subsf3>
     d50:	23 ee       	ldi	r18, 0xE3	; 227
     d52:	35 ea       	ldi	r19, 0xA5	; 165
     d54:	4b e9       	ldi	r20, 0x9B	; 155
     d56:	5c e3       	ldi	r21, 0x3C	; 60
     d58:	94 d6       	rcall	.+3368   	; 0x1a82 <__mulsf3>
     d5a:	60 93 6c 02 	sts	0x026C, r22	; 0x80026c <d_2>
     d5e:	70 93 6d 02 	sts	0x026D, r23	; 0x80026d <d_2+0x1>
     d62:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <d_2+0x2>
     d66:	90 93 6f 02 	sts	0x026F, r25	; 0x80026f <d_2+0x3>
	if(i_2>I_MAX){
     d6a:	60 91 70 02 	lds	r22, 0x0270	; 0x800270 <i_2>
     d6e:	70 91 71 02 	lds	r23, 0x0271	; 0x800271 <i_2+0x1>
     d72:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <i_2+0x2>
     d76:	90 91 73 02 	lds	r25, 0x0273	; 0x800273 <i_2+0x3>
     d7a:	20 e0       	ldi	r18, 0x00	; 0
     d7c:	30 ec       	ldi	r19, 0xC0	; 192
     d7e:	4f e7       	ldi	r20, 0x7F	; 127
     d80:	54 e4       	ldi	r21, 0x44	; 68
     d82:	7b d6       	rcall	.+3318   	; 0x1a7a <__gesf2>
     d84:	18 16       	cp	r1, r24
     d86:	64 f4       	brge	.+24     	; 0xda0 <PID2+0x11c>
		i_2 = I_MAX;
     d88:	80 e0       	ldi	r24, 0x00	; 0
     d8a:	90 ec       	ldi	r25, 0xC0	; 192
     d8c:	af e7       	ldi	r26, 0x7F	; 127
     d8e:	b4 e4       	ldi	r27, 0x44	; 68
     d90:	80 93 70 02 	sts	0x0270, r24	; 0x800270 <i_2>
     d94:	90 93 71 02 	sts	0x0271, r25	; 0x800271 <i_2+0x1>
     d98:	a0 93 72 02 	sts	0x0272, r26	; 0x800272 <i_2+0x2>
     d9c:	b0 93 73 02 	sts	0x0273, r27	; 0x800273 <i_2+0x3>
	}
	if(i_2<I_MIN){
     da0:	60 91 70 02 	lds	r22, 0x0270	; 0x800270 <i_2>
     da4:	70 91 71 02 	lds	r23, 0x0271	; 0x800271 <i_2+0x1>
     da8:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <i_2+0x2>
     dac:	90 91 73 02 	lds	r25, 0x0273	; 0x800273 <i_2+0x3>
     db0:	20 e0       	ldi	r18, 0x00	; 0
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	a9 01       	movw	r20, r18
     db6:	7a d5       	rcall	.+2804   	; 0x18ac <__cmpsf2>
     db8:	88 23       	and	r24, r24
     dba:	44 f4       	brge	.+16     	; 0xdcc <PID2+0x148>
		i_2=I_MIN;
     dbc:	10 92 70 02 	sts	0x0270, r1	; 0x800270 <i_2>
     dc0:	10 92 71 02 	sts	0x0271, r1	; 0x800271 <i_2+0x1>
     dc4:	10 92 72 02 	sts	0x0272, r1	; 0x800272 <i_2+0x2>
     dc8:	10 92 73 02 	sts	0x0273, r1	; 0x800273 <i_2+0x3>
	}
	i_old_2 = i_2;
     dcc:	80 91 70 02 	lds	r24, 0x0270	; 0x800270 <i_2>
     dd0:	90 91 71 02 	lds	r25, 0x0271	; 0x800271 <i_2+0x1>
     dd4:	a0 91 72 02 	lds	r26, 0x0272	; 0x800272 <i_2+0x2>
     dd8:	b0 91 73 02 	lds	r27, 0x0273	; 0x800273 <i_2+0x3>
     ddc:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <i_old_2>
     de0:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <i_old_2+0x1>
     de4:	a0 93 6a 02 	sts	0x026A, r26	; 0x80026a <i_old_2+0x2>
     de8:	b0 93 6b 02 	sts	0x026B, r27	; 0x80026b <i_old_2+0x3>
	e_old_2 = e_2;
     dec:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <e_2>
     df0:	90 91 79 02 	lds	r25, 0x0279	; 0x800279 <e_2+0x1>
     df4:	a0 91 7a 02 	lds	r26, 0x027A	; 0x80027a <e_2+0x2>
     df8:	b0 91 7b 02 	lds	r27, 0x027B	; 0x80027b <e_2+0x3>
     dfc:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <e_old_2>
     e00:	90 93 99 02 	sts	0x0299, r25	; 0x800299 <e_old_2+0x1>
     e04:	a0 93 9a 02 	sts	0x029A, r26	; 0x80029a <e_old_2+0x2>
     e08:	b0 93 9b 02 	sts	0x029B, r27	; 0x80029b <e_old_2+0x3>
	pid2 = p_2+i_2+d_2;
     e0c:	60 91 74 02 	lds	r22, 0x0274	; 0x800274 <p_2>
     e10:	70 91 75 02 	lds	r23, 0x0275	; 0x800275 <p_2+0x1>
     e14:	80 91 76 02 	lds	r24, 0x0276	; 0x800276 <p_2+0x2>
     e18:	90 91 77 02 	lds	r25, 0x0277	; 0x800277 <p_2+0x3>
     e1c:	20 91 70 02 	lds	r18, 0x0270	; 0x800270 <i_2>
     e20:	30 91 71 02 	lds	r19, 0x0271	; 0x800271 <i_2+0x1>
     e24:	40 91 72 02 	lds	r20, 0x0272	; 0x800272 <i_2+0x2>
     e28:	50 91 73 02 	lds	r21, 0x0273	; 0x800273 <i_2+0x3>
     e2c:	db d4       	rcall	.+2486   	; 0x17e4 <__addsf3>
     e2e:	20 91 6c 02 	lds	r18, 0x026C	; 0x80026c <d_2>
     e32:	30 91 6d 02 	lds	r19, 0x026D	; 0x80026d <d_2+0x1>
     e36:	40 91 6e 02 	lds	r20, 0x026E	; 0x80026e <d_2+0x2>
     e3a:	50 91 6f 02 	lds	r21, 0x026F	; 0x80026f <d_2+0x3>
     e3e:	d2 d4       	rcall	.+2468   	; 0x17e4 <__addsf3>
     e40:	60 93 64 02 	sts	0x0264, r22	; 0x800264 <pid2>
     e44:	70 93 65 02 	sts	0x0265, r23	; 0x800265 <pid2+0x1>
     e48:	80 93 66 02 	sts	0x0266, r24	; 0x800266 <pid2+0x2>
     e4c:	90 93 67 02 	sts	0x0267, r25	; 0x800267 <pid2+0x3>
	if(pid2<0){
     e50:	60 91 64 02 	lds	r22, 0x0264	; 0x800264 <pid2>
     e54:	70 91 65 02 	lds	r23, 0x0265	; 0x800265 <pid2+0x1>
     e58:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <pid2+0x2>
     e5c:	90 91 67 02 	lds	r25, 0x0267	; 0x800267 <pid2+0x3>
     e60:	20 e0       	ldi	r18, 0x00	; 0
     e62:	30 e0       	ldi	r19, 0x00	; 0
     e64:	a9 01       	movw	r20, r18
     e66:	22 d5       	rcall	.+2628   	; 0x18ac <__cmpsf2>
     e68:	88 23       	and	r24, r24
     e6a:	44 f4       	brge	.+16     	; 0xe7c <PID2+0x1f8>
		pid2 = 0;
     e6c:	10 92 64 02 	sts	0x0264, r1	; 0x800264 <pid2>
     e70:	10 92 65 02 	sts	0x0265, r1	; 0x800265 <pid2+0x1>
     e74:	10 92 66 02 	sts	0x0266, r1	; 0x800266 <pid2+0x2>
     e78:	10 92 67 02 	sts	0x0267, r1	; 0x800267 <pid2+0x3>
	}
	if(pid2>1023){
     e7c:	60 91 64 02 	lds	r22, 0x0264	; 0x800264 <pid2>
     e80:	70 91 65 02 	lds	r23, 0x0265	; 0x800265 <pid2+0x1>
     e84:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <pid2+0x2>
     e88:	90 91 67 02 	lds	r25, 0x0267	; 0x800267 <pid2+0x3>
     e8c:	20 e0       	ldi	r18, 0x00	; 0
     e8e:	30 ec       	ldi	r19, 0xC0	; 192
     e90:	4f e7       	ldi	r20, 0x7F	; 127
     e92:	54 e4       	ldi	r21, 0x44	; 68
     e94:	f2 d5       	rcall	.+3044   	; 0x1a7a <__gesf2>
     e96:	18 16       	cp	r1, r24
     e98:	64 f4       	brge	.+24     	; 0xeb2 <PID2+0x22e>
		pid2 = 1023;
     e9a:	80 e0       	ldi	r24, 0x00	; 0
     e9c:	90 ec       	ldi	r25, 0xC0	; 192
     e9e:	af e7       	ldi	r26, 0x7F	; 127
     ea0:	b4 e4       	ldi	r27, 0x44	; 68
     ea2:	80 93 64 02 	sts	0x0264, r24	; 0x800264 <pid2>
     ea6:	90 93 65 02 	sts	0x0265, r25	; 0x800265 <pid2+0x1>
     eaa:	a0 93 66 02 	sts	0x0266, r26	; 0x800266 <pid2+0x2>
	}
	Set_PWM2((int) pid2);
     eae:	b0 93 67 02 	sts	0x0267, r27	; 0x800267 <pid2+0x3>
     eb2:	60 91 64 02 	lds	r22, 0x0264	; 0x800264 <pid2>
     eb6:	70 91 65 02 	lds	r23, 0x0265	; 0x800265 <pid2+0x1>
     eba:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <pid2+0x2>
     ebe:	90 91 67 02 	lds	r25, 0x0267	; 0x800267 <pid2+0x3>
     ec2:	f8 d4       	rcall	.+2544   	; 0x18b4 <__fixsfsi>
     ec4:	cb 01       	movw	r24, r22
     ec6:	a8 dd       	rcall	.-1200   	; 0xa18 <Set_PWM2>
}
     ec8:	ff 90       	pop	r15
     eca:	ef 90       	pop	r14
     ecc:	df 90       	pop	r13
     ece:	cf 90       	pop	r12
     ed0:	08 95       	ret

00000ed2 <PID3>:

void PID3(){//pid motore 3
     ed2:	cf 92       	push	r12
     ed4:	df 92       	push	r13
     ed6:	ef 92       	push	r14
     ed8:	ff 92       	push	r15
	e_3= (double) (SET_POINT_VELOCITA - velocita_3);
     eda:	c0 90 01 02 	lds	r12, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
     ede:	d0 90 02 02 	lds	r13, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
     ee2:	e0 90 03 02 	lds	r14, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
     ee6:	f0 90 04 02 	lds	r15, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
     eea:	60 91 ba 02 	lds	r22, 0x02BA	; 0x8002ba <velocita_3>
     eee:	70 91 bb 02 	lds	r23, 0x02BB	; 0x8002bb <velocita_3+0x1>
     ef2:	07 2e       	mov	r0, r23
     ef4:	00 0c       	add	r0, r0
     ef6:	88 0b       	sbc	r24, r24
     ef8:	99 0b       	sbc	r25, r25
     efa:	0f d5       	rcall	.+2590   	; 0x191a <__floatsisf>
     efc:	9b 01       	movw	r18, r22
     efe:	ac 01       	movw	r20, r24
     f00:	c7 01       	movw	r24, r14
     f02:	b6 01       	movw	r22, r12
     f04:	6e d4       	rcall	.+2268   	; 0x17e2 <__subsf3>
     f06:	60 93 60 02 	sts	0x0260, r22	; 0x800260 <e_3>
     f0a:	70 93 61 02 	sts	0x0261, r23	; 0x800261 <e_3+0x1>
     f0e:	80 93 62 02 	sts	0x0262, r24	; 0x800262 <e_3+0x2>
     f12:	90 93 63 02 	sts	0x0263, r25	; 0x800263 <e_3+0x3>
	p_3 = e_3*KP;
     f16:	60 91 60 02 	lds	r22, 0x0260	; 0x800260 <e_3>
     f1a:	70 91 61 02 	lds	r23, 0x0261	; 0x800261 <e_3+0x1>
     f1e:	80 91 62 02 	lds	r24, 0x0262	; 0x800262 <e_3+0x2>
     f22:	90 91 63 02 	lds	r25, 0x0263	; 0x800263 <e_3+0x3>
     f26:	21 e7       	ldi	r18, 0x71	; 113
     f28:	3d e3       	ldi	r19, 0x3D	; 61
     f2a:	42 e8       	ldi	r20, 0x82	; 130
     f2c:	50 e4       	ldi	r21, 0x40	; 64
     f2e:	a9 d5       	rcall	.+2898   	; 0x1a82 <__mulsf3>
     f30:	60 93 5c 02 	sts	0x025C, r22	; 0x80025c <p_3>
     f34:	70 93 5d 02 	sts	0x025D, r23	; 0x80025d <p_3+0x1>
     f38:	80 93 5e 02 	sts	0x025E, r24	; 0x80025e <p_3+0x2>
     f3c:	90 93 5f 02 	sts	0x025F, r25	; 0x80025f <p_3+0x3>
	i_3= i_old_3 + (KI*e_3);
     f40:	60 91 60 02 	lds	r22, 0x0260	; 0x800260 <e_3>
     f44:	70 91 61 02 	lds	r23, 0x0261	; 0x800261 <e_3+0x1>
     f48:	80 91 62 02 	lds	r24, 0x0262	; 0x800262 <e_3+0x2>
     f4c:	90 91 63 02 	lds	r25, 0x0263	; 0x800263 <e_3+0x3>
     f50:	2f e8       	ldi	r18, 0x8F	; 143
     f52:	32 ec       	ldi	r19, 0xC2	; 194
     f54:	45 ef       	ldi	r20, 0xF5	; 245
     f56:	5d e3       	ldi	r21, 0x3D	; 61
     f58:	94 d5       	rcall	.+2856   	; 0x1a82 <__mulsf3>
     f5a:	20 91 50 02 	lds	r18, 0x0250	; 0x800250 <i_old_3>
     f5e:	30 91 51 02 	lds	r19, 0x0251	; 0x800251 <i_old_3+0x1>
     f62:	40 91 52 02 	lds	r20, 0x0252	; 0x800252 <i_old_3+0x2>
     f66:	50 91 53 02 	lds	r21, 0x0253	; 0x800253 <i_old_3+0x3>
     f6a:	3c d4       	rcall	.+2168   	; 0x17e4 <__addsf3>
     f6c:	60 93 58 02 	sts	0x0258, r22	; 0x800258 <i_3>
     f70:	70 93 59 02 	sts	0x0259, r23	; 0x800259 <i_3+0x1>
     f74:	80 93 5a 02 	sts	0x025A, r24	; 0x80025a <i_3+0x2>
     f78:	90 93 5b 02 	sts	0x025B, r25	; 0x80025b <i_3+0x3>
	d_3 = (e_3 - e_old_3) * KD;
     f7c:	60 91 60 02 	lds	r22, 0x0260	; 0x800260 <e_3>
     f80:	70 91 61 02 	lds	r23, 0x0261	; 0x800261 <e_3+0x1>
     f84:	80 91 62 02 	lds	r24, 0x0262	; 0x800262 <e_3+0x2>
     f88:	90 91 63 02 	lds	r25, 0x0263	; 0x800263 <e_3+0x3>
     f8c:	20 91 a8 02 	lds	r18, 0x02A8	; 0x8002a8 <e_old_3>
     f90:	30 91 a9 02 	lds	r19, 0x02A9	; 0x8002a9 <e_old_3+0x1>
     f94:	40 91 aa 02 	lds	r20, 0x02AA	; 0x8002aa <e_old_3+0x2>
     f98:	50 91 ab 02 	lds	r21, 0x02AB	; 0x8002ab <e_old_3+0x3>
     f9c:	22 d4       	rcall	.+2116   	; 0x17e2 <__subsf3>
     f9e:	23 ee       	ldi	r18, 0xE3	; 227
     fa0:	35 ea       	ldi	r19, 0xA5	; 165
     fa2:	4b e9       	ldi	r20, 0x9B	; 155
     fa4:	5c e3       	ldi	r21, 0x3C	; 60
     fa6:	6d d5       	rcall	.+2778   	; 0x1a82 <__mulsf3>
     fa8:	60 93 54 02 	sts	0x0254, r22	; 0x800254 <d_3>
     fac:	70 93 55 02 	sts	0x0255, r23	; 0x800255 <d_3+0x1>
     fb0:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <d_3+0x2>
     fb4:	90 93 57 02 	sts	0x0257, r25	; 0x800257 <d_3+0x3>
	if(i_3>I_MAX){
     fb8:	60 91 58 02 	lds	r22, 0x0258	; 0x800258 <i_3>
     fbc:	70 91 59 02 	lds	r23, 0x0259	; 0x800259 <i_3+0x1>
     fc0:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <i_3+0x2>
     fc4:	90 91 5b 02 	lds	r25, 0x025B	; 0x80025b <i_3+0x3>
     fc8:	20 e0       	ldi	r18, 0x00	; 0
     fca:	30 ec       	ldi	r19, 0xC0	; 192
     fcc:	4f e7       	ldi	r20, 0x7F	; 127
     fce:	54 e4       	ldi	r21, 0x44	; 68
     fd0:	54 d5       	rcall	.+2728   	; 0x1a7a <__gesf2>
     fd2:	18 16       	cp	r1, r24
     fd4:	64 f4       	brge	.+24     	; 0xfee <PID3+0x11c>
		i_3 = I_MAX;
     fd6:	80 e0       	ldi	r24, 0x00	; 0
     fd8:	90 ec       	ldi	r25, 0xC0	; 192
     fda:	af e7       	ldi	r26, 0x7F	; 127
     fdc:	b4 e4       	ldi	r27, 0x44	; 68
     fde:	80 93 58 02 	sts	0x0258, r24	; 0x800258 <i_3>
     fe2:	90 93 59 02 	sts	0x0259, r25	; 0x800259 <i_3+0x1>
     fe6:	a0 93 5a 02 	sts	0x025A, r26	; 0x80025a <i_3+0x2>
     fea:	b0 93 5b 02 	sts	0x025B, r27	; 0x80025b <i_3+0x3>
	}
	if(i_3<I_MIN){
     fee:	60 91 58 02 	lds	r22, 0x0258	; 0x800258 <i_3>
     ff2:	70 91 59 02 	lds	r23, 0x0259	; 0x800259 <i_3+0x1>
     ff6:	80 91 5a 02 	lds	r24, 0x025A	; 0x80025a <i_3+0x2>
     ffa:	90 91 5b 02 	lds	r25, 0x025B	; 0x80025b <i_3+0x3>
     ffe:	20 e0       	ldi	r18, 0x00	; 0
    1000:	30 e0       	ldi	r19, 0x00	; 0
    1002:	a9 01       	movw	r20, r18
    1004:	53 d4       	rcall	.+2214   	; 0x18ac <__cmpsf2>
    1006:	88 23       	and	r24, r24
    1008:	44 f4       	brge	.+16     	; 0x101a <__EEPROM_REGION_LENGTH__+0x1a>
		i_3=I_MIN;
    100a:	10 92 58 02 	sts	0x0258, r1	; 0x800258 <i_3>
    100e:	10 92 59 02 	sts	0x0259, r1	; 0x800259 <i_3+0x1>
    1012:	10 92 5a 02 	sts	0x025A, r1	; 0x80025a <i_3+0x2>
    1016:	10 92 5b 02 	sts	0x025B, r1	; 0x80025b <i_3+0x3>
	}
	i_old_3 = i_3;
    101a:	80 91 58 02 	lds	r24, 0x0258	; 0x800258 <i_3>
    101e:	90 91 59 02 	lds	r25, 0x0259	; 0x800259 <i_3+0x1>
    1022:	a0 91 5a 02 	lds	r26, 0x025A	; 0x80025a <i_3+0x2>
    1026:	b0 91 5b 02 	lds	r27, 0x025B	; 0x80025b <i_3+0x3>
    102a:	80 93 50 02 	sts	0x0250, r24	; 0x800250 <i_old_3>
    102e:	90 93 51 02 	sts	0x0251, r25	; 0x800251 <i_old_3+0x1>
    1032:	a0 93 52 02 	sts	0x0252, r26	; 0x800252 <i_old_3+0x2>
    1036:	b0 93 53 02 	sts	0x0253, r27	; 0x800253 <i_old_3+0x3>
	e_old_3 = e_3;
    103a:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <e_3>
    103e:	90 91 61 02 	lds	r25, 0x0261	; 0x800261 <e_3+0x1>
    1042:	a0 91 62 02 	lds	r26, 0x0262	; 0x800262 <e_3+0x2>
    1046:	b0 91 63 02 	lds	r27, 0x0263	; 0x800263 <e_3+0x3>
    104a:	80 93 a8 02 	sts	0x02A8, r24	; 0x8002a8 <e_old_3>
    104e:	90 93 a9 02 	sts	0x02A9, r25	; 0x8002a9 <e_old_3+0x1>
    1052:	a0 93 aa 02 	sts	0x02AA, r26	; 0x8002aa <e_old_3+0x2>
    1056:	b0 93 ab 02 	sts	0x02AB, r27	; 0x8002ab <e_old_3+0x3>
	pid3 = p_3+i_3+d_3;
    105a:	60 91 5c 02 	lds	r22, 0x025C	; 0x80025c <p_3>
    105e:	70 91 5d 02 	lds	r23, 0x025D	; 0x80025d <p_3+0x1>
    1062:	80 91 5e 02 	lds	r24, 0x025E	; 0x80025e <p_3+0x2>
    1066:	90 91 5f 02 	lds	r25, 0x025F	; 0x80025f <p_3+0x3>
    106a:	20 91 58 02 	lds	r18, 0x0258	; 0x800258 <i_3>
    106e:	30 91 59 02 	lds	r19, 0x0259	; 0x800259 <i_3+0x1>
    1072:	40 91 5a 02 	lds	r20, 0x025A	; 0x80025a <i_3+0x2>
    1076:	50 91 5b 02 	lds	r21, 0x025B	; 0x80025b <i_3+0x3>
    107a:	b4 d3       	rcall	.+1896   	; 0x17e4 <__addsf3>
    107c:	20 91 54 02 	lds	r18, 0x0254	; 0x800254 <d_3>
    1080:	30 91 55 02 	lds	r19, 0x0255	; 0x800255 <d_3+0x1>
    1084:	40 91 56 02 	lds	r20, 0x0256	; 0x800256 <d_3+0x2>
    1088:	50 91 57 02 	lds	r21, 0x0257	; 0x800257 <d_3+0x3>
    108c:	ab d3       	rcall	.+1878   	; 0x17e4 <__addsf3>
    108e:	60 93 4c 02 	sts	0x024C, r22	; 0x80024c <pid3>
    1092:	70 93 4d 02 	sts	0x024D, r23	; 0x80024d <pid3+0x1>
    1096:	80 93 4e 02 	sts	0x024E, r24	; 0x80024e <pid3+0x2>
    109a:	90 93 4f 02 	sts	0x024F, r25	; 0x80024f <pid3+0x3>
	if(pid3<0){
    109e:	60 91 4c 02 	lds	r22, 0x024C	; 0x80024c <pid3>
    10a2:	70 91 4d 02 	lds	r23, 0x024D	; 0x80024d <pid3+0x1>
    10a6:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <pid3+0x2>
    10aa:	90 91 4f 02 	lds	r25, 0x024F	; 0x80024f <pid3+0x3>
    10ae:	20 e0       	ldi	r18, 0x00	; 0
    10b0:	30 e0       	ldi	r19, 0x00	; 0
    10b2:	a9 01       	movw	r20, r18
    10b4:	fb d3       	rcall	.+2038   	; 0x18ac <__cmpsf2>
    10b6:	88 23       	and	r24, r24
    10b8:	44 f4       	brge	.+16     	; 0x10ca <__EEPROM_REGION_LENGTH__+0xca>
		pid3 = 0;
    10ba:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <pid3>
    10be:	10 92 4d 02 	sts	0x024D, r1	; 0x80024d <pid3+0x1>
    10c2:	10 92 4e 02 	sts	0x024E, r1	; 0x80024e <pid3+0x2>
    10c6:	10 92 4f 02 	sts	0x024F, r1	; 0x80024f <pid3+0x3>
	}
	if(pid3>1023){
    10ca:	60 91 4c 02 	lds	r22, 0x024C	; 0x80024c <pid3>
    10ce:	70 91 4d 02 	lds	r23, 0x024D	; 0x80024d <pid3+0x1>
    10d2:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <pid3+0x2>
    10d6:	90 91 4f 02 	lds	r25, 0x024F	; 0x80024f <pid3+0x3>
    10da:	20 e0       	ldi	r18, 0x00	; 0
    10dc:	30 ec       	ldi	r19, 0xC0	; 192
    10de:	4f e7       	ldi	r20, 0x7F	; 127
    10e0:	54 e4       	ldi	r21, 0x44	; 68
    10e2:	cb d4       	rcall	.+2454   	; 0x1a7a <__gesf2>
    10e4:	18 16       	cp	r1, r24
    10e6:	64 f4       	brge	.+24     	; 0x1100 <__EEPROM_REGION_LENGTH__+0x100>
		pid3 = 1023;
    10e8:	80 e0       	ldi	r24, 0x00	; 0
    10ea:	90 ec       	ldi	r25, 0xC0	; 192
    10ec:	af e7       	ldi	r26, 0x7F	; 127
    10ee:	b4 e4       	ldi	r27, 0x44	; 68
    10f0:	80 93 4c 02 	sts	0x024C, r24	; 0x80024c <pid3>
    10f4:	90 93 4d 02 	sts	0x024D, r25	; 0x80024d <pid3+0x1>
    10f8:	a0 93 4e 02 	sts	0x024E, r26	; 0x80024e <pid3+0x2>
	}
	Set_PWM1((int) pid3);
    10fc:	b0 93 4f 02 	sts	0x024F, r27	; 0x80024f <pid3+0x3>
    1100:	60 91 4c 02 	lds	r22, 0x024C	; 0x80024c <pid3>
    1104:	70 91 4d 02 	lds	r23, 0x024D	; 0x80024d <pid3+0x1>
    1108:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <pid3+0x2>
    110c:	90 91 4f 02 	lds	r25, 0x024F	; 0x80024f <pid3+0x3>
    1110:	d1 d3       	rcall	.+1954   	; 0x18b4 <__fixsfsi>
    1112:	cb 01       	movw	r24, r22
    1114:	7c dc       	rcall	.-1800   	; 0xa0e <Set_PWM1>
}
    1116:	ff 90       	pop	r15
    1118:	ef 90       	pop	r14
    111a:	df 90       	pop	r13
    111c:	cf 90       	pop	r12
    111e:	08 95       	ret

00001120 <PID4>:

void PID4(){//pid motore 4
    1120:	cf 92       	push	r12
    1122:	df 92       	push	r13
    1124:	ef 92       	push	r14
    1126:	ff 92       	push	r15
	e_4 = (double) (SET_POINT_VELOCITA - velocita_4);
    1128:	c0 90 01 02 	lds	r12, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    112c:	d0 90 02 02 	lds	r13, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1130:	e0 90 03 02 	lds	r14, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1134:	f0 90 04 02 	lds	r15, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1138:	60 91 b0 02 	lds	r22, 0x02B0	; 0x8002b0 <velocita_4>
    113c:	70 91 b1 02 	lds	r23, 0x02B1	; 0x8002b1 <velocita_4+0x1>
    1140:	07 2e       	mov	r0, r23
    1142:	00 0c       	add	r0, r0
    1144:	88 0b       	sbc	r24, r24
    1146:	99 0b       	sbc	r25, r25
    1148:	e8 d3       	rcall	.+2000   	; 0x191a <__floatsisf>
    114a:	9b 01       	movw	r18, r22
    114c:	ac 01       	movw	r20, r24
    114e:	c7 01       	movw	r24, r14
    1150:	b6 01       	movw	r22, r12
    1152:	47 d3       	rcall	.+1678   	; 0x17e2 <__subsf3>
    1154:	60 93 48 02 	sts	0x0248, r22	; 0x800248 <e_4>
    1158:	70 93 49 02 	sts	0x0249, r23	; 0x800249 <e_4+0x1>
    115c:	80 93 4a 02 	sts	0x024A, r24	; 0x80024a <e_4+0x2>
    1160:	90 93 4b 02 	sts	0x024B, r25	; 0x80024b <e_4+0x3>
	p_4 = e_4*KP;
    1164:	60 91 48 02 	lds	r22, 0x0248	; 0x800248 <e_4>
    1168:	70 91 49 02 	lds	r23, 0x0249	; 0x800249 <e_4+0x1>
    116c:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <e_4+0x2>
    1170:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <e_4+0x3>
    1174:	21 e7       	ldi	r18, 0x71	; 113
    1176:	3d e3       	ldi	r19, 0x3D	; 61
    1178:	42 e8       	ldi	r20, 0x82	; 130
    117a:	50 e4       	ldi	r21, 0x40	; 64
    117c:	82 d4       	rcall	.+2308   	; 0x1a82 <__mulsf3>
    117e:	60 93 44 02 	sts	0x0244, r22	; 0x800244 <p_4>
    1182:	70 93 45 02 	sts	0x0245, r23	; 0x800245 <p_4+0x1>
    1186:	80 93 46 02 	sts	0x0246, r24	; 0x800246 <p_4+0x2>
    118a:	90 93 47 02 	sts	0x0247, r25	; 0x800247 <p_4+0x3>
	i_4= i_old_4 + (KI*e_4);
    118e:	60 91 48 02 	lds	r22, 0x0248	; 0x800248 <e_4>
    1192:	70 91 49 02 	lds	r23, 0x0249	; 0x800249 <e_4+0x1>
    1196:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <e_4+0x2>
    119a:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <e_4+0x3>
    119e:	2f e8       	ldi	r18, 0x8F	; 143
    11a0:	32 ec       	ldi	r19, 0xC2	; 194
    11a2:	45 ef       	ldi	r20, 0xF5	; 245
    11a4:	5d e3       	ldi	r21, 0x3D	; 61
    11a6:	6d d4       	rcall	.+2266   	; 0x1a82 <__mulsf3>
    11a8:	20 91 38 02 	lds	r18, 0x0238	; 0x800238 <i_old_4>
    11ac:	30 91 39 02 	lds	r19, 0x0239	; 0x800239 <i_old_4+0x1>
    11b0:	40 91 3a 02 	lds	r20, 0x023A	; 0x80023a <i_old_4+0x2>
    11b4:	50 91 3b 02 	lds	r21, 0x023B	; 0x80023b <i_old_4+0x3>
    11b8:	15 d3       	rcall	.+1578   	; 0x17e4 <__addsf3>
    11ba:	60 93 40 02 	sts	0x0240, r22	; 0x800240 <i_4>
    11be:	70 93 41 02 	sts	0x0241, r23	; 0x800241 <i_4+0x1>
    11c2:	80 93 42 02 	sts	0x0242, r24	; 0x800242 <i_4+0x2>
    11c6:	90 93 43 02 	sts	0x0243, r25	; 0x800243 <i_4+0x3>
	d_4 = (e_4 - e_old_4) * KD;
    11ca:	60 91 48 02 	lds	r22, 0x0248	; 0x800248 <e_4>
    11ce:	70 91 49 02 	lds	r23, 0x0249	; 0x800249 <e_4+0x1>
    11d2:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <e_4+0x2>
    11d6:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <e_4+0x3>
    11da:	20 91 a2 02 	lds	r18, 0x02A2	; 0x8002a2 <e_old_4>
    11de:	30 91 a3 02 	lds	r19, 0x02A3	; 0x8002a3 <e_old_4+0x1>
    11e2:	40 91 a4 02 	lds	r20, 0x02A4	; 0x8002a4 <e_old_4+0x2>
    11e6:	50 91 a5 02 	lds	r21, 0x02A5	; 0x8002a5 <e_old_4+0x3>
    11ea:	fb d2       	rcall	.+1526   	; 0x17e2 <__subsf3>
    11ec:	23 ee       	ldi	r18, 0xE3	; 227
    11ee:	35 ea       	ldi	r19, 0xA5	; 165
    11f0:	4b e9       	ldi	r20, 0x9B	; 155
    11f2:	5c e3       	ldi	r21, 0x3C	; 60
    11f4:	46 d4       	rcall	.+2188   	; 0x1a82 <__mulsf3>
    11f6:	60 93 3c 02 	sts	0x023C, r22	; 0x80023c <d_4>
    11fa:	70 93 3d 02 	sts	0x023D, r23	; 0x80023d <d_4+0x1>
    11fe:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <d_4+0x2>
    1202:	90 93 3f 02 	sts	0x023F, r25	; 0x80023f <d_4+0x3>
	if(i_4>I_MAX){
    1206:	60 91 40 02 	lds	r22, 0x0240	; 0x800240 <i_4>
    120a:	70 91 41 02 	lds	r23, 0x0241	; 0x800241 <i_4+0x1>
    120e:	80 91 42 02 	lds	r24, 0x0242	; 0x800242 <i_4+0x2>
    1212:	90 91 43 02 	lds	r25, 0x0243	; 0x800243 <i_4+0x3>
    1216:	20 e0       	ldi	r18, 0x00	; 0
    1218:	30 ec       	ldi	r19, 0xC0	; 192
    121a:	4f e7       	ldi	r20, 0x7F	; 127
    121c:	54 e4       	ldi	r21, 0x44	; 68
    121e:	2d d4       	rcall	.+2138   	; 0x1a7a <__gesf2>
    1220:	18 16       	cp	r1, r24
    1222:	64 f4       	brge	.+24     	; 0x123c <PID4+0x11c>
		i_4 = I_MAX;
    1224:	80 e0       	ldi	r24, 0x00	; 0
    1226:	90 ec       	ldi	r25, 0xC0	; 192
    1228:	af e7       	ldi	r26, 0x7F	; 127
    122a:	b4 e4       	ldi	r27, 0x44	; 68
    122c:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <i_4>
    1230:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <i_4+0x1>
    1234:	a0 93 42 02 	sts	0x0242, r26	; 0x800242 <i_4+0x2>
    1238:	b0 93 43 02 	sts	0x0243, r27	; 0x800243 <i_4+0x3>
	}
	if(i_4<I_MIN){
    123c:	60 91 40 02 	lds	r22, 0x0240	; 0x800240 <i_4>
    1240:	70 91 41 02 	lds	r23, 0x0241	; 0x800241 <i_4+0x1>
    1244:	80 91 42 02 	lds	r24, 0x0242	; 0x800242 <i_4+0x2>
    1248:	90 91 43 02 	lds	r25, 0x0243	; 0x800243 <i_4+0x3>
    124c:	20 e0       	ldi	r18, 0x00	; 0
    124e:	30 e0       	ldi	r19, 0x00	; 0
    1250:	a9 01       	movw	r20, r18
    1252:	2c d3       	rcall	.+1624   	; 0x18ac <__cmpsf2>
    1254:	88 23       	and	r24, r24
    1256:	44 f4       	brge	.+16     	; 0x1268 <PID4+0x148>
		i_4=I_MIN;
    1258:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <i_4>
    125c:	10 92 41 02 	sts	0x0241, r1	; 0x800241 <i_4+0x1>
    1260:	10 92 42 02 	sts	0x0242, r1	; 0x800242 <i_4+0x2>
    1264:	10 92 43 02 	sts	0x0243, r1	; 0x800243 <i_4+0x3>
	}
	i_old_4 = i_4;
    1268:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <i_4>
    126c:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <i_4+0x1>
    1270:	a0 91 42 02 	lds	r26, 0x0242	; 0x800242 <i_4+0x2>
    1274:	b0 91 43 02 	lds	r27, 0x0243	; 0x800243 <i_4+0x3>
    1278:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <i_old_4>
    127c:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <i_old_4+0x1>
    1280:	a0 93 3a 02 	sts	0x023A, r26	; 0x80023a <i_old_4+0x2>
    1284:	b0 93 3b 02 	sts	0x023B, r27	; 0x80023b <i_old_4+0x3>
	e_old_4 = e_4;
    1288:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <e_4>
    128c:	90 91 49 02 	lds	r25, 0x0249	; 0x800249 <e_4+0x1>
    1290:	a0 91 4a 02 	lds	r26, 0x024A	; 0x80024a <e_4+0x2>
    1294:	b0 91 4b 02 	lds	r27, 0x024B	; 0x80024b <e_4+0x3>
    1298:	80 93 a2 02 	sts	0x02A2, r24	; 0x8002a2 <e_old_4>
    129c:	90 93 a3 02 	sts	0x02A3, r25	; 0x8002a3 <e_old_4+0x1>
    12a0:	a0 93 a4 02 	sts	0x02A4, r26	; 0x8002a4 <e_old_4+0x2>
    12a4:	b0 93 a5 02 	sts	0x02A5, r27	; 0x8002a5 <e_old_4+0x3>
	pid4 = p_4+i_4+d_4;
    12a8:	60 91 44 02 	lds	r22, 0x0244	; 0x800244 <p_4>
    12ac:	70 91 45 02 	lds	r23, 0x0245	; 0x800245 <p_4+0x1>
    12b0:	80 91 46 02 	lds	r24, 0x0246	; 0x800246 <p_4+0x2>
    12b4:	90 91 47 02 	lds	r25, 0x0247	; 0x800247 <p_4+0x3>
    12b8:	20 91 40 02 	lds	r18, 0x0240	; 0x800240 <i_4>
    12bc:	30 91 41 02 	lds	r19, 0x0241	; 0x800241 <i_4+0x1>
    12c0:	40 91 42 02 	lds	r20, 0x0242	; 0x800242 <i_4+0x2>
    12c4:	50 91 43 02 	lds	r21, 0x0243	; 0x800243 <i_4+0x3>
    12c8:	8d d2       	rcall	.+1306   	; 0x17e4 <__addsf3>
    12ca:	20 91 3c 02 	lds	r18, 0x023C	; 0x80023c <d_4>
    12ce:	30 91 3d 02 	lds	r19, 0x023D	; 0x80023d <d_4+0x1>
    12d2:	40 91 3e 02 	lds	r20, 0x023E	; 0x80023e <d_4+0x2>
    12d6:	50 91 3f 02 	lds	r21, 0x023F	; 0x80023f <d_4+0x3>
    12da:	84 d2       	rcall	.+1288   	; 0x17e4 <__addsf3>
    12dc:	60 93 34 02 	sts	0x0234, r22	; 0x800234 <pid4>
    12e0:	70 93 35 02 	sts	0x0235, r23	; 0x800235 <pid4+0x1>
    12e4:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <pid4+0x2>
    12e8:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <pid4+0x3>
	if(pid4<0){
    12ec:	60 91 34 02 	lds	r22, 0x0234	; 0x800234 <pid4>
    12f0:	70 91 35 02 	lds	r23, 0x0235	; 0x800235 <pid4+0x1>
    12f4:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <pid4+0x2>
    12f8:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <pid4+0x3>
    12fc:	20 e0       	ldi	r18, 0x00	; 0
    12fe:	30 e0       	ldi	r19, 0x00	; 0
    1300:	a9 01       	movw	r20, r18
    1302:	d4 d2       	rcall	.+1448   	; 0x18ac <__cmpsf2>
    1304:	88 23       	and	r24, r24
    1306:	44 f4       	brge	.+16     	; 0x1318 <PID4+0x1f8>
		pid4 = 0;
    1308:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <pid4>
    130c:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <pid4+0x1>
    1310:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <pid4+0x2>
    1314:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <pid4+0x3>
	}
	if(pid4>1023){
    1318:	60 91 34 02 	lds	r22, 0x0234	; 0x800234 <pid4>
    131c:	70 91 35 02 	lds	r23, 0x0235	; 0x800235 <pid4+0x1>
    1320:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <pid4+0x2>
    1324:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <pid4+0x3>
    1328:	20 e0       	ldi	r18, 0x00	; 0
    132a:	30 ec       	ldi	r19, 0xC0	; 192
    132c:	4f e7       	ldi	r20, 0x7F	; 127
    132e:	54 e4       	ldi	r21, 0x44	; 68
    1330:	a4 d3       	rcall	.+1864   	; 0x1a7a <__gesf2>
    1332:	18 16       	cp	r1, r24
    1334:	64 f4       	brge	.+24     	; 0x134e <PID4+0x22e>
		pid4 = 1023;
    1336:	80 e0       	ldi	r24, 0x00	; 0
    1338:	90 ec       	ldi	r25, 0xC0	; 192
    133a:	af e7       	ldi	r26, 0x7F	; 127
    133c:	b4 e4       	ldi	r27, 0x44	; 68
    133e:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <pid4>
    1342:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <pid4+0x1>
    1346:	a0 93 36 02 	sts	0x0236, r26	; 0x800236 <pid4+0x2>
	}
	Set_PWM3((int) pid4);
    134a:	b0 93 37 02 	sts	0x0237, r27	; 0x800237 <pid4+0x3>
    134e:	60 91 34 02 	lds	r22, 0x0234	; 0x800234 <pid4>
    1352:	70 91 35 02 	lds	r23, 0x0235	; 0x800235 <pid4+0x1>
    1356:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <pid4+0x2>
    135a:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <pid4+0x3>
    135e:	aa d2       	rcall	.+1364   	; 0x18b4 <__fixsfsi>
    1360:	cb 01       	movw	r24, r22
    1362:	5f db       	rcall	.-2370   	; 0xa22 <Set_PWM3>
}
    1364:	ff 90       	pop	r15
    1366:	ef 90       	pop	r14
    1368:	df 90       	pop	r13
    136a:	cf 90       	pop	r12
    136c:	08 95       	ret

0000136e <__vector_42>:

ISR(TIMER4_COMPA_vect){
    136e:	1f 92       	push	r1
    1370:	0f 92       	push	r0
    1372:	0f b6       	in	r0, 0x3f	; 63
    1374:	0f 92       	push	r0
    1376:	11 24       	eor	r1, r1
    1378:	0b b6       	in	r0, 0x3b	; 59
    137a:	0f 92       	push	r0
    137c:	2f 93       	push	r18
    137e:	3f 93       	push	r19
    1380:	4f 93       	push	r20
    1382:	5f 93       	push	r21
    1384:	6f 93       	push	r22
    1386:	7f 93       	push	r23
    1388:	8f 93       	push	r24
    138a:	9f 93       	push	r25
    138c:	af 93       	push	r26
    138e:	bf 93       	push	r27
    1390:	ef 93       	push	r30
    1392:	ff 93       	push	r31
	PID1();
    1394:	50 db       	rcall	.-2400   	; 0xa36 <PID1>
	PID2();
    1396:	76 dc       	rcall	.-1812   	; 0xc84 <PID2>
	PID3();
    1398:	9c dd       	rcall	.-1224   	; 0xed2 <PID3>
    139a:	c2 de       	rcall	.-636    	; 0x1120 <PID4>
	PID4();
    139c:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7c00a5>
	TCNT4 = 0;
    13a0:	10 92 a4 00 	sts	0x00A4, r1	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7c00a4>
    13a4:	ff 91       	pop	r31
    13a6:	ef 91       	pop	r30
}
    13a8:	bf 91       	pop	r27
    13aa:	af 91       	pop	r26
    13ac:	9f 91       	pop	r25
    13ae:	8f 91       	pop	r24
    13b0:	7f 91       	pop	r23
    13b2:	6f 91       	pop	r22
    13b4:	5f 91       	pop	r21
    13b6:	4f 91       	pop	r20
    13b8:	3f 91       	pop	r19
    13ba:	2f 91       	pop	r18
    13bc:	0f 90       	pop	r0
    13be:	0b be       	out	0x3b, r0	; 59
    13c0:	0f 90       	pop	r0
    13c2:	0f be       	out	0x3f, r0	; 63
    13c4:	0f 90       	pop	r0
    13c6:	1f 90       	pop	r1
    13c8:	18 95       	reti

000013ca <PWM>:
    13ca:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <__TEXT_REGION_LENGTH__+0x7c0120>

void PWM(){
	
	TCCR5A = 0;
	TCCR5B = 1<<CS52;
    13ce:	84 e0       	ldi	r24, 0x04	; 4
    13d0:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <__TEXT_REGION_LENGTH__+0x7c0121>
	
	DDRH = 1<<PH4;
    13d4:	80 e1       	ldi	r24, 0x10	; 16
    13d6:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x7c0101>
	DDRA = 0xFF;
    13da:	8f ef       	ldi	r24, 0xFF	; 255
    13dc:	81 b9       	out	0x01, r24	; 1
	DDRF = 3;
    13de:	83 e0       	ldi	r24, 0x03	; 3
    13e0:	80 bb       	out	0x10, r24	; 16
	
	Init_PWM123();
    13e2:	01 db       	rcall	.-2558   	; 0x9e6 <Init_PWM123>
	Init_PWM4();
    13e4:	06 db       	rcall	.-2548   	; 0x9f2 <Init_PWM4>
	
	Start_PWM123();
    13e6:	0b db       	rcall	.-2538   	; 0x9fe <Start_PWM123>
    13e8:	0e db       	rcall	.-2532   	; 0xa06 <Start_PWM4>
	Start_PWM4();
    13ea:	84 ef       	ldi	r24, 0xF4	; 244
	
	Set_PWM1(SET_INT_PWM);
    13ec:	91 e0       	ldi	r25, 0x01	; 1
    13ee:	0f db       	rcall	.-2530   	; 0xa0e <Set_PWM1>
    13f0:	84 ef       	ldi	r24, 0xF4	; 244
	Set_PWM2(SET_INT_PWM);
    13f2:	91 e0       	ldi	r25, 0x01	; 1
    13f4:	11 db       	rcall	.-2526   	; 0xa18 <Set_PWM2>
    13f6:	84 ef       	ldi	r24, 0xF4	; 244
	Set_PWM3(SET_INT_PWM);
    13f8:	91 e0       	ldi	r25, 0x01	; 1
    13fa:	13 db       	rcall	.-2522   	; 0xa22 <Set_PWM3>
    13fc:	84 ef       	ldi	r24, 0xF4	; 244
    13fe:	91 e0       	ldi	r25, 0x01	; 1
	Set_PWM4(SET_INT_PWM);
    1400:	15 cb       	rjmp	.-2518   	; 0xa2c <Set_PWM4>
    1402:	08 95       	ret

00001404 <PID>:
    1404:	83 e2       	ldi	r24, 0x23	; 35
    1406:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7c00a0>
}

void PID(){
	TCCR4A = (1<<COM1B1) | (1<<WGM41) | (1<<WGM40);//inizializza il servo
	TCCR4B = (1<<WGM42) | (1<<CS42);//N=256
    140a:	8c e0       	ldi	r24, 0x0C	; 12
    140c:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <__TEXT_REGION_LENGTH__+0x7c00a1>
	TIMSK4 = 1<<OCIE4A;
    1410:	82 e0       	ldi	r24, 0x02	; 2
    1412:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__TEXT_REGION_LENGTH__+0x7c0072>
	OCR4A = 125;
    1416:	8d e7       	ldi	r24, 0x7D	; 125
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	90 93 a9 00 	sts	0x00A9, r25	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
    141e:	80 93 a8 00 	sts	0x00A8, r24	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
	
	EICRA = (1<<ISC20) | (1<<ISC21) | (1<<ISC30) | (1<<ISC31);//interrupt rising edge
    1422:	80 ef       	ldi	r24, 0xF0	; 240
    1424:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7c0069>
	EICRB = (1<<ISC40) | (1<<ISC41) | (1<<ISC50) | (1<<ISC51);
    1428:	8f e0       	ldi	r24, 0x0F	; 15
    142a:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7c006a>
	EIMSK = 1<<INT2 | 1<<INT3 | 1<<INT4 |1<<INT5;//attivamento interrupt esterni
    142e:	8c e3       	ldi	r24, 0x3C	; 60
    1430:	8d bb       	out	0x1d, r24	; 29
	sei();//attivamento ogni interrupt
    1432:	78 94       	sei
    1434:	08 95       	ret

00001436 <avanti>:
}

void avanti(){
	SET_POINT_VELOCITA = 700.0;
    1436:	80 e0       	ldi	r24, 0x00	; 0
    1438:	90 e0       	ldi	r25, 0x00	; 0
    143a:	af e2       	ldi	r26, 0x2F	; 47
    143c:	b4 e4       	ldi	r27, 0x44	; 68
    143e:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <SET_POINT_VELOCITA>
    1442:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1446:	a0 93 03 02 	sts	0x0203, r26	; 0x800203 <SET_POINT_VELOCITA+0x2>
    144a:	b0 93 04 02 	sts	0x0204, r27	; 0x800204 <SET_POINT_VELOCITA+0x3>
	//PORTA = (1<<PA1) | (1<<PA2) | (1<<PA5)| (1<<PA6);//Verso motore
	
	PORTA = (1<<PA1) | (1<<PA2) | (1<<PA4)| (1<<PA6);
    144e:	86 e5       	ldi	r24, 0x56	; 86
    1450:	82 b9       	out	0x02, r24	; 2
	//PA2-PA3 Motore 4		PA2 AVANTI
	//PA6-PA7 Motore 3		PA6 AVANTI
	//PA0-PA1 Motore 2		PA1 AVANTI
	//PA4-PA5 Motore 1		PA4 AVANTI
	Set_PWM4(SET_POINT_VELOCITA);
    1452:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1456:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    145a:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    145e:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1462:	28 d2       	rcall	.+1104   	; 0x18b4 <__fixsfsi>
    1464:	cb 01       	movw	r24, r22
    1466:	e2 da       	rcall	.-2620   	; 0xa2c <Set_PWM4>
	//_delay_ms(50);
	
	Set_PWM1(SET_POINT_VELOCITA);
    1468:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    146c:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1470:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1474:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1478:	1d d2       	rcall	.+1082   	; 0x18b4 <__fixsfsi>
    147a:	cb 01       	movw	r24, r22
    147c:	c8 da       	rcall	.-2672   	; 0xa0e <Set_PWM1>
	Set_PWM2(SET_POINT_VELOCITA);
    147e:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1482:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1486:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    148a:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    148e:	12 d2       	rcall	.+1060   	; 0x18b4 <__fixsfsi>
    1490:	cb 01       	movw	r24, r22
    1492:	c2 da       	rcall	.-2684   	; 0xa18 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    1494:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1498:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    149c:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    14a0:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    14a4:	07 d2       	rcall	.+1038   	; 0x18b4 <__fixsfsi>
    14a6:	cb 01       	movw	r24, r22
    14a8:	bc ca       	rjmp	.-2696   	; 0xa22 <Set_PWM3>
    14aa:	08 95       	ret

000014ac <indietro>:
	
}

void indietro(){
	SET_POINT_VELOCITA = 500.0;
    14ac:	80 e0       	ldi	r24, 0x00	; 0
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	aa ef       	ldi	r26, 0xFA	; 250
    14b2:	b3 e4       	ldi	r27, 0x43	; 67
    14b4:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <SET_POINT_VELOCITA>
    14b8:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <SET_POINT_VELOCITA+0x1>
    14bc:	a0 93 03 02 	sts	0x0203, r26	; 0x800203 <SET_POINT_VELOCITA+0x2>
    14c0:	b0 93 04 02 	sts	0x0204, r27	; 0x800204 <SET_POINT_VELOCITA+0x3>
	PORTA = (1<<PA0) | (1<<PA3) | (1<<PA5)| (1<<PA7);//Verso motore
    14c4:	89 ea       	ldi	r24, 0xA9	; 169
    14c6:	82 b9       	out	0x02, r24	; 2
	Set_PWM1(SET_POINT_VELOCITA);
    14c8:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    14cc:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    14d0:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    14d4:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    14d8:	ed d1       	rcall	.+986    	; 0x18b4 <__fixsfsi>
    14da:	cb 01       	movw	r24, r22
    14dc:	98 da       	rcall	.-2768   	; 0xa0e <Set_PWM1>
	Set_PWM2(SET_POINT_VELOCITA);
    14de:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    14e2:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    14e6:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    14ea:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    14ee:	e2 d1       	rcall	.+964    	; 0x18b4 <__fixsfsi>
    14f0:	cb 01       	movw	r24, r22
    14f2:	92 da       	rcall	.-2780   	; 0xa18 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    14f4:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    14f8:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    14fc:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1500:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1504:	d7 d1       	rcall	.+942    	; 0x18b4 <__fixsfsi>
    1506:	cb 01       	movw	r24, r22
    1508:	8c da       	rcall	.-2792   	; 0xa22 <Set_PWM3>
	Set_PWM4(SET_POINT_VELOCITA);
    150a:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    150e:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1512:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1516:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    151a:	cc d1       	rcall	.+920    	; 0x18b4 <__fixsfsi>
    151c:	cb 01       	movw	r24, r22
    151e:	86 ca       	rjmp	.-2804   	; 0xa2c <Set_PWM4>
    1520:	08 95       	ret

00001522 <destra>:
}

void destra(){
	SET_POINT_VELOCITA = 400.0;
    1522:	80 e0       	ldi	r24, 0x00	; 0
    1524:	90 e0       	ldi	r25, 0x00	; 0
    1526:	a8 ec       	ldi	r26, 0xC8	; 200
    1528:	b3 e4       	ldi	r27, 0x43	; 67
    152a:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <SET_POINT_VELOCITA>
    152e:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1532:	a0 93 03 02 	sts	0x0203, r26	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1536:	b0 93 04 02 	sts	0x0204, r27	; 0x800204 <SET_POINT_VELOCITA+0x3>
	PORTA = (1<<PA4) | (1<<PA6) | (1<<PA3)| (1<<PA0);
    153a:	89 e5       	ldi	r24, 0x59	; 89
    153c:	82 b9       	out	0x02, r24	; 2
	Set_PWM1(SET_POINT_VELOCITA);
    153e:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1542:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1546:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    154a:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    154e:	b2 d1       	rcall	.+868    	; 0x18b4 <__fixsfsi>
    1550:	cb 01       	movw	r24, r22
    1552:	5d da       	rcall	.-2886   	; 0xa0e <Set_PWM1>
	Set_PWM2(SET_POINT_VELOCITA);
    1554:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1558:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    155c:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1560:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1564:	a7 d1       	rcall	.+846    	; 0x18b4 <__fixsfsi>
    1566:	cb 01       	movw	r24, r22
    1568:	57 da       	rcall	.-2898   	; 0xa18 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    156a:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    156e:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1572:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1576:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    157a:	9c d1       	rcall	.+824    	; 0x18b4 <__fixsfsi>
    157c:	cb 01       	movw	r24, r22
    157e:	51 da       	rcall	.-2910   	; 0xa22 <Set_PWM3>
	Set_PWM4(SET_POINT_VELOCITA);
    1580:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1584:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1588:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    158c:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1590:	91 d1       	rcall	.+802    	; 0x18b4 <__fixsfsi>
    1592:	cb 01       	movw	r24, r22
    1594:	4b ca       	rjmp	.-2922   	; 0xa2c <Set_PWM4>
    1596:	08 95       	ret

00001598 <destra_lento>:
}

void destra_lento(){
	SET_POINT_VELOCITA = 200.0;
    1598:	80 e0       	ldi	r24, 0x00	; 0
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	a8 e4       	ldi	r26, 0x48	; 72
    159e:	b3 e4       	ldi	r27, 0x43	; 67
    15a0:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <SET_POINT_VELOCITA>
    15a4:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <SET_POINT_VELOCITA+0x1>
    15a8:	a0 93 03 02 	sts	0x0203, r26	; 0x800203 <SET_POINT_VELOCITA+0x2>
    15ac:	b0 93 04 02 	sts	0x0204, r27	; 0x800204 <SET_POINT_VELOCITA+0x3>
	PORTA = (1<<PA4) | (1<<PA6) | (1<<PA3)| (1<<PA0);
    15b0:	89 e5       	ldi	r24, 0x59	; 89
    15b2:	82 b9       	out	0x02, r24	; 2
	Set_PWM1(SET_POINT_VELOCITA);
    15b4:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    15b8:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    15bc:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    15c0:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    15c4:	77 d1       	rcall	.+750    	; 0x18b4 <__fixsfsi>
    15c6:	cb 01       	movw	r24, r22
    15c8:	22 da       	rcall	.-3004   	; 0xa0e <Set_PWM1>
	Set_PWM2(SET_POINT_VELOCITA);
    15ca:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    15ce:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    15d2:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    15d6:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    15da:	6c d1       	rcall	.+728    	; 0x18b4 <__fixsfsi>
    15dc:	cb 01       	movw	r24, r22
    15de:	1c da       	rcall	.-3016   	; 0xa18 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    15e0:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    15e4:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    15e8:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    15ec:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    15f0:	61 d1       	rcall	.+706    	; 0x18b4 <__fixsfsi>
    15f2:	cb 01       	movw	r24, r22
    15f4:	16 da       	rcall	.-3028   	; 0xa22 <Set_PWM3>
	Set_PWM4(SET_POINT_VELOCITA);
    15f6:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    15fa:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    15fe:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1602:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1606:	56 d1       	rcall	.+684    	; 0x18b4 <__fixsfsi>
    1608:	cb 01       	movw	r24, r22
    160a:	10 ca       	rjmp	.-3040   	; 0xa2c <Set_PWM4>
    160c:	08 95       	ret

0000160e <sinistra>:
}

void sinistra(){
	SET_POINT_VELOCITA = 400.0;
    160e:	80 e0       	ldi	r24, 0x00	; 0
    1610:	90 e0       	ldi	r25, 0x00	; 0
    1612:	a8 ec       	ldi	r26, 0xC8	; 200
    1614:	b3 e4       	ldi	r27, 0x43	; 67
    1616:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <SET_POINT_VELOCITA>
    161a:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <SET_POINT_VELOCITA+0x1>
    161e:	a0 93 03 02 	sts	0x0203, r26	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1622:	b0 93 04 02 	sts	0x0204, r27	; 0x800204 <SET_POINT_VELOCITA+0x3>
	PORTA = (1<<PA5) | (1<<PA7) | (1<<PA2) | (1<<PA1);
    1626:	86 ea       	ldi	r24, 0xA6	; 166
    1628:	82 b9       	out	0x02, r24	; 2
	Set_PWM1(SET_POINT_VELOCITA);
    162a:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    162e:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1632:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1636:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    163a:	3c d1       	rcall	.+632    	; 0x18b4 <__fixsfsi>
    163c:	cb 01       	movw	r24, r22
    163e:	e7 d9       	rcall	.-3122   	; 0xa0e <Set_PWM1>
	Set_PWM2(SET_POINT_VELOCITA);
    1640:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1644:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1648:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    164c:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1650:	31 d1       	rcall	.+610    	; 0x18b4 <__fixsfsi>
    1652:	cb 01       	movw	r24, r22
    1654:	e1 d9       	rcall	.-3134   	; 0xa18 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    1656:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    165a:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    165e:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1662:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1666:	26 d1       	rcall	.+588    	; 0x18b4 <__fixsfsi>
    1668:	cb 01       	movw	r24, r22
    166a:	db d9       	rcall	.-3146   	; 0xa22 <Set_PWM3>
	Set_PWM4(SET_POINT_VELOCITA);
    166c:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1670:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1674:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1678:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    167c:	1b d1       	rcall	.+566    	; 0x18b4 <__fixsfsi>
    167e:	cb 01       	movw	r24, r22
    1680:	d5 c9       	rjmp	.-3158   	; 0xa2c <Set_PWM4>
    1682:	08 95       	ret

00001684 <sinistra_lento>:
}

void sinistra_lento(){
	SET_POINT_VELOCITA = 150.0;
    1684:	80 e0       	ldi	r24, 0x00	; 0
    1686:	90 e0       	ldi	r25, 0x00	; 0
    1688:	a6 e1       	ldi	r26, 0x16	; 22
    168a:	b3 e4       	ldi	r27, 0x43	; 67
    168c:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <SET_POINT_VELOCITA>
    1690:	90 93 02 02 	sts	0x0202, r25	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1694:	a0 93 03 02 	sts	0x0203, r26	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1698:	b0 93 04 02 	sts	0x0204, r27	; 0x800204 <SET_POINT_VELOCITA+0x3>
	PORTA = (1<<PA5) | (1<<PA7) | (1<<PA2) | (1<<PA1);
    169c:	86 ea       	ldi	r24, 0xA6	; 166
    169e:	82 b9       	out	0x02, r24	; 2
	Set_PWM1(SET_POINT_VELOCITA);
    16a0:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    16a4:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    16a8:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    16ac:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    16b0:	01 d1       	rcall	.+514    	; 0x18b4 <__fixsfsi>
    16b2:	cb 01       	movw	r24, r22
    16b4:	ac d9       	rcall	.-3240   	; 0xa0e <Set_PWM1>
	Set_PWM2(SET_POINT_VELOCITA);
    16b6:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    16ba:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    16be:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    16c2:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    16c6:	f6 d0       	rcall	.+492    	; 0x18b4 <__fixsfsi>
    16c8:	cb 01       	movw	r24, r22
    16ca:	a6 d9       	rcall	.-3252   	; 0xa18 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    16cc:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    16d0:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    16d4:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    16d8:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    16dc:	eb d0       	rcall	.+470    	; 0x18b4 <__fixsfsi>
    16de:	cb 01       	movw	r24, r22
    16e0:	a0 d9       	rcall	.-3264   	; 0xa22 <Set_PWM3>
	Set_PWM4(SET_POINT_VELOCITA);
    16e2:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    16e6:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    16ea:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    16ee:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    16f2:	e0 d0       	rcall	.+448    	; 0x18b4 <__fixsfsi>
    16f4:	cb 01       	movw	r24, r22
    16f6:	9a c9       	rjmp	.-3276   	; 0xa2c <Set_PWM4>
    16f8:	08 95       	ret

000016fa <stop_tutto>:
}

void stop_tutto(){
	SET_POINT_VELOCITA = 0;
    16fa:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <SET_POINT_VELOCITA>
    16fe:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1702:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1706:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <SET_POINT_VELOCITA+0x3>
	Set_PWM2(SET_POINT_VELOCITA);
    170a:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    170e:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1712:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1716:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    171a:	cc d0       	rcall	.+408    	; 0x18b4 <__fixsfsi>
    171c:	cb 01       	movw	r24, r22
    171e:	7c d9       	rcall	.-3336   	; 0xa18 <Set_PWM2>
	Set_PWM3(SET_POINT_VELOCITA);
    1720:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1724:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1728:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    172c:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1730:	c1 d0       	rcall	.+386    	; 0x18b4 <__fixsfsi>
    1732:	cb 01       	movw	r24, r22
    1734:	76 d9       	rcall	.-3348   	; 0xa22 <Set_PWM3>
	
	//_delay_ms(250);
	Set_PWM1(SET_POINT_VELOCITA);
    1736:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    173a:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    173e:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1742:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    1746:	b6 d0       	rcall	.+364    	; 0x18b4 <__fixsfsi>
    1748:	cb 01       	movw	r24, r22
    174a:	61 d9       	rcall	.-3390   	; 0xa0e <Set_PWM1>
	Set_PWM4(SET_POINT_VELOCITA);
    174c:	60 91 01 02 	lds	r22, 0x0201	; 0x800201 <SET_POINT_VELOCITA>
    1750:	70 91 02 02 	lds	r23, 0x0202	; 0x800202 <SET_POINT_VELOCITA+0x1>
    1754:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <SET_POINT_VELOCITA+0x2>
    1758:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <SET_POINT_VELOCITA+0x3>
    175c:	ab d0       	rcall	.+342    	; 0x18b4 <__fixsfsi>
    175e:	cb 01       	movw	r24, r22
    1760:	65 c9       	rjmp	.-3382   	; 0xa2c <Set_PWM4>
    1762:	08 95       	ret

00001764 <Serial_Init>:
}
unsigned char Serial_Rx( void )
{
	while ( !(UCSR0A & (1<<RXC0)) );
	return UDR0;
}
    1764:	80 91 94 02 	lds	r24, 0x0294	; 0x800294 <BAUD0>
    1768:	90 91 95 02 	lds	r25, 0x0295	; 0x800295 <BAUD0+0x1>
    176c:	a0 91 96 02 	lds	r26, 0x0296	; 0x800296 <BAUD0+0x2>
    1770:	b0 91 97 02 	lds	r27, 0x0297	; 0x800297 <BAUD0+0x3>
    1774:	89 2f       	mov	r24, r25
    1776:	9a 2f       	mov	r25, r26
    1778:	ab 2f       	mov	r26, r27
    177a:	bb 27       	eor	r27, r27
    177c:	a7 fd       	sbrc	r26, 7
    177e:	ba 95       	dec	r27
    1780:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
    1784:	80 91 94 02 	lds	r24, 0x0294	; 0x800294 <BAUD0>
    1788:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
    178c:	88 e9       	ldi	r24, 0x98	; 152
    178e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
    1792:	86 e0       	ldi	r24, 0x06	; 6
    1794:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7c00c2>
    1798:	08 95       	ret

0000179a <Serial_Tx>:
    179a:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
    179e:	95 ff       	sbrs	r25, 5
    17a0:	fc cf       	rjmp	.-8      	; 0x179a <Serial_Tx>
    17a2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
    17a6:	08 95       	ret

000017a8 <Serial_Send_String>:
	}
}


void Serial_Send_String(char *string1)
{
    17a8:	0f 93       	push	r16
    17aa:	1f 93       	push	r17
    17ac:	cf 93       	push	r28
    17ae:	df 93       	push	r29
    17b0:	8c 01       	movw	r16, r24
	int i=0;
	for(i=0;i<strlen(string1);i++)
    17b2:	c0 e0       	ldi	r28, 0x00	; 0
    17b4:	d0 e0       	ldi	r29, 0x00	; 0
    17b6:	06 c0       	rjmp	.+12     	; 0x17c4 <Serial_Send_String+0x1c>
	{
		Serial_Tx(string1[i]);
    17b8:	f8 01       	movw	r30, r16
    17ba:	ec 0f       	add	r30, r28
    17bc:	fd 1f       	adc	r31, r29
    17be:	80 81       	ld	r24, Z
    17c0:	ec df       	rcall	.-40     	; 0x179a <Serial_Tx>


void Serial_Send_String(char *string1)
{
	int i=0;
	for(i=0;i<strlen(string1);i++)
    17c2:	21 96       	adiw	r28, 0x01	; 1
    17c4:	f8 01       	movw	r30, r16
    17c6:	01 90       	ld	r0, Z+
    17c8:	00 20       	and	r0, r0
    17ca:	e9 f7       	brne	.-6      	; 0x17c6 <Serial_Send_String+0x1e>
    17cc:	31 97       	sbiw	r30, 0x01	; 1
    17ce:	e0 1b       	sub	r30, r16
    17d0:	f1 0b       	sbc	r31, r17
    17d2:	ce 17       	cp	r28, r30
    17d4:	df 07       	cpc	r29, r31
    17d6:	80 f3       	brcs	.-32     	; 0x17b8 <Serial_Send_String+0x10>
	{
		Serial_Tx(string1[i]);
	}
}
    17d8:	df 91       	pop	r29
    17da:	cf 91       	pop	r28
    17dc:	1f 91       	pop	r17
    17de:	0f 91       	pop	r16
    17e0:	08 95       	ret

000017e2 <__subsf3>:
    17e2:	50 58       	subi	r21, 0x80	; 128

000017e4 <__addsf3>:
    17e4:	bb 27       	eor	r27, r27
    17e6:	aa 27       	eor	r26, r26
    17e8:	0e d0       	rcall	.+28     	; 0x1806 <__addsf3x>
    17ea:	0d c1       	rjmp	.+538    	; 0x1a06 <__fp_round>
    17ec:	fe d0       	rcall	.+508    	; 0x19ea <__fp_pscA>
    17ee:	30 f0       	brcs	.+12     	; 0x17fc <__addsf3+0x18>
    17f0:	03 d1       	rcall	.+518    	; 0x19f8 <__fp_pscB>
    17f2:	20 f0       	brcs	.+8      	; 0x17fc <__addsf3+0x18>
    17f4:	31 f4       	brne	.+12     	; 0x1802 <__addsf3+0x1e>
    17f6:	9f 3f       	cpi	r25, 0xFF	; 255
    17f8:	11 f4       	brne	.+4      	; 0x17fe <__addsf3+0x1a>
    17fa:	1e f4       	brtc	.+6      	; 0x1802 <__addsf3+0x1e>
    17fc:	f3 c0       	rjmp	.+486    	; 0x19e4 <__fp_nan>
    17fe:	0e f4       	brtc	.+2      	; 0x1802 <__addsf3+0x1e>
    1800:	e0 95       	com	r30
    1802:	e7 fb       	bst	r30, 7
    1804:	e9 c0       	rjmp	.+466    	; 0x19d8 <__fp_inf>

00001806 <__addsf3x>:
    1806:	e9 2f       	mov	r30, r25
    1808:	0f d1       	rcall	.+542    	; 0x1a28 <__fp_split3>
    180a:	80 f3       	brcs	.-32     	; 0x17ec <__addsf3+0x8>
    180c:	ba 17       	cp	r27, r26
    180e:	62 07       	cpc	r22, r18
    1810:	73 07       	cpc	r23, r19
    1812:	84 07       	cpc	r24, r20
    1814:	95 07       	cpc	r25, r21
    1816:	18 f0       	brcs	.+6      	; 0x181e <__addsf3x+0x18>
    1818:	71 f4       	brne	.+28     	; 0x1836 <__addsf3x+0x30>
    181a:	9e f5       	brtc	.+102    	; 0x1882 <__addsf3x+0x7c>
    181c:	27 c1       	rjmp	.+590    	; 0x1a6c <__fp_zero>
    181e:	0e f4       	brtc	.+2      	; 0x1822 <__addsf3x+0x1c>
    1820:	e0 95       	com	r30
    1822:	0b 2e       	mov	r0, r27
    1824:	ba 2f       	mov	r27, r26
    1826:	a0 2d       	mov	r26, r0
    1828:	0b 01       	movw	r0, r22
    182a:	b9 01       	movw	r22, r18
    182c:	90 01       	movw	r18, r0
    182e:	0c 01       	movw	r0, r24
    1830:	ca 01       	movw	r24, r20
    1832:	a0 01       	movw	r20, r0
    1834:	11 24       	eor	r1, r1
    1836:	ff 27       	eor	r31, r31
    1838:	59 1b       	sub	r21, r25
    183a:	99 f0       	breq	.+38     	; 0x1862 <__addsf3x+0x5c>
    183c:	59 3f       	cpi	r21, 0xF9	; 249
    183e:	50 f4       	brcc	.+20     	; 0x1854 <__addsf3x+0x4e>
    1840:	50 3e       	cpi	r21, 0xE0	; 224
    1842:	68 f1       	brcs	.+90     	; 0x189e <__addsf3x+0x98>
    1844:	1a 16       	cp	r1, r26
    1846:	f0 40       	sbci	r31, 0x00	; 0
    1848:	a2 2f       	mov	r26, r18
    184a:	23 2f       	mov	r18, r19
    184c:	34 2f       	mov	r19, r20
    184e:	44 27       	eor	r20, r20
    1850:	58 5f       	subi	r21, 0xF8	; 248
    1852:	f3 cf       	rjmp	.-26     	; 0x183a <__addsf3x+0x34>
    1854:	46 95       	lsr	r20
    1856:	37 95       	ror	r19
    1858:	27 95       	ror	r18
    185a:	a7 95       	ror	r26
    185c:	f0 40       	sbci	r31, 0x00	; 0
    185e:	53 95       	inc	r21
    1860:	c9 f7       	brne	.-14     	; 0x1854 <__addsf3x+0x4e>
    1862:	7e f4       	brtc	.+30     	; 0x1882 <__addsf3x+0x7c>
    1864:	1f 16       	cp	r1, r31
    1866:	ba 0b       	sbc	r27, r26
    1868:	62 0b       	sbc	r22, r18
    186a:	73 0b       	sbc	r23, r19
    186c:	84 0b       	sbc	r24, r20
    186e:	ba f0       	brmi	.+46     	; 0x189e <__addsf3x+0x98>
    1870:	91 50       	subi	r25, 0x01	; 1
    1872:	a1 f0       	breq	.+40     	; 0x189c <__addsf3x+0x96>
    1874:	ff 0f       	add	r31, r31
    1876:	bb 1f       	adc	r27, r27
    1878:	66 1f       	adc	r22, r22
    187a:	77 1f       	adc	r23, r23
    187c:	88 1f       	adc	r24, r24
    187e:	c2 f7       	brpl	.-16     	; 0x1870 <__addsf3x+0x6a>
    1880:	0e c0       	rjmp	.+28     	; 0x189e <__addsf3x+0x98>
    1882:	ba 0f       	add	r27, r26
    1884:	62 1f       	adc	r22, r18
    1886:	73 1f       	adc	r23, r19
    1888:	84 1f       	adc	r24, r20
    188a:	48 f4       	brcc	.+18     	; 0x189e <__addsf3x+0x98>
    188c:	87 95       	ror	r24
    188e:	77 95       	ror	r23
    1890:	67 95       	ror	r22
    1892:	b7 95       	ror	r27
    1894:	f7 95       	ror	r31
    1896:	9e 3f       	cpi	r25, 0xFE	; 254
    1898:	08 f0       	brcs	.+2      	; 0x189c <__addsf3x+0x96>
    189a:	b3 cf       	rjmp	.-154    	; 0x1802 <__addsf3+0x1e>
    189c:	93 95       	inc	r25
    189e:	88 0f       	add	r24, r24
    18a0:	08 f0       	brcs	.+2      	; 0x18a4 <__addsf3x+0x9e>
    18a2:	99 27       	eor	r25, r25
    18a4:	ee 0f       	add	r30, r30
    18a6:	97 95       	ror	r25
    18a8:	87 95       	ror	r24
    18aa:	08 95       	ret

000018ac <__cmpsf2>:
    18ac:	71 d0       	rcall	.+226    	; 0x1990 <__fp_cmp>
    18ae:	08 f4       	brcc	.+2      	; 0x18b2 <__cmpsf2+0x6>
    18b0:	81 e0       	ldi	r24, 0x01	; 1
    18b2:	08 95       	ret

000018b4 <__fixsfsi>:
    18b4:	04 d0       	rcall	.+8      	; 0x18be <__fixunssfsi>
    18b6:	68 94       	set
    18b8:	b1 11       	cpse	r27, r1
    18ba:	d9 c0       	rjmp	.+434    	; 0x1a6e <__fp_szero>
    18bc:	08 95       	ret

000018be <__fixunssfsi>:
    18be:	bc d0       	rcall	.+376    	; 0x1a38 <__fp_splitA>
    18c0:	88 f0       	brcs	.+34     	; 0x18e4 <__fixunssfsi+0x26>
    18c2:	9f 57       	subi	r25, 0x7F	; 127
    18c4:	90 f0       	brcs	.+36     	; 0x18ea <__fixunssfsi+0x2c>
    18c6:	b9 2f       	mov	r27, r25
    18c8:	99 27       	eor	r25, r25
    18ca:	b7 51       	subi	r27, 0x17	; 23
    18cc:	a0 f0       	brcs	.+40     	; 0x18f6 <__fixunssfsi+0x38>
    18ce:	d1 f0       	breq	.+52     	; 0x1904 <__fixunssfsi+0x46>
    18d0:	66 0f       	add	r22, r22
    18d2:	77 1f       	adc	r23, r23
    18d4:	88 1f       	adc	r24, r24
    18d6:	99 1f       	adc	r25, r25
    18d8:	1a f0       	brmi	.+6      	; 0x18e0 <__fixunssfsi+0x22>
    18da:	ba 95       	dec	r27
    18dc:	c9 f7       	brne	.-14     	; 0x18d0 <__fixunssfsi+0x12>
    18de:	12 c0       	rjmp	.+36     	; 0x1904 <__fixunssfsi+0x46>
    18e0:	b1 30       	cpi	r27, 0x01	; 1
    18e2:	81 f0       	breq	.+32     	; 0x1904 <__fixunssfsi+0x46>
    18e4:	c3 d0       	rcall	.+390    	; 0x1a6c <__fp_zero>
    18e6:	b1 e0       	ldi	r27, 0x01	; 1
    18e8:	08 95       	ret
    18ea:	c0 c0       	rjmp	.+384    	; 0x1a6c <__fp_zero>
    18ec:	67 2f       	mov	r22, r23
    18ee:	78 2f       	mov	r23, r24
    18f0:	88 27       	eor	r24, r24
    18f2:	b8 5f       	subi	r27, 0xF8	; 248
    18f4:	39 f0       	breq	.+14     	; 0x1904 <__fixunssfsi+0x46>
    18f6:	b9 3f       	cpi	r27, 0xF9	; 249
    18f8:	cc f3       	brlt	.-14     	; 0x18ec <__fixunssfsi+0x2e>
    18fa:	86 95       	lsr	r24
    18fc:	77 95       	ror	r23
    18fe:	67 95       	ror	r22
    1900:	b3 95       	inc	r27
    1902:	d9 f7       	brne	.-10     	; 0x18fa <__fixunssfsi+0x3c>
    1904:	3e f4       	brtc	.+14     	; 0x1914 <__fixunssfsi+0x56>
    1906:	90 95       	com	r25
    1908:	80 95       	com	r24
    190a:	70 95       	com	r23
    190c:	61 95       	neg	r22
    190e:	7f 4f       	sbci	r23, 0xFF	; 255
    1910:	8f 4f       	sbci	r24, 0xFF	; 255
    1912:	9f 4f       	sbci	r25, 0xFF	; 255
    1914:	08 95       	ret

00001916 <__floatunsisf>:
    1916:	e8 94       	clt
    1918:	09 c0       	rjmp	.+18     	; 0x192c <__floatsisf+0x12>

0000191a <__floatsisf>:
    191a:	97 fb       	bst	r25, 7
    191c:	3e f4       	brtc	.+14     	; 0x192c <__floatsisf+0x12>
    191e:	90 95       	com	r25
    1920:	80 95       	com	r24
    1922:	70 95       	com	r23
    1924:	61 95       	neg	r22
    1926:	7f 4f       	sbci	r23, 0xFF	; 255
    1928:	8f 4f       	sbci	r24, 0xFF	; 255
    192a:	9f 4f       	sbci	r25, 0xFF	; 255
    192c:	99 23       	and	r25, r25
    192e:	a9 f0       	breq	.+42     	; 0x195a <__floatsisf+0x40>
    1930:	f9 2f       	mov	r31, r25
    1932:	96 e9       	ldi	r25, 0x96	; 150
    1934:	bb 27       	eor	r27, r27
    1936:	93 95       	inc	r25
    1938:	f6 95       	lsr	r31
    193a:	87 95       	ror	r24
    193c:	77 95       	ror	r23
    193e:	67 95       	ror	r22
    1940:	b7 95       	ror	r27
    1942:	f1 11       	cpse	r31, r1
    1944:	f8 cf       	rjmp	.-16     	; 0x1936 <__floatsisf+0x1c>
    1946:	fa f4       	brpl	.+62     	; 0x1986 <__floatsisf+0x6c>
    1948:	bb 0f       	add	r27, r27
    194a:	11 f4       	brne	.+4      	; 0x1950 <__floatsisf+0x36>
    194c:	60 ff       	sbrs	r22, 0
    194e:	1b c0       	rjmp	.+54     	; 0x1986 <__floatsisf+0x6c>
    1950:	6f 5f       	subi	r22, 0xFF	; 255
    1952:	7f 4f       	sbci	r23, 0xFF	; 255
    1954:	8f 4f       	sbci	r24, 0xFF	; 255
    1956:	9f 4f       	sbci	r25, 0xFF	; 255
    1958:	16 c0       	rjmp	.+44     	; 0x1986 <__floatsisf+0x6c>
    195a:	88 23       	and	r24, r24
    195c:	11 f0       	breq	.+4      	; 0x1962 <__floatsisf+0x48>
    195e:	96 e9       	ldi	r25, 0x96	; 150
    1960:	11 c0       	rjmp	.+34     	; 0x1984 <__floatsisf+0x6a>
    1962:	77 23       	and	r23, r23
    1964:	21 f0       	breq	.+8      	; 0x196e <__floatsisf+0x54>
    1966:	9e e8       	ldi	r25, 0x8E	; 142
    1968:	87 2f       	mov	r24, r23
    196a:	76 2f       	mov	r23, r22
    196c:	05 c0       	rjmp	.+10     	; 0x1978 <__floatsisf+0x5e>
    196e:	66 23       	and	r22, r22
    1970:	71 f0       	breq	.+28     	; 0x198e <__floatsisf+0x74>
    1972:	96 e8       	ldi	r25, 0x86	; 134
    1974:	86 2f       	mov	r24, r22
    1976:	70 e0       	ldi	r23, 0x00	; 0
    1978:	60 e0       	ldi	r22, 0x00	; 0
    197a:	2a f0       	brmi	.+10     	; 0x1986 <__floatsisf+0x6c>
    197c:	9a 95       	dec	r25
    197e:	66 0f       	add	r22, r22
    1980:	77 1f       	adc	r23, r23
    1982:	88 1f       	adc	r24, r24
    1984:	da f7       	brpl	.-10     	; 0x197c <__floatsisf+0x62>
    1986:	88 0f       	add	r24, r24
    1988:	96 95       	lsr	r25
    198a:	87 95       	ror	r24
    198c:	97 f9       	bld	r25, 7
    198e:	08 95       	ret

00001990 <__fp_cmp>:
    1990:	99 0f       	add	r25, r25
    1992:	00 08       	sbc	r0, r0
    1994:	55 0f       	add	r21, r21
    1996:	aa 0b       	sbc	r26, r26
    1998:	e0 e8       	ldi	r30, 0x80	; 128
    199a:	fe ef       	ldi	r31, 0xFE	; 254
    199c:	16 16       	cp	r1, r22
    199e:	17 06       	cpc	r1, r23
    19a0:	e8 07       	cpc	r30, r24
    19a2:	f9 07       	cpc	r31, r25
    19a4:	c0 f0       	brcs	.+48     	; 0x19d6 <__fp_cmp+0x46>
    19a6:	12 16       	cp	r1, r18
    19a8:	13 06       	cpc	r1, r19
    19aa:	e4 07       	cpc	r30, r20
    19ac:	f5 07       	cpc	r31, r21
    19ae:	98 f0       	brcs	.+38     	; 0x19d6 <__fp_cmp+0x46>
    19b0:	62 1b       	sub	r22, r18
    19b2:	73 0b       	sbc	r23, r19
    19b4:	84 0b       	sbc	r24, r20
    19b6:	95 0b       	sbc	r25, r21
    19b8:	39 f4       	brne	.+14     	; 0x19c8 <__fp_cmp+0x38>
    19ba:	0a 26       	eor	r0, r26
    19bc:	61 f0       	breq	.+24     	; 0x19d6 <__fp_cmp+0x46>
    19be:	23 2b       	or	r18, r19
    19c0:	24 2b       	or	r18, r20
    19c2:	25 2b       	or	r18, r21
    19c4:	21 f4       	brne	.+8      	; 0x19ce <__fp_cmp+0x3e>
    19c6:	08 95       	ret
    19c8:	0a 26       	eor	r0, r26
    19ca:	09 f4       	brne	.+2      	; 0x19ce <__fp_cmp+0x3e>
    19cc:	a1 40       	sbci	r26, 0x01	; 1
    19ce:	a6 95       	lsr	r26
    19d0:	8f ef       	ldi	r24, 0xFF	; 255
    19d2:	81 1d       	adc	r24, r1
    19d4:	81 1d       	adc	r24, r1
    19d6:	08 95       	ret

000019d8 <__fp_inf>:
    19d8:	97 f9       	bld	r25, 7
    19da:	9f 67       	ori	r25, 0x7F	; 127
    19dc:	80 e8       	ldi	r24, 0x80	; 128
    19de:	70 e0       	ldi	r23, 0x00	; 0
    19e0:	60 e0       	ldi	r22, 0x00	; 0
    19e2:	08 95       	ret

000019e4 <__fp_nan>:
    19e4:	9f ef       	ldi	r25, 0xFF	; 255
    19e6:	80 ec       	ldi	r24, 0xC0	; 192
    19e8:	08 95       	ret

000019ea <__fp_pscA>:
    19ea:	00 24       	eor	r0, r0
    19ec:	0a 94       	dec	r0
    19ee:	16 16       	cp	r1, r22
    19f0:	17 06       	cpc	r1, r23
    19f2:	18 06       	cpc	r1, r24
    19f4:	09 06       	cpc	r0, r25
    19f6:	08 95       	ret

000019f8 <__fp_pscB>:
    19f8:	00 24       	eor	r0, r0
    19fa:	0a 94       	dec	r0
    19fc:	12 16       	cp	r1, r18
    19fe:	13 06       	cpc	r1, r19
    1a00:	14 06       	cpc	r1, r20
    1a02:	05 06       	cpc	r0, r21
    1a04:	08 95       	ret

00001a06 <__fp_round>:
    1a06:	09 2e       	mov	r0, r25
    1a08:	03 94       	inc	r0
    1a0a:	00 0c       	add	r0, r0
    1a0c:	11 f4       	brne	.+4      	; 0x1a12 <__fp_round+0xc>
    1a0e:	88 23       	and	r24, r24
    1a10:	52 f0       	brmi	.+20     	; 0x1a26 <__fp_round+0x20>
    1a12:	bb 0f       	add	r27, r27
    1a14:	40 f4       	brcc	.+16     	; 0x1a26 <__fp_round+0x20>
    1a16:	bf 2b       	or	r27, r31
    1a18:	11 f4       	brne	.+4      	; 0x1a1e <__fp_round+0x18>
    1a1a:	60 ff       	sbrs	r22, 0
    1a1c:	04 c0       	rjmp	.+8      	; 0x1a26 <__fp_round+0x20>
    1a1e:	6f 5f       	subi	r22, 0xFF	; 255
    1a20:	7f 4f       	sbci	r23, 0xFF	; 255
    1a22:	8f 4f       	sbci	r24, 0xFF	; 255
    1a24:	9f 4f       	sbci	r25, 0xFF	; 255
    1a26:	08 95       	ret

00001a28 <__fp_split3>:
    1a28:	57 fd       	sbrc	r21, 7
    1a2a:	90 58       	subi	r25, 0x80	; 128
    1a2c:	44 0f       	add	r20, r20
    1a2e:	55 1f       	adc	r21, r21
    1a30:	59 f0       	breq	.+22     	; 0x1a48 <__fp_splitA+0x10>
    1a32:	5f 3f       	cpi	r21, 0xFF	; 255
    1a34:	71 f0       	breq	.+28     	; 0x1a52 <__fp_splitA+0x1a>
    1a36:	47 95       	ror	r20

00001a38 <__fp_splitA>:
    1a38:	88 0f       	add	r24, r24
    1a3a:	97 fb       	bst	r25, 7
    1a3c:	99 1f       	adc	r25, r25
    1a3e:	61 f0       	breq	.+24     	; 0x1a58 <__fp_splitA+0x20>
    1a40:	9f 3f       	cpi	r25, 0xFF	; 255
    1a42:	79 f0       	breq	.+30     	; 0x1a62 <__fp_splitA+0x2a>
    1a44:	87 95       	ror	r24
    1a46:	08 95       	ret
    1a48:	12 16       	cp	r1, r18
    1a4a:	13 06       	cpc	r1, r19
    1a4c:	14 06       	cpc	r1, r20
    1a4e:	55 1f       	adc	r21, r21
    1a50:	f2 cf       	rjmp	.-28     	; 0x1a36 <__fp_split3+0xe>
    1a52:	46 95       	lsr	r20
    1a54:	f1 df       	rcall	.-30     	; 0x1a38 <__fp_splitA>
    1a56:	08 c0       	rjmp	.+16     	; 0x1a68 <__fp_splitA+0x30>
    1a58:	16 16       	cp	r1, r22
    1a5a:	17 06       	cpc	r1, r23
    1a5c:	18 06       	cpc	r1, r24
    1a5e:	99 1f       	adc	r25, r25
    1a60:	f1 cf       	rjmp	.-30     	; 0x1a44 <__fp_splitA+0xc>
    1a62:	86 95       	lsr	r24
    1a64:	71 05       	cpc	r23, r1
    1a66:	61 05       	cpc	r22, r1
    1a68:	08 94       	sec
    1a6a:	08 95       	ret

00001a6c <__fp_zero>:
    1a6c:	e8 94       	clt

00001a6e <__fp_szero>:
    1a6e:	bb 27       	eor	r27, r27
    1a70:	66 27       	eor	r22, r22
    1a72:	77 27       	eor	r23, r23
    1a74:	cb 01       	movw	r24, r22
    1a76:	97 f9       	bld	r25, 7
    1a78:	08 95       	ret

00001a7a <__gesf2>:
    1a7a:	8a df       	rcall	.-236    	; 0x1990 <__fp_cmp>
    1a7c:	08 f4       	brcc	.+2      	; 0x1a80 <__gesf2+0x6>
    1a7e:	8f ef       	ldi	r24, 0xFF	; 255
    1a80:	08 95       	ret

00001a82 <__mulsf3>:
    1a82:	0b d0       	rcall	.+22     	; 0x1a9a <__mulsf3x>
    1a84:	c0 cf       	rjmp	.-128    	; 0x1a06 <__fp_round>
    1a86:	b1 df       	rcall	.-158    	; 0x19ea <__fp_pscA>
    1a88:	28 f0       	brcs	.+10     	; 0x1a94 <__mulsf3+0x12>
    1a8a:	b6 df       	rcall	.-148    	; 0x19f8 <__fp_pscB>
    1a8c:	18 f0       	brcs	.+6      	; 0x1a94 <__mulsf3+0x12>
    1a8e:	95 23       	and	r25, r21
    1a90:	09 f0       	breq	.+2      	; 0x1a94 <__mulsf3+0x12>
    1a92:	a2 cf       	rjmp	.-188    	; 0x19d8 <__fp_inf>
    1a94:	a7 cf       	rjmp	.-178    	; 0x19e4 <__fp_nan>
    1a96:	11 24       	eor	r1, r1
    1a98:	ea cf       	rjmp	.-44     	; 0x1a6e <__fp_szero>

00001a9a <__mulsf3x>:
    1a9a:	c6 df       	rcall	.-116    	; 0x1a28 <__fp_split3>
    1a9c:	a0 f3       	brcs	.-24     	; 0x1a86 <__mulsf3+0x4>

00001a9e <__mulsf3_pse>:
    1a9e:	95 9f       	mul	r25, r21
    1aa0:	d1 f3       	breq	.-12     	; 0x1a96 <__mulsf3+0x14>
    1aa2:	95 0f       	add	r25, r21
    1aa4:	50 e0       	ldi	r21, 0x00	; 0
    1aa6:	55 1f       	adc	r21, r21
    1aa8:	62 9f       	mul	r22, r18
    1aaa:	f0 01       	movw	r30, r0
    1aac:	72 9f       	mul	r23, r18
    1aae:	bb 27       	eor	r27, r27
    1ab0:	f0 0d       	add	r31, r0
    1ab2:	b1 1d       	adc	r27, r1
    1ab4:	63 9f       	mul	r22, r19
    1ab6:	aa 27       	eor	r26, r26
    1ab8:	f0 0d       	add	r31, r0
    1aba:	b1 1d       	adc	r27, r1
    1abc:	aa 1f       	adc	r26, r26
    1abe:	64 9f       	mul	r22, r20
    1ac0:	66 27       	eor	r22, r22
    1ac2:	b0 0d       	add	r27, r0
    1ac4:	a1 1d       	adc	r26, r1
    1ac6:	66 1f       	adc	r22, r22
    1ac8:	82 9f       	mul	r24, r18
    1aca:	22 27       	eor	r18, r18
    1acc:	b0 0d       	add	r27, r0
    1ace:	a1 1d       	adc	r26, r1
    1ad0:	62 1f       	adc	r22, r18
    1ad2:	73 9f       	mul	r23, r19
    1ad4:	b0 0d       	add	r27, r0
    1ad6:	a1 1d       	adc	r26, r1
    1ad8:	62 1f       	adc	r22, r18
    1ada:	83 9f       	mul	r24, r19
    1adc:	a0 0d       	add	r26, r0
    1ade:	61 1d       	adc	r22, r1
    1ae0:	22 1f       	adc	r18, r18
    1ae2:	74 9f       	mul	r23, r20
    1ae4:	33 27       	eor	r19, r19
    1ae6:	a0 0d       	add	r26, r0
    1ae8:	61 1d       	adc	r22, r1
    1aea:	23 1f       	adc	r18, r19
    1aec:	84 9f       	mul	r24, r20
    1aee:	60 0d       	add	r22, r0
    1af0:	21 1d       	adc	r18, r1
    1af2:	82 2f       	mov	r24, r18
    1af4:	76 2f       	mov	r23, r22
    1af6:	6a 2f       	mov	r22, r26
    1af8:	11 24       	eor	r1, r1
    1afa:	9f 57       	subi	r25, 0x7F	; 127
    1afc:	50 40       	sbci	r21, 0x00	; 0
    1afe:	8a f0       	brmi	.+34     	; 0x1b22 <__mulsf3_pse+0x84>
    1b00:	e1 f0       	breq	.+56     	; 0x1b3a <__mulsf3_pse+0x9c>
    1b02:	88 23       	and	r24, r24
    1b04:	4a f0       	brmi	.+18     	; 0x1b18 <__mulsf3_pse+0x7a>
    1b06:	ee 0f       	add	r30, r30
    1b08:	ff 1f       	adc	r31, r31
    1b0a:	bb 1f       	adc	r27, r27
    1b0c:	66 1f       	adc	r22, r22
    1b0e:	77 1f       	adc	r23, r23
    1b10:	88 1f       	adc	r24, r24
    1b12:	91 50       	subi	r25, 0x01	; 1
    1b14:	50 40       	sbci	r21, 0x00	; 0
    1b16:	a9 f7       	brne	.-22     	; 0x1b02 <__mulsf3_pse+0x64>
    1b18:	9e 3f       	cpi	r25, 0xFE	; 254
    1b1a:	51 05       	cpc	r21, r1
    1b1c:	70 f0       	brcs	.+28     	; 0x1b3a <__mulsf3_pse+0x9c>
    1b1e:	5c cf       	rjmp	.-328    	; 0x19d8 <__fp_inf>
    1b20:	a6 cf       	rjmp	.-180    	; 0x1a6e <__fp_szero>
    1b22:	5f 3f       	cpi	r21, 0xFF	; 255
    1b24:	ec f3       	brlt	.-6      	; 0x1b20 <__mulsf3_pse+0x82>
    1b26:	98 3e       	cpi	r25, 0xE8	; 232
    1b28:	dc f3       	brlt	.-10     	; 0x1b20 <__mulsf3_pse+0x82>
    1b2a:	86 95       	lsr	r24
    1b2c:	77 95       	ror	r23
    1b2e:	67 95       	ror	r22
    1b30:	b7 95       	ror	r27
    1b32:	f7 95       	ror	r31
    1b34:	e7 95       	ror	r30
    1b36:	9f 5f       	subi	r25, 0xFF	; 255
    1b38:	c1 f7       	brne	.-16     	; 0x1b2a <__mulsf3_pse+0x8c>
    1b3a:	fe 2b       	or	r31, r30
    1b3c:	88 0f       	add	r24, r24
    1b3e:	91 1d       	adc	r25, r1
    1b40:	96 95       	lsr	r25
    1b42:	87 95       	ror	r24
    1b44:	97 f9       	bld	r25, 7
    1b46:	08 95       	ret

00001b48 <__udivmodsi4>:
    1b48:	a1 e2       	ldi	r26, 0x21	; 33
    1b4a:	1a 2e       	mov	r1, r26
    1b4c:	aa 1b       	sub	r26, r26
    1b4e:	bb 1b       	sub	r27, r27
    1b50:	fd 01       	movw	r30, r26
    1b52:	0d c0       	rjmp	.+26     	; 0x1b6e <__udivmodsi4_ep>

00001b54 <__udivmodsi4_loop>:
    1b54:	aa 1f       	adc	r26, r26
    1b56:	bb 1f       	adc	r27, r27
    1b58:	ee 1f       	adc	r30, r30
    1b5a:	ff 1f       	adc	r31, r31
    1b5c:	a2 17       	cp	r26, r18
    1b5e:	b3 07       	cpc	r27, r19
    1b60:	e4 07       	cpc	r30, r20
    1b62:	f5 07       	cpc	r31, r21
    1b64:	20 f0       	brcs	.+8      	; 0x1b6e <__udivmodsi4_ep>
    1b66:	a2 1b       	sub	r26, r18
    1b68:	b3 0b       	sbc	r27, r19
    1b6a:	e4 0b       	sbc	r30, r20
    1b6c:	f5 0b       	sbc	r31, r21

00001b6e <__udivmodsi4_ep>:
    1b6e:	66 1f       	adc	r22, r22
    1b70:	77 1f       	adc	r23, r23
    1b72:	88 1f       	adc	r24, r24
    1b74:	99 1f       	adc	r25, r25
    1b76:	1a 94       	dec	r1
    1b78:	69 f7       	brne	.-38     	; 0x1b54 <__udivmodsi4_loop>
    1b7a:	60 95       	com	r22
    1b7c:	70 95       	com	r23
    1b7e:	80 95       	com	r24
    1b80:	90 95       	com	r25
    1b82:	9b 01       	movw	r18, r22
    1b84:	ac 01       	movw	r20, r24
    1b86:	bd 01       	movw	r22, r26
    1b88:	cf 01       	movw	r24, r30
    1b8a:	08 95       	ret

00001b8c <__tablejump2__>:
    1b8c:	ee 0f       	add	r30, r30
    1b8e:	ff 1f       	adc	r31, r31
    1b90:	88 1f       	adc	r24, r24
    1b92:	8b bf       	out	0x3b, r24	; 59
    1b94:	07 90       	elpm	r0, Z+
    1b96:	f6 91       	elpm	r31, Z
    1b98:	e0 2d       	mov	r30, r0
    1b9a:	19 94       	eijmp

00001b9c <__usmulhisi3>:
    1b9c:	0b d0       	rcall	.+22     	; 0x1bb4 <__umulhisi3>

00001b9e <__usmulhisi3_tail>:
    1b9e:	b7 ff       	sbrs	r27, 7
    1ba0:	08 95       	ret
    1ba2:	82 1b       	sub	r24, r18
    1ba4:	93 0b       	sbc	r25, r19
    1ba6:	08 95       	ret

00001ba8 <__mulshisi3>:
    1ba8:	b7 ff       	sbrs	r27, 7
    1baa:	13 c0       	rjmp	.+38     	; 0x1bd2 <__muluhisi3>

00001bac <__mulohisi3>:
    1bac:	12 d0       	rcall	.+36     	; 0x1bd2 <__muluhisi3>
    1bae:	82 1b       	sub	r24, r18
    1bb0:	93 0b       	sbc	r25, r19
    1bb2:	08 95       	ret

00001bb4 <__umulhisi3>:
    1bb4:	a2 9f       	mul	r26, r18
    1bb6:	b0 01       	movw	r22, r0
    1bb8:	b3 9f       	mul	r27, r19
    1bba:	c0 01       	movw	r24, r0
    1bbc:	a3 9f       	mul	r26, r19
    1bbe:	70 0d       	add	r23, r0
    1bc0:	81 1d       	adc	r24, r1
    1bc2:	11 24       	eor	r1, r1
    1bc4:	91 1d       	adc	r25, r1
    1bc6:	b2 9f       	mul	r27, r18
    1bc8:	70 0d       	add	r23, r0
    1bca:	81 1d       	adc	r24, r1
    1bcc:	11 24       	eor	r1, r1
    1bce:	91 1d       	adc	r25, r1
    1bd0:	08 95       	ret

00001bd2 <__muluhisi3>:
    1bd2:	f0 df       	rcall	.-32     	; 0x1bb4 <__umulhisi3>
    1bd4:	a5 9f       	mul	r26, r21
    1bd6:	90 0d       	add	r25, r0
    1bd8:	b4 9f       	mul	r27, r20
    1bda:	90 0d       	add	r25, r0
    1bdc:	a4 9f       	mul	r26, r20
    1bde:	80 0d       	add	r24, r0
    1be0:	91 1d       	adc	r25, r1
    1be2:	11 24       	eor	r1, r1
    1be4:	08 95       	ret

00001be6 <_exit>:
    1be6:	f8 94       	cli

00001be8 <__stop_program>:
    1be8:	ff cf       	rjmp	.-2      	; 0x1be8 <__stop_program>
